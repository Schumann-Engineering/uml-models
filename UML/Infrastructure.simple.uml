<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="2.1" xmlns:xmi="http://schema.omg.org/spec/XMI/2.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:Ecore="http://www.eclipse.org/uml2/schemas/Ecore/5" xmlns:uml="http://www.eclipse.org/uml2/3.0.0/UML" xsi:schemaLocation="http://www.eclipse.org/uml2/schemas/Ecore/5 pathmap://UML_PROFILES/Ecore.profile.uml#_z1OFcHjqEdy8S4Cr8Rc_NA">
  <uml:Model xmi:id="_z3j3UBZaEdqs4ZsykdgStg" name="InfrastructureLibrary">
    <packagedElement xmi:type="uml:Package" xmi:id="_3ADC7B74022D3C9FFCAA00D1" name="Core">
      <packagedElement xmi:type="uml:Package" xmi:id="_3ADC7B74022D3C9FFCB502E0" name="Abstractions">
        <packageImport xmi:id="_3ADC7B74022D3DEE2BE80333" importedPackage="_3ADC7B74022D3C9FFCC70354"/>
        <packagedElement xmi:type="uml:Package" xmi:id="_3ADC7B74022D3DF659EE021E" name="Literals">
          <packageImport xmi:id="_3ADC7B74022D3DF663400034"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_3ADC7B74022D3CB5A2FE03E5" name="LiteralBoolean">
            <ownedComment xmi:id="_rbfJaxTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3CB5A2FE03E5">
              <body>A literal Boolean is a specification of a Boolean value.</body>
            </ownedComment>
            <generalization xmi:id="_3ADC7B74022D3CB5A32B0118" general="_3ADC7B74022D3CB5A2060370"/>
            <ownedAttribute xmi:id="_3ADC7B74022D3CB5A3110161" name="value" type="_3ADC7B74022D3CA010AC0090">
              <ownedComment xmi:id="_rbo6chTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3CB5A3110161">
                <body>The specified Boolean value.</body>
              </ownedComment>
              <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_YDXU8GgaEdqfYrlcy8iLFA" type="_3ADC7B74022D3CA010AC0090"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_3ADC7B74022D3E1406E501AC" name="isComputable" isQuery="true" bodyCondition="_rbo6ZBTaEdqZu-3Jy1-uYg">
              <ownedComment xmi:id="_rbo6YBTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3E1406E501AC">
                <body>The query isComputable() is redefined to be true.</body>
              </ownedComment>
              <ownedRule xmi:id="_rbo6ZBTaEdqZu-3Jy1-uYg" name="spec" constrainedElement="_3ADC7B74022D3E1406E501AC">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_rbo6ZRTaEdqZu-3Jy1-uYg">
                  <language>OCL</language>
                  <body>result = true</body>
                </specification>
              </ownedRule>
              <ownedParameter xmi:id="_rbo6YxTaEdqZu-3Jy1-uYg" type="_3ADC7B74022D3CA010AC0090" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_3ADC7B74022D3E1407110029" name="booleanValue" isQuery="true" bodyCondition="_rbo6bRTaEdqZu-3Jy1-uYg">
              <ownedComment xmi:id="_rbo6aRTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3E1407110029">
                <body>The query booleanValue() gives the value.</body>
              </ownedComment>
              <ownedRule xmi:id="_rbo6bRTaEdqZu-3Jy1-uYg" name="spec" constrainedElement="_3ADC7B74022D3E1407110029">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_rbo6bhTaEdqZu-3Jy1-uYg">
                  <language>OCL</language>
                  <body>result = value</body>
                </specification>
              </ownedRule>
              <ownedParameter xmi:id="_rbo6bBTaEdqZu-3Jy1-uYg" type="_3ADC7B74022D3CA010AC0090" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_3ADC7B74022D3CB5A2720176" name="LiteralString">
            <ownedComment xmi:id="_rbo6dhTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3CB5A2720176">
              <body>A literal string is a specification of a string value.</body>
            </ownedComment>
            <generalization xmi:id="_3ADC7B74022D3CB5A2D101E1" general="_3ADC7B74022D3CB5A2060370"/>
            <ownedAttribute xmi:id="_3ADC7B74022D3CB5A28802FF" name="value" type="_3ADC7B74022D3CA010B103C3">
              <ownedComment xmi:id="_rbyEWhTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3CB5A28802FF">
                <body>The specified String value.</body>
              </ownedComment>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_g5BHAWgaEdqfYrlcy8iLFA" value="1"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_g5BHAGgaEdqfYrlcy8iLFA"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_3ADC7B74022D3E1407FF0374" name="isComputable" isQuery="true" bodyCondition="_rbo6fxTaEdqZu-3Jy1-uYg">
              <ownedComment xmi:id="_rbo6exTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3E1407FF0374">
                <body>The query isComputable() is redefined to be true.</body>
              </ownedComment>
              <ownedRule xmi:id="_rbo6fxTaEdqZu-3Jy1-uYg" name="spec" constrainedElement="_3ADC7B74022D3E1407FF0374">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_rbo6gBTaEdqZu-3Jy1-uYg">
                  <language>OCL</language>
                  <body>result = true</body>
                </specification>
              </ownedRule>
              <ownedParameter xmi:id="_rbo6fhTaEdqZu-3Jy1-uYg" type="_3ADC7B74022D3CA010AC0090" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_3ADC7B74022D3E140821003E" name="stringValue" isQuery="true" bodyCondition="_rbyEVRTaEdqZu-3Jy1-uYg">
              <ownedComment xmi:id="_rbyEURTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3E140821003E">
                <body>The query stringValue() gives the value.</body>
              </ownedComment>
              <ownedRule xmi:id="_rbyEVRTaEdqZu-3Jy1-uYg" name="spec" constrainedElement="_3ADC7B74022D3E140821003E">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_rbyEVhTaEdqZu-3Jy1-uYg">
                  <language>OCL</language>
                  <body>result = value</body>
                </specification>
              </ownedRule>
              <ownedParameter xmi:id="_rbyEVBTaEdqZu-3Jy1-uYg" type="_3ADC7B74022D3CA010B103C3" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_3ADC7B74022D3CB5A2060370" name="LiteralSpecification" isAbstract="true">
            <ownedComment xmi:id="_rbyEXhTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3CB5A2060370">
              <body>A literal specification identifies a literal constant being modeled.</body>
            </ownedComment>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_3ADC7B74022D3CB5A29200D2" name="LiteralNull">
            <ownedComment xmi:id="_rbyEYxTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3CB5A29200D2">
              <body>A literal null specifies the lack of a value.</body>
            </ownedComment>
            <generalization xmi:id="_3ADC7B74022D3CB5A2D5010B" general="_3ADC7B74022D3CB5A2060370"/>
            <ownedOperation xmi:id="_3ADC7B74022D3E1407B4000F" name="isComputable" isQuery="true" bodyCondition="_rb71UxTaEdqZu-3Jy1-uYg">
              <ownedComment xmi:id="_rbyEaBTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3E1407B4000F">
                <body>The query isComputable() is redefined to be true.</body>
              </ownedComment>
              <ownedRule xmi:id="_rb71UxTaEdqZu-3Jy1-uYg" name="spec" constrainedElement="_3ADC7B74022D3E1407B4000F">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_rb71VBTaEdqZu-3Jy1-uYg">
                  <language>OCL</language>
                  <body>result = true</body>
                </specification>
              </ownedRule>
              <ownedParameter xmi:id="_rb71UhTaEdqZu-3Jy1-uYg" type="_3ADC7B74022D3CA010AC0090" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_3ADC7B74022D3E1407D8029C" name="isNull" isQuery="true" bodyCondition="_rb71XBTaEdqZu-3Jy1-uYg">
              <ownedComment xmi:id="_rb71WBTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3E1407D8029C">
                <body>The query isNull() returns true.</body>
              </ownedComment>
              <ownedRule xmi:id="_rb71XBTaEdqZu-3Jy1-uYg" name="spec" constrainedElement="_3ADC7B74022D3E1407D8029C">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_rb71XRTaEdqZu-3Jy1-uYg">
                  <language>OCL</language>
                  <body>result = true</body>
                </specification>
              </ownedRule>
              <ownedParameter xmi:id="_rb71WxTaEdqZu-3Jy1-uYg" type="_3ADC7B74022D3CA010AC0090" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_3ADC7B74022D3CB5A23B01F0" name="LiteralInteger">
            <ownedComment xmi:id="_rb71YRTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3CB5A23B01F0">
              <body>A literal integer is a specification of an integer value.</body>
            </ownedComment>
            <generalization xmi:id="_3ADC7B74022D3CB5A2CC0144" general="_3ADC7B74022D3CB5A2060370"/>
            <ownedAttribute xmi:id="_3ADC7B74022D3CB5A2640253" name="value" type="_3ADC7B74022D3CA010A4007B">
              <ownedComment xmi:id="_rb71eBTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3CB5A2640253">
                <body>The specified Integer value.</body>
              </ownedComment>
              <defaultValue xmi:type="uml:LiteralInteger" xmi:id="_dugS0GgaEdqfYrlcy8iLFA" type="_3ADC7B74022D3CA010A4007B"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_3ADC7B74022D3E14074A00F3" name="isComputable" isQuery="true" bodyCondition="_rb71ahTaEdqZu-3Jy1-uYg">
              <ownedComment xmi:id="_rb71ZhTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3E14074A00F3">
                <body>The query isComputable() is redefined to be true.</body>
              </ownedComment>
              <ownedRule xmi:id="_rb71ahTaEdqZu-3Jy1-uYg" name="spec" constrainedElement="_3ADC7B74022D3E14074A00F3">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_rb71axTaEdqZu-3Jy1-uYg">
                  <language>OCL</language>
                  <body>result = true</body>
                </specification>
              </ownedRule>
              <ownedParameter xmi:id="_rb71aRTaEdqZu-3Jy1-uYg" type="_3ADC7B74022D3CA010AC0090" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_3ADC7B74022D3E14077700E4" name="integerValue" isQuery="true" bodyCondition="_rb71cxTaEdqZu-3Jy1-uYg">
              <ownedComment xmi:id="_rb71bxTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3E14077700E4">
                <body>The query integerValue() gives the value.</body>
              </ownedComment>
              <ownedRule xmi:id="_rb71cxTaEdqZu-3Jy1-uYg" name="spec" constrainedElement="_3ADC7B74022D3E14077700E4">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_rb71dBTaEdqZu-3Jy1-uYg">
                  <language>OCL</language>
                  <body>result = value</body>
                </specification>
              </ownedRule>
              <ownedParameter xmi:id="_rb71chTaEdqZu-3Jy1-uYg" type="_3ADC7B74022D3CA010A4007B" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_3ADC7B74022D3DF664BD01AE" name="LiteralUnlimitedNatural">
            <ownedComment xmi:id="_rcFmUxTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3DF664BD01AE">
              <body>A literal unlimited natural is a specification of an unlimited natural number.</body>
            </ownedComment>
            <generalization xmi:id="_3ADC7B74022D3DF664D30228" general="_3ADC7B74022D3CB5A2060370"/>
            <ownedAttribute xmi:id="_3ADC7B74022D3DF664DB022A" name="value" type="_3ADC7B74022D3DE6A93C0003">
              <ownedComment xmi:id="_rcFmahTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3DF664DB022A">
                <body>The specified UnlimitedNatural value.</body>
              </ownedComment>
              <defaultValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ntBxcGgaEdqfYrlcy8iLFA" type="_3ADC7B74022D3DE6A93C0003"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_3ADC7B74022D3E140869018C" name="isComputable" isQuery="true" bodyCondition="_rcFmXBTaEdqZu-3Jy1-uYg">
              <ownedComment xmi:id="_rcFmWBTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3E140869018C">
                <body>The query isComputable() is redefined to be true.</body>
              </ownedComment>
              <ownedRule xmi:id="_rcFmXBTaEdqZu-3Jy1-uYg" name="spec" constrainedElement="_3ADC7B74022D3E140869018C">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_rcFmXRTaEdqZu-3Jy1-uYg">
                  <language>OCL</language>
                  <body>result = true</body>
                </specification>
              </ownedRule>
              <ownedParameter xmi:id="_rcFmWxTaEdqZu-3Jy1-uYg" type="_3ADC7B74022D3CA010AC0090" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_3ADC7B74022D3E14088F01CD" name="unlimitedValue" isQuery="true" bodyCondition="_rcFmZRTaEdqZu-3Jy1-uYg">
              <ownedComment xmi:id="_rcFmYRTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3E14088F01CD">
                <body>The query unlimitedValue() gives the value.</body>
              </ownedComment>
              <ownedRule xmi:id="_rcFmZRTaEdqZu-3Jy1-uYg" name="spec" constrainedElement="_3ADC7B74022D3E14088F01CD">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_rcFmZhTaEdqZu-3Jy1-uYg">
                  <language>OCL</language>
                  <body>result = value</body>
                </specification>
              </ownedRule>
              <ownedParameter xmi:id="_rcFmZBTaEdqZu-3Jy1-uYg" type="_3ADC7B74022D3DE6A93C0003" direction="return"/>
            </ownedOperation>
          </packagedElement>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_3ADC7B74022D3C9FFCC70354" name="PrimitiveTypes">
        <packagedElement xmi:type="uml:PrimitiveType" xmi:id="_3ADC7B74022D3CA010A4007B" name="Integer" visibility="private">
          <ownedComment xmi:id="_rdk0FBTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3CA010A4007B">
            <body>An integer is a primitive type representing integer values.</body>
          </ownedComment>
        </packagedElement>
        <packagedElement xmi:type="uml:PrimitiveType" xmi:id="_3ADC7B74022D3CA010AC0090" name="Boolean" visibility="private">
          <ownedComment xmi:id="_rd3vARTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3CA010AC0090">
            <body>A Boolean type is used for logical expression, consisting of the predefined values true and false.</body>
          </ownedComment>
        </packagedElement>
        <packagedElement xmi:type="uml:PrimitiveType" xmi:id="_3ADC7B74022D3CA010B103C3" name="String" visibility="private">
          <ownedComment xmi:id="_reBgAxTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3CA010B103C3">
            <body>A string is a sequence of characters in some suitable character set used to display information about the model. Character sets may include non-Roman alphabets and characters.</body>
          </ownedComment>
        </packagedElement>
        <packagedElement xmi:type="uml:PrimitiveType" xmi:id="_3ADC7B74022D3DE6A93C0003" name="UnlimitedNatural" visibility="private">
          <ownedComment xmi:id="_reBgDRTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3DE6A93C0003">
            <body>An unlimited natural is a primitive type representing unlimited natural values.</body>
          </ownedComment>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_3ADC7B74022D3DE692AD00C7" name="Constructs">
        <packageImport xmi:id="_3ADC7B74022D41C2C20602EA" importedPackage="_3ADC7B74022D3C9FFCC70354"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_3ADC7B74022D3DE6C8630317" name="Classifier" isAbstract="true">
          <ownedComment xmi:id="_rg2xkRTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3DE6C8630317">
            <body>A classifier is a classification of instances - it describes a set of instances that have features in common. A classifier can specify a generalization hierarchy by referencing its general classifiers.</body>
          </ownedComment>
          <ownedRule xmi:id="_rg_7oBTaEdqZu-3Jy1-uYg" name="no_cycles_in_generalization" constrainedElement="_3ADC7B74022D3DE6C8630317">
            <ownedComment xmi:id="_rg_7nBTaEdqZu-3Jy1-uYg" annotatedElement="_rg_7oBTaEdqZu-3Jy1-uYg">
              <body>Generalization hierarchies must be directed and acyclical. A classifier can not be both a transitively general and transitively specific classifier of the same classifier.</body>
            </ownedComment>
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_rg_7oRTaEdqZu-3Jy1-uYg">
              <language>OCL</language>
              <body>not self.allParents()->includes(self)</body>
            </specification>
          </ownedRule>
          <ownedRule xmi:id="_rhJsgxTaEdqZu-3Jy1-uYg" name="specialize_type" constrainedElement="_3ADC7B74022D3DE6C8630317">
            <ownedComment xmi:id="_rg_7pRTaEdqZu-3Jy1-uYg" annotatedElement="_rhJsgxTaEdqZu-3Jy1-uYg">
              <body>A classifier may only specialize classifiers of a valid type.</body>
            </ownedComment>
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_rhJshBTaEdqZu-3Jy1-uYg">
              <language>OCL</language>
              <body>self.parents()->forAll(c | self.maySpecializeType(c))</body>
            </specification>
          </ownedRule>
          <generalization xmi:id="_3ADC7B74022D3DE6C8A403CF" general="_3ADC7B74022D3DE6C03E0388"/>
          <generalization xmi:id="_3ADC7B74022D3E55541701A4" general="_3ADC7B74022D3E555229003B"/>
          <ownedAttribute xmi:id="_3ADC7B74022D3DE6E42E034A" name="attribute" type="_3ADC7B74022D3DE6D57500AC" isReadOnly="true" isDerived="true" isDerivedUnion="true" subsettedProperty="_3ADC7B74022D3DFCBE7F0246" association="_3ADC7B74022D3DE6E42D0385">
            <ownedComment xmi:id="_rp8cNxTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3DE6E42E034A">
              <body>Refers to all of the Properties that are direct (i.e. not inherited or imported) attributes of the classifier.</body>
            </ownedComment>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rqFmExTaEdqZu-3Jy1-uYg" value="*"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rqFmEhTaEdqZu-3Jy1-uYg"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_3ADC7B74022D3DFCBE7F0246" name="feature" type="_3ADC7B74022D3DE6C7BD0034" isReadOnly="true" isDerived="true" isDerivedUnion="true" subsettedProperty="_3ADC7B74022D3DFCB82F00DA" association="_3ADC7B74022D3DFCBE7F0137">
            <ownedComment xmi:id="_rsLQzxTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3DFCBE7F0246">
              <body>Note that there may be members of the Classifier that are of the type Feature but are not included in this association, e.g. inherited features.</body>
            </ownedComment>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rsLQ0xTaEdqZu-3Jy1-uYg" value="*"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rsLQ0hTaEdqZu-3Jy1-uYg"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_3ADC7B74022D3E0270BE0395" name="general" type="_3ADC7B74022D3DE6C8630317" association="_3ADC7B74022D3E0270BC02FC">
            <ownedComment xmi:id="_rseLxxTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3E0270BE0395">
              <body>References the general classifier in the Generalization relationship.</body>
            </ownedComment>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rseLyxTaEdqZu-3Jy1-uYg" value="*"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rseLyhTaEdqZu-3Jy1-uYg"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_3ADC7B74022D4304A13201D9" name="inheritedMember" type="_3ADC7B74022D3DE6BC6B01BD" isReadOnly="true" isDerived="true" subsettedProperty="_3ADC7B74022D3DFCB82F00DA" association="_3ADC7B74022D4304A1300282">
            <ownedComment xmi:id="_hBVxYBVsEdqDjccWl3Bw0Q" annotatedElement="_3ADC7B74022D4304A13201D9">
              <body>Specifies all elements inherited by this classifier from the general classifiers.</body>
            </ownedComment>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rtEoqRTaEdqZu-3Jy1-uYg" value="*"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rtEoqBTaEdqZu-3Jy1-uYg"/>
          </ownedAttribute>
          <ownedOperation xmi:id="_3ADC7B74022D3E555A26019A" name="conformsTo" isQuery="true" redefinedOperation="_3ADC7B74022D42EE305C010B" bodyCondition="_rg2xnBTaEdqZu-3Jy1-uYg">
            <ownedComment xmi:id="_rg2xlxTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3E555A26019A">
              <body>The query conformsTo() gives true for a classifier that defines a type that conforms to another. This is used, for example, in the specification of signature conformance for operations.</body>
            </ownedComment>
            <ownedRule xmi:id="_rg2xnBTaEdqZu-3Jy1-uYg" name="spec" constrainedElement="_3ADC7B74022D3E555A26019A">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_rg2xnRTaEdqZu-3Jy1-uYg">
                <language>OCL</language>
                <body>result = (self=other) or (self.allParents()->includes(other))</body>
              </specification>
            </ownedRule>
            <ownedParameter xmi:id="_rg2xmhTaEdqZu-3Jy1-uYg" type="_3ADC7B74022D3CA010AC0090" direction="return"/>
            <ownedParameter xmi:id="_3ADC7B74022D3E555A8001D6" name="other" type="_3ADC7B74022D3DE6C8630317"/>
          </ownedOperation>
          <ownedOperation xmi:id="_3ADC7B74022D42EE305C00B1" name="allFeatures" isQuery="true" bodyCondition="_rg_7gxTaEdqZu-3Jy1-uYg">
            <ownedComment xmi:id="_rg2xoRTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D42EE305C00B1">
              <body>The query allFeatures() gives all of the features in the namespace of the classifier. In general, through mechanisms such as inheritance, this will be a larger set than feature.</body>
            </ownedComment>
            <ownedRule xmi:id="_rg_7gxTaEdqZu-3Jy1-uYg" name="spec" constrainedElement="_3ADC7B74022D42EE305C00B1">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_rg_7hBTaEdqZu-3Jy1-uYg">
                <language>OCL</language>
                <body>result = member->select(oclIsKindOf(Feature))</body>
              </specification>
            </ownedRule>
            <ownedParameter xmi:id="_rg_7ghTaEdqZu-3Jy1-uYg" type="_3ADC7B74022D3DE6C7BD0034" direction="return">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Gd0HQRTbEdqZu-3Jy1-uYg" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Gd0HQBTbEdqZu-3Jy1-uYg"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_3ADC7B74022D42EE305C00D9" name="general" isQuery="true" bodyCondition="_rg_7jhTaEdqZu-3Jy1-uYg">
            <ownedComment xmi:id="_rg_7iBTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D42EE305C00D9">
              <body>The general classifiers are the classifiers referenced by the generalization relationships.</body>
            </ownedComment>
            <ownedRule xmi:id="_rg_7jhTaEdqZu-3Jy1-uYg" name="spec" constrainedElement="_3ADC7B74022D42EE305C00D9 _3ADC7B74022D3E0270BE0395">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_rg_7jxTaEdqZu-3Jy1-uYg">
                <language>OCL</language>
                <body>result = self.parents()</body>
              </specification>
            </ownedRule>
            <ownedParameter xmi:id="_rg_7ixTaEdqZu-3Jy1-uYg" type="_3ADC7B74022D3DE6C8630317" direction="return">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Gd0HQxTbEdqZu-3Jy1-uYg" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Gd0HQhTbEdqZu-3Jy1-uYg"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_3ADC7B74022D42EE305C00DB" name="parents" isQuery="true" bodyCondition="_rg_7lxTaEdqZu-3Jy1-uYg">
            <ownedComment xmi:id="_rg_7kxTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D42EE305C00DB">
              <body>The query parents() gives all of the immediate ancestors of a generalized Classifier.</body>
            </ownedComment>
            <ownedRule xmi:id="_rg_7lxTaEdqZu-3Jy1-uYg" name="spec" constrainedElement="_3ADC7B74022D42EE305C00DB">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_rg_7mBTaEdqZu-3Jy1-uYg">
                <language>OCL</language>
                <body>result = generalization.general</body>
              </specification>
            </ownedRule>
            <ownedParameter xmi:id="_rg_7lhTaEdqZu-3Jy1-uYg" type="_3ADC7B74022D3DE6C8630317" direction="return">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Gd0HRRTbEdqZu-3Jy1-uYg" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Gd0HRBTbEdqZu-3Jy1-uYg"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_3ADC7B74022D42EE305C00F1" name="inheritedMember" isQuery="true" bodyCondition="_rhJsjhTaEdqZu-3Jy1-uYg">
            <ownedComment xmi:id="_rhJsiBTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D42EE305C00F1">
              <body>The inheritedMember association is derived by inheriting the inheritable members of the parents.</body>
            </ownedComment>
            <ownedRule xmi:id="_rhJsjhTaEdqZu-3Jy1-uYg" name="spec" constrainedElement="_3ADC7B74022D42EE305C00F1 _3ADC7B74022D4304A13201D9">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_rhJsjxTaEdqZu-3Jy1-uYg">
                <language>OCL</language>
                <body>result = self.inherit(self.parents()->collect(p | p.inheritableMembers(self))</body>
              </specification>
            </ownedRule>
            <ownedParameter xmi:id="_rhJsixTaEdqZu-3Jy1-uYg" type="_3ADC7B74022D3DE6BC6B01BD" direction="return">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Gd9RMRTbEdqZu-3Jy1-uYg" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Gd9RMBTbEdqZu-3Jy1-uYg"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_3ADC7B74022D42EE305C00F5" name="allParents" isQuery="true" bodyCondition="_rhJslxTaEdqZu-3Jy1-uYg">
            <ownedComment xmi:id="_rhJskxTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D42EE305C00F5">
              <body>The query allParents() gives all of the direct and indirect ancestors of a generalized Classifier.</body>
            </ownedComment>
            <ownedRule xmi:id="_rhJslxTaEdqZu-3Jy1-uYg" name="spec" constrainedElement="_3ADC7B74022D42EE305C00F5">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_rhJsmBTaEdqZu-3Jy1-uYg">
                <language>OCL</language>
                <body>result = self.parents()->union(self.parents()->collect(p | p.allParents())</body>
              </specification>
            </ownedRule>
            <ownedParameter xmi:id="_rhJslhTaEdqZu-3Jy1-uYg" type="_3ADC7B74022D3DE6C8630317" direction="return">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Gd9RMxTbEdqZu-3Jy1-uYg" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Gd9RMhTbEdqZu-3Jy1-uYg"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_3ADC7B74022D42EE305C00F7" name="inheritableMembers" isQuery="true" precondition="_rhJsoBTaEdqZu-3Jy1-uYg" bodyCondition="_rhJsohTaEdqZu-3Jy1-uYg">
            <ownedComment xmi:id="_rhJsnBTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D42EE305C00F7">
              <body>The query inheritableMembers() gives all of the members of a classifier that may be inherited in one of its descendants, subject to whatever visibility restrictions apply.</body>
            </ownedComment>
            <ownedRule xmi:id="_rhJsoBTaEdqZu-3Jy1-uYg" constrainedElement="_3ADC7B74022D42EE305C00F7">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_rhJsoRTaEdqZu-3Jy1-uYg">
                <language>OCL</language>
                <body>c.allParents()->includes(self)</body>
              </specification>
            </ownedRule>
            <ownedRule xmi:id="_rhJsohTaEdqZu-3Jy1-uYg" name="spec" constrainedElement="_3ADC7B74022D42EE305C00F7">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_rhJsoxTaEdqZu-3Jy1-uYg">
                <language>OCL</language>
                <body>result = member->select(m | c.hasVisibilityOf(m))</body>
              </specification>
            </ownedRule>
            <ownedParameter xmi:id="_rhJsnxTaEdqZu-3Jy1-uYg" type="_3ADC7B74022D3DE6BC6B01BD" direction="return">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Gd9RNRTbEdqZu-3Jy1-uYg" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Gd9RNBTbEdqZu-3Jy1-uYg"/>
            </ownedParameter>
            <ownedParameter xmi:id="_ZmupgB76EdqelquzpYSE-w" name="c" type="_3ADC7B74022D3DE6C8630317" effect="read"/>
          </ownedOperation>
          <ownedOperation xmi:id="_3ADC7B74022D42EE305C00FA" name="hasVisibilityOf" isQuery="true" precondition="_rhTdhBTaEdqZu-3Jy1-uYg" bodyCondition="_rhTdhhTaEdqZu-3Jy1-uYg">
            <ownedComment xmi:id="_rhJspxTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D42EE305C00FA">
              <body>The query hasVisibilityOf() determines whether a named element is visible in the classifier. By default all are visible. It is only called when the argument is something owned by a parent.</body>
            </ownedComment>
            <ownedRule xmi:id="_rhTdhBTaEdqZu-3Jy1-uYg" constrainedElement="_3ADC7B74022D42EE305C00FA">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_rhTdhRTaEdqZu-3Jy1-uYg">
                <language>OCL</language>
                <body>self.allParents()->collect(c | c.member)->includes(n)</body>
              </specification>
            </ownedRule>
            <ownedRule xmi:id="_rhTdhhTaEdqZu-3Jy1-uYg" name="spec" constrainedElement="_3ADC7B74022D42EE305C00FA">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_rhTdhxTaEdqZu-3Jy1-uYg">
                <language>OCL</language>
                <body>result = if (self.inheritedMember->includes(n)) then (n.visibility &lt;> #private) else true</body>
              </specification>
            </ownedRule>
            <ownedParameter xmi:id="_rhTdghTaEdqZu-3Jy1-uYg" type="_3ADC7B74022D3CA010AC0090" direction="return"/>
            <ownedParameter xmi:id="_3ADC7B74022D42EE60AC013F" name="n" type="_3ADC7B74022D3DE6BC6B01BD"/>
          </ownedOperation>
          <ownedOperation xmi:id="_3ADC7B74022D42EE305C0100" name="inherit" isQuery="true" bodyCondition="_rhTdkBTaEdqZu-3Jy1-uYg">
            <ownedComment xmi:id="_rhTdixTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D42EE305C0100">
              <body>The inherit operation is overridden to exclude redefined properties.</body>
            </ownedComment>
            <ownedRule xmi:id="_rhTdkBTaEdqZu-3Jy1-uYg" name="spec" constrainedElement="_3ADC7B74022D42EE305C0100">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_rhTdkRTaEdqZu-3Jy1-uYg">
                <language>OCL</language>
                <body>result = inhs</body>
              </specification>
            </ownedRule>
            <ownedParameter xmi:id="_rhTdjhTaEdqZu-3Jy1-uYg" type="_3ADC7B74022D3DE6BC6B01BD" direction="return">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Gd9RNxTbEdqZu-3Jy1-uYg" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Gd9RNhTbEdqZu-3Jy1-uYg"/>
            </ownedParameter>
            <ownedParameter xmi:id="_3ADC7B74022D42EE62220395" name="inhs" type="_3ADC7B74022D3DE6BC6B01BD">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_GeHCMRTbEdqZu-3Jy1-uYg" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_GeHCMBTbEdqZu-3Jy1-uYg"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_3ADC7B74022D42EE305C0108" name="maySpecializeType" isQuery="true" bodyCondition="_rhTdmhTaEdqZu-3Jy1-uYg">
            <ownedComment xmi:id="_rhTdlRTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D42EE305C0108">
              <body>The query maySpecializeType() determines whether this classifier may have a generalization relationship to classifiers of the specified type. By default a classifier may specialize classifiers of the same or a more general type. It is intended to be redefined by classifiers that have different specialization constraints.</body>
            </ownedComment>
            <ownedRule xmi:id="_rhTdmhTaEdqZu-3Jy1-uYg" name="spec" constrainedElement="_3ADC7B74022D42EE305C0108">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_rhTdmxTaEdqZu-3Jy1-uYg">
                <language>OCL</language>
                <body>result = self.oclIsKindOf(c.oclType)</body>
              </specification>
            </ownedRule>
            <ownedParameter xmi:id="_rhTdmBTaEdqZu-3Jy1-uYg" type="_3ADC7B74022D3CA010AC0090" direction="return"/>
            <ownedParameter xmi:id="_3ADC7B74022D42EE625E00B7" name="c" type="_3ADC7B74022D3DE6C8630317"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_3ADC7B74022D3DE6C82E03E4" name="DirectedRelationship" isAbstract="true">
          <ownedComment xmi:id="_rhTdnxTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3DE6C82E03E4">
            <body>A directed relationship represents a relationship between a collection of source model elements and a collection of target model elements.</body>
          </ownedComment>
          <generalization xmi:id="_3ADC7B74022D3DE6D02402A4" general="_3ADC7B74022D3DE6C8270177"/>
          <ownedAttribute xmi:id="_3ADC7B74022D3DFCAC7900D9" name="source" type="_3ADC7B74022D3DE6BAB70076" isReadOnly="true" isDerived="true" isDerivedUnion="true" subsettedProperty="_3ADC7B74022D3DFCAC2F019B" association="_3ADC7B74022D3DFCAC780308">
            <ownedComment xmi:id="_rr4V5BTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3DFCAC7900D9">
              <body>Specifies the sources of the DirectedRelationship.</body>
            </ownedComment>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rsBfwRTaEdqZu-3Jy1-uYg" value="*"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rsBfwBTaEdqZu-3Jy1-uYg" value="1"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_3ADC7B74022D3DFCACAF0090" name="target" type="_3ADC7B74022D3DE6BAB70076" isReadOnly="true" isDerived="true" isDerivedUnion="true" subsettedProperty="_3ADC7B74022D3DFCAC2F019B" association="_3ADC7B74022D3DFCACAE01F7">
            <ownedComment xmi:id="_rsBfxxTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3DFCACAF0090">
              <body>Specifies the targets of the DirectedRelationship.</body>
            </ownedComment>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rsBfyxTaEdqZu-3Jy1-uYg" value="*"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rsBfyhTaEdqZu-3Jy1-uYg" value="1"/>
          </ownedAttribute>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_3ADC7B74022D3DE6BAB70076" name="Element" isAbstract="true">
          <ownedComment xmi:id="_rhcncBTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3DE6BAB70076">
            <body>An element is a constituent of a model. As such, it has the capability of owning other elements.</body>
          </ownedComment>
          <ownedRule xmi:id="_rhcneBTaEdqZu-3Jy1-uYg" name="not_own_self" constrainedElement="_3ADC7B74022D3DE6BAB70076">
            <ownedComment xmi:id="_rhcndBTaEdqZu-3Jy1-uYg" annotatedElement="_rhcneBTaEdqZu-3Jy1-uYg">
              <body>An element may not directly or indirectly own itself.</body>
            </ownedComment>
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_rhcneRTaEdqZu-3Jy1-uYg">
              <language>OCL</language>
              <body>not self.allOwnedElements()->includes(self)</body>
            </specification>
          </ownedRule>
          <ownedRule xmi:id="_rhcngRTaEdqZu-3Jy1-uYg" name="has_owner" constrainedElement="_3ADC7B74022D3DE6BAB70076">
            <ownedComment xmi:id="_rhcnfRTaEdqZu-3Jy1-uYg" annotatedElement="_rhcngRTaEdqZu-3Jy1-uYg">
              <body>Elements that must be owned must have an owner.</body>
            </ownedComment>
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_rhcnghTaEdqZu-3Jy1-uYg">
              <language>OCL</language>
              <body>self.mustBeOwned() implies owner->notEmpty()</body>
            </specification>
          </ownedRule>
          <ownedAttribute xmi:id="_3ADC7B74022D3DFCA80700B4" name="ownedElement" type="_3ADC7B74022D3DE6BAB70076" isReadOnly="true" isDerived="true" isDerivedUnion="true" aggregation="composite" association="_3ADC7B74022D3DFCA805021A">
            <ownedComment xmi:id="_rruk2hTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3DFCA80700B4">
              <body>The Elements owned by this element.</body>
            </ownedComment>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rruk3hTaEdqZu-3Jy1-uYg" value="*"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rruk3RTaEdqZu-3Jy1-uYg"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_3ADC7B74022D3DFCA80700BE" name="owner" type="_3ADC7B74022D3DE6BAB70076" isReadOnly="true" isDerived="true" isDerivedUnion="true" association="_3ADC7B74022D3DFCA805021A">
            <ownedComment xmi:id="_rruk4hTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3DFCA80700BE">
              <body>The Element that owns this element.</body>
            </ownedComment>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rruk5hTaEdqZu-3Jy1-uYg" value="1"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rruk5RTaEdqZu-3Jy1-uYg"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_3ADC7B74022D41781AB80146" name="ownedComment" type="_3ADC7B74022D41781AA6038F" aggregation="composite" subsettedProperty="_3ADC7B74022D3DFCA80700B4" association="_3ADC7B74022D41781AB701BD">
            <ownedComment xmi:id="_rs63rBTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D41781AB80146">
              <body>The Comments owned by this element.</body>
            </ownedComment>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rs63sBTaEdqZu-3Jy1-uYg" value="*"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rs63rxTaEdqZu-3Jy1-uYg"/>
          </ownedAttribute>
          <ownedOperation xmi:id="_3ADC7B74022D42EE305C006A" name="allOwnedElements" isQuery="true" bodyCondition="_rhmYcxTaEdqZu-3Jy1-uYg">
            <ownedComment xmi:id="_rhcnhhTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D42EE305C006A">
              <body>The query allOwnedElements() gives all of the direct and indirect owned elements of an element.</body>
            </ownedComment>
            <ownedRule xmi:id="_rhmYcxTaEdqZu-3Jy1-uYg" name="spec" constrainedElement="_3ADC7B74022D42EE305C006A">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_rhmYdBTaEdqZu-3Jy1-uYg">
                <language>OCL</language>
                <body>result = ownedElement->union(ownedElement->collect(e | e.allOwnedElements()))</body>
              </specification>
            </ownedRule>
            <ownedParameter xmi:id="_rhmYchTaEdqZu-3Jy1-uYg" type="_3ADC7B74022D3DE6BAB70076" direction="return">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_GeHCMxTbEdqZu-3Jy1-uYg" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_GeHCMhTbEdqZu-3Jy1-uYg"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_3ADC7B74022D42EE305C0073" name="mustBeOwned" isQuery="true" bodyCondition="_rhmYfBTaEdqZu-3Jy1-uYg">
            <ownedComment xmi:id="_rhmYeBTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D42EE305C0073">
              <body>The query mustBeOwned() indicates whether elements of this type must have an owner. Subclasses of Element that do not require an owner must override this operation.</body>
            </ownedComment>
            <ownedRule xmi:id="_rhmYfBTaEdqZu-3Jy1-uYg" name="spec" constrainedElement="_3ADC7B74022D42EE305C0073">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_rhmYfRTaEdqZu-3Jy1-uYg">
                <language>OCL</language>
                <body>result = true</body>
              </specification>
            </ownedRule>
            <ownedParameter xmi:id="_rhmYexTaEdqZu-3Jy1-uYg" type="_3ADC7B74022D3CA010AC0090" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_3ADC7B74022D3DE6C7BD0034" name="Feature" isAbstract="true">
          <ownedComment xmi:id="_rhmYgRTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3DE6C7BD0034">
            <body>A feature declares a behavioral or structural characteristic of instances of classifiers.</body>
          </ownedComment>
          <generalization xmi:id="_3ADC7B74022D3DE6CEB001C2" general="_3ADC7B74022D3DE6C81D0244"/>
          <ownedAttribute xmi:id="_3ADC7B74022D3DFCBE7F025A" name="featuringClassifier" type="_3ADC7B74022D3DE6C8630317" isReadOnly="true" isDerived="true" isDerivedUnion="true" association="_3ADC7B74022D3DFCBE7F0137">
            <ownedComment xmi:id="_rsLQ1xTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3DFCBE7F025A">
              <body>The Classifiers that have this Feature as a feature.</body>
            </ownedComment>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rsVBwxTaEdqZu-3Jy1-uYg" value="*"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rsVBwhTaEdqZu-3Jy1-uYg"/>
          </ownedAttribute>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_3ADC7B74022D3DE6C66D02F8" name="MultiplicityElement" isAbstract="true">
          <ownedComment xmi:id="_rhmYhhTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3DE6C66D02F8">
            <body>A multiplicity is a definition of an inclusive interval of non-negative integers beginning with a lower bound and ending with a (possibly infinite) upper bound. A multiplicity element embeds this information to specify the allowable cardinalities for an instantiation of this element.</body>
          </ownedComment>
          <ownedRule xmi:id="_rhmYjxTaEdqZu-3Jy1-uYg" name="upper_gt_0" constrainedElement="_3ADC7B74022D3DE6C66D02F8">
            <ownedComment xmi:id="_rhmYixTaEdqZu-3Jy1-uYg" annotatedElement="_rhmYjxTaEdqZu-3Jy1-uYg">
              <body>A multiplicity must define at least one valid cardinality that is greater than zero.</body>
            </ownedComment>
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_rhmYkBTaEdqZu-3Jy1-uYg">
              <language>OCL</language>
              <body>upperBound()->notEmpty() implies upperBound() > 0</body>
            </specification>
          </ownedRule>
          <ownedRule xmi:id="_rlBf4xTaEdqZu-3Jy1-uYg" name="upper_ge_lower" constrainedElement="_3ADC7B74022D3DE6C66D02F8">
            <ownedComment xmi:id="_rhviYRTaEdqZu-3Jy1-uYg" annotatedElement="_rlBf4xTaEdqZu-3Jy1-uYg">
              <body>The upper bound must be greater than or equal to the lower bound.</body>
            </ownedComment>
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_rlBf5BTaEdqZu-3Jy1-uYg">
              <language>OCL</language>
              <body>(upperBound()->notEmpty() and lowerBound()->notEmpty()) implies upperBound() >= lowerBound()</body>
            </specification>
          </ownedRule>
          <ownedRule xmi:id="_rlLQ7hTaEdqZu-3Jy1-uYg" name="lower_ge_0" constrainedElement="_3ADC7B74022D3DE6C66D02F8">
            <ownedComment xmi:id="_rlLQ6hTaEdqZu-3Jy1-uYg" annotatedElement="_rlLQ7hTaEdqZu-3Jy1-uYg">
              <body>The lower bound must be a non-negative integer literal.</body>
            </ownedComment>
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_rlLQ7xTaEdqZu-3Jy1-uYg">
              <language>OCL</language>
              <body>lowerBound()->notEmpty() implies lowerBound() >= 0</body>
            </specification>
          </ownedRule>
          <generalization xmi:id="_3ADC7B74022D3DE6C6E702B7" general="_3ADC7B74022D3DE6BAB70076"/>
          <ownedAttribute xmi:id="_3ADC7B74022D41C06EAD027D" name="isOrdered" type="_3ADC7B74022D3CA010AC0090">
            <ownedComment xmi:id="_rleL2BTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D41C06EAD027D">
              <body>For a multivalued multiplicity, this attribute specifies whether the values in an instantiation of this element are sequentially ordered.</body>
            </ownedComment>
            <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_GeHCNBTbEdqZu-3Jy1-uYg"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_3ADC7B74022D41C06EAD0287" name="isUnique" type="_3ADC7B74022D3CA010AC0090">
            <ownedComment xmi:id="_rleL3RTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D41C06EAD0287">
              <body>For a multivalued multiplicity, this attributes specifies whether the values in an instantiation of this element are unique.</body>
            </ownedComment>
            <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_GeHCNRTbEdqZu-3Jy1-uYg" value="true"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_3ADC7B74022D41C06EAD0288" name="lower" type="_3ADC7B74022D3CA010A4007B">
            <ownedComment xmi:id="_rleL4hTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D41C06EAD0288">
              <body>Specifies the lower bound of the multiplicity interval.</body>
            </ownedComment>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rleL5hTaEdqZu-3Jy1-uYg" value="1"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rleL5RTaEdqZu-3Jy1-uYg"/>
            <defaultValue xmi:type="uml:LiteralInteger" xmi:id="_GeHCNhTbEdqZu-3Jy1-uYg" value="1"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_3ADC7B74022D41C06EAD0291" name="upper" type="_3ADC7B74022D3DE6A93C0003">
            <ownedComment xmi:id="_rleL6RTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D41C06EAD0291">
              <body>Specifies the upper bound of the multiplicity interval.</body>
            </ownedComment>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rleL7RTaEdqZu-3Jy1-uYg" value="1"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rleL7BTaEdqZu-3Jy1-uYg"/>
            <defaultValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_GeQMIBTbEdqZu-3Jy1-uYg" value="1"/>
          </ownedAttribute>
          <ownedOperation xmi:id="_3ADC7B74022D41C06EDF02B1" name="isMultivalued" isQuery="true" precondition="_rlUa0xTaEdqZu-3Jy1-uYg" bodyCondition="_rlUa1RTaEdqZu-3Jy1-uYg">
            <ownedComment xmi:id="_rlLQ_hTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D41C06EDF02B1">
              <body>The query isMultivalued() checks whether this multiplicity has an upper bound greater than one.</body>
            </ownedComment>
            <ownedRule xmi:id="_rlUa0xTaEdqZu-3Jy1-uYg" constrainedElement="_3ADC7B74022D41C06EDF02B1">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_rlUa1BTaEdqZu-3Jy1-uYg">
                <language>OCL</language>
                <body>upperBound()->notEmpty()</body>
              </specification>
            </ownedRule>
            <ownedRule xmi:id="_rlUa1RTaEdqZu-3Jy1-uYg" name="spec" constrainedElement="_3ADC7B74022D41C06EDF02B1">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_rlUa1hTaEdqZu-3Jy1-uYg">
                <language>OCL</language>
                <body>result = upperBound() > 1</body>
              </specification>
            </ownedRule>
            <ownedParameter xmi:id="_rlUa0hTaEdqZu-3Jy1-uYg" type="_3ADC7B74022D3CA010AC0090" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_3ADC7B74022D41C06EDF02BB" name="includesMultiplicity" isQuery="true" precondition="_rlUa3xTaEdqZu-3Jy1-uYg" bodyCondition="_rlUa4RTaEdqZu-3Jy1-uYg">
            <ownedComment xmi:id="_rlUa2hTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D41C06EDF02BB">
              <body>The query includesMultiplicity() checks whether this multiplicity includes all the cardinalities allowed by the specified multiplicity.</body>
            </ownedComment>
            <ownedRule xmi:id="_rlUa3xTaEdqZu-3Jy1-uYg" constrainedElement="_3ADC7B74022D41C06EDF02BB">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_rlUa4BTaEdqZu-3Jy1-uYg">
                <language>OCL</language>
                <body>self.upperBound()->notEmpty() and self.lowerBound()->notEmpty() and M.upperBound()->notEmpty() and M.lowerBound()->notEmpty()</body>
              </specification>
            </ownedRule>
            <ownedRule xmi:id="_rlUa4RTaEdqZu-3Jy1-uYg" name="spec" constrainedElement="_3ADC7B74022D41C06EDF02BB">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_rlUa4hTaEdqZu-3Jy1-uYg">
                <language>OCL</language>
                <body>result = (self.lowerBound() &lt;= M.lowerBound()) and (self.upperBound() >= M.upperBound())</body>
              </specification>
            </ownedRule>
            <ownedParameter xmi:id="_rlUa3RTaEdqZu-3Jy1-uYg" type="_3ADC7B74022D3CA010AC0090" direction="return"/>
            <ownedParameter xmi:id="_3ADC7B74022D41C06EDF02BC" name="M" type="_3ADC7B74022D3DE6C66D02F8"/>
          </ownedOperation>
          <ownedOperation xmi:id="_3ADC7B74022D41C06EDF02BD" name="includesCardinality" isQuery="true" precondition="_rlUa6xTaEdqZu-3Jy1-uYg" bodyCondition="_rlUa7RTaEdqZu-3Jy1-uYg">
            <ownedComment xmi:id="_rlUa5hTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D41C06EDF02BD">
              <body>The query includesCardinality() checks whether the specified cardinality is valid for this multiplicity.</body>
            </ownedComment>
            <ownedRule xmi:id="_rlUa6xTaEdqZu-3Jy1-uYg" constrainedElement="_3ADC7B74022D41C06EDF02BD">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_rlUa7BTaEdqZu-3Jy1-uYg">
                <language>OCL</language>
                <body>upperBound()->notEmpty() and lowerBound()->notEmpty()</body>
              </specification>
            </ownedRule>
            <ownedRule xmi:id="_rlUa7RTaEdqZu-3Jy1-uYg" name="spec" constrainedElement="_3ADC7B74022D41C06EDF02BD">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_rlUa7hTaEdqZu-3Jy1-uYg">
                <language>OCL</language>
                <body>result = (lowerBound() &lt;= C) and (upperBound() >= C)</body>
              </specification>
            </ownedRule>
            <ownedParameter xmi:id="_rlUa6RTaEdqZu-3Jy1-uYg" type="_3ADC7B74022D3CA010AC0090" direction="return"/>
            <ownedParameter xmi:id="_3ADC7B74022D41C06EDF02BE" name="C" type="_3ADC7B74022D3CA010A4007B"/>
          </ownedOperation>
          <ownedOperation xmi:id="_3ADC7B74022D42EE305C00C6" name="lowerBound" isQuery="true" bodyCondition="_rlUa9hTaEdqZu-3Jy1-uYg">
            <ownedComment xmi:id="_rlUa8hTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D42EE305C00C6">
              <body>The query lowerBound() returns the lower bound of the multiplicity as an integer.</body>
            </ownedComment>
            <ownedRule xmi:id="_rlUa9hTaEdqZu-3Jy1-uYg" name="spec" constrainedElement="_3ADC7B74022D42EE305C00C6">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_rlUa9xTaEdqZu-3Jy1-uYg">
                <language>OCL</language>
                <body>result = if lower->notEmpty() then lower else 1 endif</body>
              </specification>
            </ownedRule>
            <ownedParameter xmi:id="_rlUa9RTaEdqZu-3Jy1-uYg" type="_3ADC7B74022D3CA010A4007B" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_3ADC7B74022D42EE305C00C8" name="upperBound" isQuery="true" bodyCondition="_rleL0xTaEdqZu-3Jy1-uYg">
            <ownedComment xmi:id="_rlUa-xTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D42EE305C00C8">
              <body>The query upperBound() returns the upper bound of the multiplicity for a bounded multiplicity as an unlimited natural.</body>
            </ownedComment>
            <ownedRule xmi:id="_rleL0xTaEdqZu-3Jy1-uYg" name="spec" constrainedElement="_3ADC7B74022D42EE305C00C8">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_rleL1BTaEdqZu-3Jy1-uYg">
                <language>OCL</language>
                <body>result = if upper->notEmpty() then upper else 1 endif</body>
              </specification>
            </ownedRule>
            <ownedParameter xmi:id="_rleL0hTaEdqZu-3Jy1-uYg" type="_3ADC7B74022D3DE6A93C0003" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_3ADC7B74022D3DE6C03E0388" name="Namespace" isAbstract="true">
          <ownedComment xmi:id="_rleL8BTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3DE6C03E0388">
            <body>A namespace is an element in a model that contains a set of named elements that can be identified by name.</body>
          </ownedComment>
          <ownedRule xmi:id="_rlxGzRTaEdqZu-3Jy1-uYg" name="members_distinguishable" constrainedElement="_3ADC7B74022D3DE6C03E0388">
            <ownedComment xmi:id="_rlxGyRTaEdqZu-3Jy1-uYg" annotatedElement="_rlxGzRTaEdqZu-3Jy1-uYg">
              <body>All the members of a Namespace are distinguishable within it.</body>
            </ownedComment>
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_rlxGzhTaEdqZu-3Jy1-uYg">
              <language>OCL</language>
              <body>membersAreDistinguishable()</body>
            </specification>
          </ownedRule>
          <generalization xmi:id="_3ADC7B74022D3DE6C04E0326" general="_3ADC7B74022D3DE6BC6B01BD"/>
          <ownedAttribute xmi:id="_3ADC7B74022D3DEE234B0163" name="importedMember" type="_3ADC7B74022D3DE6C1F002C3" isReadOnly="true" isDerived="true" subsettedProperty="_3ADC7B74022D3DFCB82F00DA" association="_3ADC7B74022D3DEE234A0342">
            <ownedComment xmi:id="_rq-99RTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3DEE234B0163">
              <body>References the PackageableElements that are members of this Namespace as a result of either PackageImports or ElementImports.</body>
            </ownedComment>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rq-9-RTaEdqZu-3Jy1-uYg" value="*"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rq-9-BTaEdqZu-3Jy1-uYg"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_3ADC7B74022D3DE6E0040315" name="elementImport" type="_3ADC7B74022D3DE6D5E7016E" aggregation="composite" subsettedProperty="_3ADC7B74022D3DFCA80700B4" association="_3ADC7B74022D3DE6E0040076">
            <ownedComment xmi:id="_rrIu9xTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3DE6E0040315">
              <body>References the ElementImports owned by the Namespace.</body>
            </ownedComment>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rrIu-xTaEdqZu-3Jy1-uYg" value="*"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rrIu-hTaEdqZu-3Jy1-uYg"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_3ADC7B74022D3DE6E00902C3" name="packageImport" type="_3ADC7B74022D3DE6D5E002D7" aggregation="composite" subsettedProperty="_3ADC7B74022D3DFCA80700B4" association="_3ADC7B74022D3DE6E00900B0">
            <ownedComment xmi:id="_rrIvBBTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3DE6E00902C3">
              <body>References the PackageImports owned by the Namespace.</body>
            </ownedComment>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rrIvCBTaEdqZu-3Jy1-uYg" value="*"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rrIvBxTaEdqZu-3Jy1-uYg"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_3ADC7B74022D3DFCB8650177" name="ownedMember" type="_3ADC7B74022D3DE6BC6B01BD" isReadOnly="true" isDerived="true" isDerivedUnion="true" aggregation="composite" subsettedProperty="_3ADC7B74022D3DFCB82F00DA _3ADC7B74022D3DFCA80700B4" association="_3ADC7B74022D3DFCB86303CD">
            <ownedComment xmi:id="_rsn8shTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3DFCB8650177">
              <body>A collection of NamedElements owned by the Namespace.</body>
            </ownedComment>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rsn8thTaEdqZu-3Jy1-uYg" value="*"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rsn8tRTaEdqZu-3Jy1-uYg"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_3ADC7B74022D3DFCB82F00DA" name="member" type="_3ADC7B74022D3DE6BC6B01BD" isReadOnly="true" isDerived="true" isDerivedUnion="true" association="_3ADC7B74022D3DFCB82E022D">
            <ownedComment xmi:id="_rsn8wxTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3DFCB82F00DA">
              <body>A collection of NamedElements identifiable within the Namespace, either by being owned or by being introduced by importing or inheritance.</body>
            </ownedComment>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rsxtsxTaEdqZu-3Jy1-uYg" value="*"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rsxtshTaEdqZu-3Jy1-uYg"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_s_9I8R-zEdqIE6mxof-rZA" name="ownedRule" type="_3ADC7B74022D3DE766450007" aggregation="composite" subsettedProperty="_3ADC7B74022D3DFCB8650177" association="_s_9I8B-zEdqIE6mxof-rZA">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_s_9I9B-zEdqIE6mxof-rZA" value="*"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_s_9I8x-zEdqIE6mxof-rZA"/>
          </ownedAttribute>
          <ownedOperation xmi:id="_3ADC7B74022D3E142ABF004B" name="importedMember" isQuery="true" bodyCondition="_rln82hTaEdqZu-3Jy1-uYg">
            <ownedComment xmi:id="_rln81BTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3E142ABF004B">
              <body>The importedMember property is derived from the ElementImports and the PackageImports. References the PackageableElements that are members of this Namespace as a result of either PackageImports or ElementImports.</body>
            </ownedComment>
            <ownedRule xmi:id="_rln82hTaEdqZu-3Jy1-uYg" name="spec" constrainedElement="_3ADC7B74022D3E142ABF004B _3ADC7B74022D3DEE234B0163">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_rln82xTaEdqZu-3Jy1-uYg">
                <language>OCL</language>
                <body>result = self.importMembers(self.elementImport.importedElement.asSet()->union(self.packageImport.importedPackage->collect(p | p.visibleMembers())))</body>
              </specification>
            </ownedRule>
            <ownedParameter xmi:id="_rln81xTaEdqZu-3Jy1-uYg" type="_3ADC7B74022D3DE6C1F002C3" direction="return">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_GeZ9IRTbEdqZu-3Jy1-uYg" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_GeZ9IBTbEdqZu-3Jy1-uYg"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_3ADC7B74022D3E142BF301A2" name="getNamesOfMember" isQuery="true" bodyCondition="_rln85BTaEdqZu-3Jy1-uYg">
            <ownedComment xmi:id="_rln83xTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3E142BF301A2">
              <body>The query getNamesOfMember() takes importing into account. It gives back the set of names that an element would have in an importing namespace, either because it is owned, or if not owned then imported individually, or if not individually then from a package.</body>
            </ownedComment>
            <ownedRule xmi:id="_rln85BTaEdqZu-3Jy1-uYg" name="spec" constrainedElement="_3ADC7B74022D3E142BF301A2">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_rln85RTaEdqZu-3Jy1-uYg">
                <language>OCL</language>
                <body>result = if self.ownedMember->includes(element)
then Set{}->include(element.name)
else let elementImports: ElementImport = self.elementImport->select(ei | ei.importedElement = element) in
  if elementImports->notEmpty()
  then elementImports->collect(el | el.getName())
  else self.packageImport->select(pi | pi.importedPackage.visibleMembers()->includes(element))->collect(pi | pi.importedPackage.getNamesOfMember(element))
  endif
endif</body>
              </specification>
            </ownedRule>
            <ownedParameter xmi:id="_rln84hTaEdqZu-3Jy1-uYg" type="_3ADC7B74022D3CA010B103C3" direction="return">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_GeZ9IxTbEdqZu-3Jy1-uYg" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_GeZ9IhTbEdqZu-3Jy1-uYg"/>
            </ownedParameter>
            <ownedParameter xmi:id="_3ADC7B74022D41B05E1D014F" name="element" type="_3ADC7B74022D3DE6BC6B01BD"/>
          </ownedOperation>
          <ownedOperation xmi:id="_3ADC7B74022D3E142CAC03E3" name="importMembers" isQuery="true" bodyCondition="_rln87hTaEdqZu-3Jy1-uYg">
            <ownedComment xmi:id="_rln86RTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3E142CAC03E3">
              <body>The query importMembers() defines which of a set of PackageableElements are actually imported into the namespace. This excludes hidden ones, i.e., those which have names that conflict with names of owned members, and also excludes elements which would have the same name when imported.</body>
            </ownedComment>
            <ownedRule xmi:id="_rln87hTaEdqZu-3Jy1-uYg" name="spec" constrainedElement="_3ADC7B74022D3E142CAC03E3">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_rln87xTaEdqZu-3Jy1-uYg">
                <language>OCL</language>
                <body>result = self.excludeCollisions(imps)->select(imp | self.ownedMember->forAll(mem | mem.imp.isDistinguishableFrom(mem, self)))</body>
              </specification>
            </ownedRule>
            <ownedParameter xmi:id="_rln87BTaEdqZu-3Jy1-uYg" type="_3ADC7B74022D3DE6C1F002C3" direction="return">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_GeZ9JRTbEdqZu-3Jy1-uYg" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_GeZ9JBTbEdqZu-3Jy1-uYg"/>
            </ownedParameter>
            <ownedParameter xmi:id="_3ADC7B74022D3E142CD402DC" name="imps" type="_3ADC7B74022D3DE6C1F002C3">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_GeZ9JxTbEdqZu-3Jy1-uYg" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_GeZ9JhTbEdqZu-3Jy1-uYg"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_3ADC7B74022D3E142D230163" name="excludeCollisions" isQuery="true" bodyCondition="_rlxGxBTaEdqZu-3Jy1-uYg">
            <ownedComment xmi:id="_rln88xTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3E142D230163">
              <body>The query excludeCollisions() excludes from a set of PackageableElements any that would not be distinguishable from each other in this namespace.</body>
            </ownedComment>
            <ownedRule xmi:id="_rlxGxBTaEdqZu-3Jy1-uYg" name="spec" constrainedElement="_3ADC7B74022D3E142D230163">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_rlxGxRTaEdqZu-3Jy1-uYg">
                <language>OCL</language>
                <body>result = imps->reject(imp1 | imps.exists(imp2 | not imp1.isDistinguishableFrom(imp2, self)))</body>
              </specification>
            </ownedRule>
            <ownedParameter xmi:id="_rlxGwhTaEdqZu-3Jy1-uYg" type="_3ADC7B74022D3DE6C1F002C3" direction="return">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_GeZ9KRTbEdqZu-3Jy1-uYg" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_GeZ9KBTbEdqZu-3Jy1-uYg"/>
            </ownedParameter>
            <ownedParameter xmi:id="_3ADC7B74022D3E142D460312" name="imps" type="_3ADC7B74022D3DE6C1F002C3">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_GejuIRTbEdqZu-3Jy1-uYg" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_GejuIBTbEdqZu-3Jy1-uYg"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_3ADC7B74022D42EE305C00AF" name="membersAreDistinguishable" isQuery="true" bodyCondition="_rlxG1hTaEdqZu-3Jy1-uYg">
            <ownedComment xmi:id="_rlxG0hTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D42EE305C00AF">
              <body>The Boolean query membersAreDistinguishable() determines whether all of the namespace's members are distinguishable within it.</body>
            </ownedComment>
            <ownedRule xmi:id="_rlxG1hTaEdqZu-3Jy1-uYg" name="spec" constrainedElement="_3ADC7B74022D42EE305C00AF">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_rlxG1xTaEdqZu-3Jy1-uYg">
                <language>OCL</language>
                <body>result = self.member->forAll( memb |
	self.member->excluding(memb)->forAll(other |
		memb.isDistinguishableFrom(other, self)))</body>
              </specification>
            </ownedRule>
            <ownedParameter xmi:id="_rlxG1RTaEdqZu-3Jy1-uYg" type="_3ADC7B74022D3CA010AC0090" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_3ADC7B74022D3DE6C1F002C3" name="PackageableElement" isAbstract="true">
          <ownedComment xmi:id="_rlxG2xTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3DE6C1F002C3">
            <body>A packageable element indicates a named element that may be owned directly by a package.</body>
          </ownedComment>
          <generalization xmi:id="_3ADC7B74022D3DE6C2130328" general="_3ADC7B74022D3DE6BC6B01BD"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_3ADC7B74022D3DE6C81D0244" name="RedefinableElement" isAbstract="true">
          <ownedComment xmi:id="_rlxG4BTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3DE6C81D0244">
            <body>A redefinable element is an element that, when defined in the context of a classifier, can be redefined more specifically or differently in the context of another classifier that specializes (directly or indirectly) the context classifier.</body>
          </ownedComment>
          <ownedRule xmi:id="_rl63yBTaEdqZu-3Jy1-uYg" name="redefinition_context_valid" constrainedElement="_3ADC7B74022D3DE6C81D0244">
            <ownedComment xmi:id="_rl63xBTaEdqZu-3Jy1-uYg" annotatedElement="_rl63yBTaEdqZu-3Jy1-uYg">
              <body>At least one of the redefinition contexts of the redefining element must be a specialization of at least one of the redefinition contexts for each redefined element.</body>
            </ownedComment>
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_rl63yRTaEdqZu-3Jy1-uYg">
              <language>OCL</language>
              <body>self.redefinedElement->forAll(e | self.isRedefinitionContextValid(e))</body>
            </specification>
          </ownedRule>
          <ownedRule xmi:id="_rl630RTaEdqZu-3Jy1-uYg" name="redefinition_consistent" constrainedElement="_3ADC7B74022D3DE6C81D0244">
            <ownedComment xmi:id="_rl63zRTaEdqZu-3Jy1-uYg" annotatedElement="_rl630RTaEdqZu-3Jy1-uYg">
              <body>A redefining element must be consistent with each redefined element.</body>
            </ownedComment>
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_rl630hTaEdqZu-3Jy1-uYg">
              <language>OCL</language>
              <body>self.redefinedElement->forAll(re | re.isConsistentWith(self))</body>
            </specification>
          </ownedRule>
          <generalization xmi:id="_3ADC7B74022D3DE6CE6B037C" general="_3ADC7B74022D3DE6BC6B01BD"/>
          <ownedAttribute xmi:id="_3ADC7B74022D3DFCBDBD028D" name="redefinitionContext" type="_3ADC7B74022D3DE6C8630317" isReadOnly="true" isDerived="true" isDerivedUnion="true" association="_3ADC7B74022D3DFCBDBD0034">
            <ownedComment xmi:id="_rsBf0RTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3DFCBDBD028D">
              <body>References the contexts that this element may be redefined from.</body>
            </ownedComment>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rsBf1RTaEdqZu-3Jy1-uYg" value="*"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rsBf1BTaEdqZu-3Jy1-uYg"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_3ADC7B74022D3DFCBE1F00FD" name="redefinedElement" type="_3ADC7B74022D3DE6C81D0244" isReadOnly="true" isDerived="true" isDerivedUnion="true" association="_3ADC7B74022D3DFCBE1D0317">
            <ownedComment xmi:id="_rsLQxRTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3DFCBE1F00FD">
              <body>The redefinable element that is being redefined by this element.</body>
            </ownedComment>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rsLQyRTaEdqZu-3Jy1-uYg" value="*"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rsLQyBTaEdqZu-3Jy1-uYg"/>
          </ownedAttribute>
          <ownedOperation xmi:id="_3ADC7B74022D42EE305C00D3" name="isConsistentWith" isQuery="true" bodyCondition="_rl632xTaEdqZu-3Jy1-uYg">
            <ownedComment xmi:id="_rl631hTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D42EE305C00D3">
              <body>The query isConsistentWith() specifies, for any two RedefinableElements in a context in which redefinition is possible, whether redefinition would be logically consistent. By default, this is false; this operation must be overridden for subclasses of RedefinableElement to define the consistency conditions.</body>
            </ownedComment>
            <ownedRule xmi:id="_rl632xTaEdqZu-3Jy1-uYg" name="spec" constrainedElement="_3ADC7B74022D42EE305C00D3">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_rl633BTaEdqZu-3Jy1-uYg">
                <language>OCL</language>
                <body>result = false</body>
              </specification>
            </ownedRule>
            <ownedParameter xmi:id="_rl632RTaEdqZu-3Jy1-uYg" type="_3ADC7B74022D3CA010AC0090" direction="return"/>
            <ownedParameter xmi:id="_3ADC7B74022D42EE64AA02E3" name="redefinee" type="_3ADC7B74022D3DE6C81D0244"/>
          </ownedOperation>
          <ownedOperation xmi:id="_3ADC7B74022D42EE305C00D6" name="isRedefinitionContextValid" isQuery="true" bodyCondition="_rl635RTaEdqZu-3Jy1-uYg">
            <ownedComment xmi:id="_rl634BTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D42EE305C00D6">
              <body>The query isRedefinitionContextValid() specifies whether the redefinition contexts of this RedefinableElement are properly related to the redefinition contexts of the specified RedefinableElement to allow this element to redefine the other. By default at least one of the redefinition contexts of this element must be a specialization of at least one of the redefinition contexts of the specified element.</body>
            </ownedComment>
            <ownedRule xmi:id="_rl635RTaEdqZu-3Jy1-uYg" name="spec" constrainedElement="_3ADC7B74022D42EE305C00D6">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_rl635hTaEdqZu-3Jy1-uYg">
                <language>OCL</language>
                <body>result = self.redefinitionContext->exists(c | redefined.redefinitionContext->exists(r | c.allParents()->includes(r)))</body>
              </specification>
            </ownedRule>
            <ownedParameter xmi:id="_rl634xTaEdqZu-3Jy1-uYg" type="_3ADC7B74022D3CA010AC0090" direction="return"/>
            <ownedParameter xmi:id="_3ADC7B74022D42EE64EE00CE" name="redefined" type="_3ADC7B74022D3DE6C81D0244"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_3ADC7B74022D3DE6C8270177" name="Relationship" isAbstract="true">
          <ownedComment xmi:id="_rmEowRTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3DE6C8270177">
            <body>Relationship is an abstract concept that specifies some kind of relationship between elements.</body>
          </ownedComment>
          <generalization xmi:id="_3ADC7B74022D3DE6CFE2015E" general="_3ADC7B74022D3DE6BAB70076"/>
          <ownedAttribute xmi:id="_3ADC7B74022D3DFCAC2F019B" name="relatedElement" type="_3ADC7B74022D3DE6BAB70076" isReadOnly="true" isDerived="true" isDerivedUnion="true" association="_3ADC7B74022D3DFCAC2E0366">
            <ownedComment xmi:id="_rr4V2hTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3DFCAC2F019B">
              <body>Specifies the elements related by the Relationship.</body>
            </ownedComment>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rr4V3hTaEdqZu-3Jy1-uYg" value="*"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rr4V3RTaEdqZu-3Jy1-uYg" value="1"/>
          </ownedAttribute>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_3ADC7B74022D3DE6C7C40188" name="StructuralFeature" isAbstract="true">
          <ownedComment xmi:id="_rmEoxhTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3DE6C7C40188">
            <body>A structural feature is a typed feature of a classifier that specifies the structure of instances of the classifier.</body>
          </ownedComment>
          <generalization xmi:id="_3ADC7B74022D3DE6CB390054" general="_3ADC7B74022D3DE6C7BD0034"/>
          <generalization xmi:id="_3ADC7B74022D3DE6CC05022E" general="_3ADC7B74022D3DE6C3F20254"/>
          <generalization xmi:id="_3ADC7B74022D3E5613120088" general="_3ADC7B74022D3DE6C66D02F8"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_3ADC7B74022D3DE6C3F20254" name="TypedElement" isAbstract="true">
          <ownedComment xmi:id="_rmEozRTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3DE6C3F20254">
            <body>A typed element is a kind of named element that represents an element with a type.</body>
          </ownedComment>
          <generalization xmi:id="_3ADC7B74022D3DF7855A0232" general="_3ADC7B74022D3DE6BC6B01BD"/>
          <ownedAttribute xmi:id="_3ADC7B74022D3DE6C94D0011" name="type" type="_3ADC7B74022D3E555229003B" association="_3ADC7B74022D3DE6C94B00D6">
            <ownedComment xmi:id="_rpo6MBTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3DE6C94D0011">
              <body>This information is derived from the return result for this Operation.</body>
            </ownedComment>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rpo6NBTaEdqZu-3Jy1-uYg" value="1"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rpo6MxTaEdqZu-3Jy1-uYg"/>
          </ownedAttribute>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_3ADC7B74022D3DE6C7F30294" name="ValueSpecification" isAbstract="true">
          <ownedComment xmi:id="_rmEo0hTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3DE6C7F30294">
            <body>A value specification is the specification of a (possibly empty) set of instances, including both objects and data values.</body>
          </ownedComment>
          <generalization xmi:id="_3ADC7B74022D3E555E8603B8" general="_3ADC7B74022D3DE6C3F20254"/>
          <generalization xmi:id="_3ADC7B74022D410311770285" general="_3ADC7B74022D3DE6C1F002C3"/>
          <ownedOperation xmi:id="_3ADC7B74022D42EE305C00B9" name="isComputable" isQuery="true" bodyCondition="_rmNysxTaEdqZu-3Jy1-uYg">
            <ownedComment xmi:id="_rmEo2BTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D42EE305C00B9">
              <body>The query isComputable() determines whether a value specification can be computed in a model. This operation cannot be fully defined in OCL. A conforming implementation is expected to deliver true for this operation for all value specifications that it can compute, and to compute all of those for which the operation is true. A conforming implementation is expected to be able to compute the value of all literals.</body>
            </ownedComment>
            <ownedRule xmi:id="_rmNysxTaEdqZu-3Jy1-uYg" name="spec" constrainedElement="_3ADC7B74022D42EE305C00B9">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_rmNytBTaEdqZu-3Jy1-uYg">
                <language>OCL</language>
                <body>result = false</body>
              </specification>
            </ownedRule>
            <ownedParameter xmi:id="_rmNyshTaEdqZu-3Jy1-uYg" type="_3ADC7B74022D3CA010AC0090" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_3ADC7B74022D42EE305C00BB" name="integerValue" isQuery="true" bodyCondition="_rmNyvBTaEdqZu-3Jy1-uYg">
            <ownedComment xmi:id="_rmNyuBTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D42EE305C00BB">
              <body>The query integerValue() gives a single Integer value when one can be computed.</body>
            </ownedComment>
            <ownedRule xmi:id="_rmNyvBTaEdqZu-3Jy1-uYg" name="spec" constrainedElement="_3ADC7B74022D42EE305C00BB">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_rmNyvRTaEdqZu-3Jy1-uYg">
                <language>OCL</language>
                <body>result = Set{}</body>
              </specification>
            </ownedRule>
            <ownedParameter xmi:id="_rmNyuxTaEdqZu-3Jy1-uYg" type="_3ADC7B74022D3CA010A4007B" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_3ADC7B74022D42EE305C00BD" name="booleanValue" isQuery="true" bodyCondition="_rmNyxRTaEdqZu-3Jy1-uYg">
            <ownedComment xmi:id="_rmNywRTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D42EE305C00BD">
              <body>The query booleanValue() gives a single Boolean value when one can be computed.</body>
            </ownedComment>
            <ownedRule xmi:id="_rmNyxRTaEdqZu-3Jy1-uYg" name="spec" constrainedElement="_3ADC7B74022D42EE305C00BD">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_rmNyxhTaEdqZu-3Jy1-uYg">
                <language>OCL</language>
                <body>result = Set{}</body>
              </specification>
            </ownedRule>
            <ownedParameter xmi:id="_rmNyxBTaEdqZu-3Jy1-uYg" type="_3ADC7B74022D3CA010AC0090" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_3ADC7B74022D42EE305C00BF" name="stringValue" isQuery="true" bodyCondition="_rmNyzhTaEdqZu-3Jy1-uYg">
            <ownedComment xmi:id="_rmNyyhTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D42EE305C00BF">
              <body>The query stringValue() gives a single String value when one can be computed.</body>
            </ownedComment>
            <ownedRule xmi:id="_rmNyzhTaEdqZu-3Jy1-uYg" name="spec" constrainedElement="_3ADC7B74022D42EE305C00BF">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_rmNyzxTaEdqZu-3Jy1-uYg">
                <language>OCL</language>
                <body>result = Set{}</body>
              </specification>
            </ownedRule>
            <ownedParameter xmi:id="_rmNyzRTaEdqZu-3Jy1-uYg" type="_3ADC7B74022D3CA010B103C3" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_3ADC7B74022D42EE305C00C2" name="unlimitedValue" isQuery="true" bodyCondition="_rmXjsxTaEdqZu-3Jy1-uYg">
            <ownedComment xmi:id="_rmNy0xTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D42EE305C00C2">
              <body>The query unlimitedValue() gives a single UnlimitedNatural value when one can be computed.</body>
            </ownedComment>
            <ownedRule xmi:id="_rmXjsxTaEdqZu-3Jy1-uYg" name="spec" constrainedElement="_3ADC7B74022D42EE305C00C2">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_rmXjtBTaEdqZu-3Jy1-uYg">
                <language>OCL</language>
                <body>result = Set{}</body>
              </specification>
            </ownedRule>
            <ownedParameter xmi:id="_rmXjshTaEdqZu-3Jy1-uYg" type="_3ADC7B74022D3DE6A93C0003" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_3ADC7B74022D42EE305C00C4" name="isNull" isQuery="true" bodyCondition="_rmXjvBTaEdqZu-3Jy1-uYg">
            <ownedComment xmi:id="_rmXjuBTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D42EE305C00C4">
              <body>The query isNull() returns true when it can be computed that the value is null.</body>
            </ownedComment>
            <ownedRule xmi:id="_rmXjvBTaEdqZu-3Jy1-uYg" name="spec" constrainedElement="_3ADC7B74022D42EE305C00C4">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_rmXjvRTaEdqZu-3Jy1-uYg">
                <language>OCL</language>
                <body>result = false</body>
              </specification>
            </ownedRule>
            <ownedParameter xmi:id="_rmXjuxTaEdqZu-3Jy1-uYg" type="_3ADC7B74022D3CA010AC0090" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_3ADC7B74022D3DE6E15D033A" name="Association">
          <ownedComment xmi:id="_rmXjwRTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3DE6E15D033A">
            <body>An association describes a set of tuples whose values refer to typed instances. An instance of an association is called a link.</body>
          </ownedComment>
          <ownedRule xmi:id="_rmXjyxTaEdqZu-3Jy1-uYg" name="association_ends" constrainedElement="_3ADC7B74022D3DE6E15D033A">
            <ownedComment xmi:id="_rmXjxxTaEdqZu-3Jy1-uYg" annotatedElement="_rmXjyxTaEdqZu-3Jy1-uYg">
              <body>Association ends of associations with more than two ends must be owned by the association.</body>
            </ownedComment>
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_rmXjzBTaEdqZu-3Jy1-uYg">
              <language>OCL</language>
              <body>if memberEnd->size() > 2 then ownedEnd->includesAll(memberEnd)</body>
            </specification>
          </ownedRule>
          <generalization xmi:id="_3ADC7B74022D3DE6E1D202E8" general="_3ADC7B74022D3DE6C8630317"/>
          <generalization xmi:id="_3ADC7B74022D3DE75CA3037C" general="_3ADC7B74022D3DE6C8270177"/>
          <ownedAttribute xmi:id="_3ADC7B74022D3DE6E7AB0308" name="isDerived" type="_3ADC7B74022D3CA010AC0090">
            <ownedComment xmi:id="_rmXj0BTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3DE6E7AB0308">
              <body>Specifies whether the association is derived from other model elements such as other associations or constraints.</body>
            </ownedComment>
            <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_Ges4EBTbEdqZu-3Jy1-uYg"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_3ADC7B74022D3DE6E409010C" name="ownedEnd" type="_3ADC7B74022D3DE6D57500AC" isOrdered="true" aggregation="composite" subsettedProperty="_3ADC7B74022D3DE6E3EF0097 _3ADC7B74022D3DFCBE7F0246 _3ADC7B74022D3DFCB8650177" association="_3ADC7B74022D3DE6E40802BA">
            <ownedComment xmi:id="_rp8cKhTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3DE6E409010C">
              <body>The ends that are owned by the association itself.</body>
            </ownedComment>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rp8cLhTaEdqZu-3Jy1-uYg" value="*"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rp8cLRTaEdqZu-3Jy1-uYg"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_3ADC7B74022D3DE75D87003B" name="endType" type="_3ADC7B74022D3E555229003B" isReadOnly="true" isDerived="true" subsettedProperty="_3ADC7B74022D3DFCAC2F019B" association="_3ADC7B74022D3DE75D86027E">
            <ownedComment xmi:id="_rqZIHRTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3DE75D87003B">
              <body>References the classifiers that are used as types of the ends of the association.</body>
            </ownedComment>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rqZIIRTaEdqZu-3Jy1-uYg" value="*"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rqZIIBTaEdqZu-3Jy1-uYg" value="1"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_3ADC7B74022D3DE6E3EF0097" name="memberEnd" type="_3ADC7B74022D3DE6D57500AC" isOrdered="true" subsettedProperty="_3ADC7B74022D3DFCB82F00DA" association="_3ADC7B74022D3DE6E3EE01F4">
            <ownedComment xmi:id="_rrbp4hTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3DE6E3EF0097">
              <body>Each end represents participation of instances of the classifier connected to the end in links of the association.</body>
            </ownedComment>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rrbp5hTaEdqZu-3Jy1-uYg" value="*"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rrbp5RTaEdqZu-3Jy1-uYg" value="2"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_3ADC7B74022D40F14C010058" name="navigableOwnedEnd" type="_3ADC7B74022D3DE6D57500AC" subsettedProperty="_3ADC7B74022D3DE6E409010C" association="_3ADC7B74022D40F14BFF0313">
            <ownedComment xmi:id="_rsxtwxTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D40F14C010058">
              <body>The navigable ends that are owned by the association itself.</body>
            </ownedComment>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rsxtxxTaEdqZu-3Jy1-uYg" value="*"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rsxtxhTaEdqZu-3Jy1-uYg"/>
          </ownedAttribute>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_3ADC7B74022D3DE6D5AD039B" name="Class">
          <ownedComment xmi:id="_rmXj1RTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3DE6D5AD039B">
            <body>A class describes a set of objects that share the same specifications of features, constraints, and semantics.</body>
          </ownedComment>
          <generalization xmi:id="_3ADC7B74022D3DE6E1B0011C" general="_3ADC7B74022D3DE6C8630317"/>
          <ownedAttribute xmi:id="_3ADC7B74022D3DE6E37402AD" name="isAbstract" type="_3ADC7B74022D3CA010AC0090">
            <ownedComment xmi:id="_rmgtrhTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3DE6E37402AD">
              <body>True when a class is abstract.</body>
            </ownedComment>
            <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_Ge2pEBTbEdqZu-3Jy1-uYg"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_3ADC7B74022D3DE6E2E2028F" name="ownedAttribute" type="_3ADC7B74022D3DE6D57500AC" isOrdered="true" aggregation="composite" subsettedProperty="_3ADC7B74022D3DE6E42E034A _3ADC7B74022D3DFCB8650177" association="_3ADC7B74022D3DE6E2E1037E">
            <ownedComment xmi:id="_rpo6OBTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3DE6E2E2028F">
              <body>The attributes (i.e. the properties) owned by the class.</body>
            </ownedComment>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rpyrIxTaEdqZu-3Jy1-uYg" value="*"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rpyrIhTaEdqZu-3Jy1-uYg"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_3ADC7B74022D3DE6E30F008B" name="ownedOperation" type="_3ADC7B74022D3DE6D56F031A" isOrdered="true" aggregation="composite" subsettedProperty="_3ADC7B74022D3DFCBE7F0246 _3ADC7B74022D3DFCB8650177" association="_3ADC7B74022D3DE6E30E0260">
            <ownedComment xmi:id="_rpyrKxTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3DE6E30F008B">
              <body>The operations owned by the class.</body>
            </ownedComment>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rpyrLxTaEdqZu-3Jy1-uYg" value="*"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rpyrLhTaEdqZu-3Jy1-uYg"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_3ADC7B74022D3DE6E8DF0225" name="superClass" type="_3ADC7B74022D3DE6D5AD039B" redefinedProperty="_3ADC7B74022D3E0270BE0395" association="_3ADC7B74022D3DE6E8DE0061">
            <ownedComment xmi:id="_rqZIFRTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3DE6E8DF0225">
              <body>This gives the superclasses of a class.</body>
            </ownedComment>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rqZIGRTaEdqZu-3Jy1-uYg" value="*"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rqZIGBTaEdqZu-3Jy1-uYg"/>
          </ownedAttribute>
          <ownedOperation xmi:id="_3ADC7B74022D3E1420C102C4" name="inherit" isQuery="true" redefinedOperation="_3ADC7B74022D42EE305C0100" bodyCondition="_rmgtqRTaEdqZu-3Jy1-uYg">
            <ownedComment xmi:id="_rmgtpBTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3E1420C102C4">
              <body>The inherit operation is overridden to exclude redefined properties.</body>
            </ownedComment>
            <ownedRule xmi:id="_rmgtqRTaEdqZu-3Jy1-uYg" name="spec" constrainedElement="_3ADC7B74022D3E1420C102C4">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_rmgtqhTaEdqZu-3Jy1-uYg">
                <language>OCL</language>
                <body>result = inhs->excluding(inh | ownedMember->select(oclIsKindOf(RedefinableElement))->select(redefinedElement->includes(inh)))</body>
              </specification>
            </ownedRule>
            <ownedParameter xmi:id="_rmgtpxTaEdqZu-3Jy1-uYg" type="_3ADC7B74022D3DE6BC6B01BD" direction="return">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_GfAaERTbEdqZu-3Jy1-uYg" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_GfAaEBTbEdqZu-3Jy1-uYg"/>
            </ownedParameter>
            <ownedParameter xmi:id="_3ADC7B74022D3E1420FA004F" name="inhs" type="_3ADC7B74022D3DE6BC6B01BD">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_GfAaExTbEdqZu-3Jy1-uYg" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_GfAaEhTbEdqZu-3Jy1-uYg"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_3ADC7B74022D3DE6D57500AC" name="Property">
          <ownedComment xmi:id="_rmgtsxTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3DE6D57500AC">
            <body>A property is a structural feature of a classifier that characterizes instances of the classifier. A property related by ownedAttribute to a classifier (other than an association) represents an attribute and might also represent an association end. It relates an instance of the class to a value or set of values of the type of the attribute. A property related by memberEnd or its specializations to an association represents an end of the association. The type of the property is the type of the end of the association.</body>
          </ownedComment>
          <ownedRule xmi:id="_rmqepxTaEdqZu-3Jy1-uYg" name="multiplicity_of_composite" constrainedElement="_3ADC7B74022D3DE6D57500AC">
            <ownedComment xmi:id="_rmqeoxTaEdqZu-3Jy1-uYg" annotatedElement="_rmqepxTaEdqZu-3Jy1-uYg">
              <body>A multiplicity of a composite aggregation must not have an upper bound greater than 1.</body>
            </ownedComment>
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_rmqeqBTaEdqZu-3Jy1-uYg">
              <language>OCL</language>
              <body>isComposite implies (upperBound()->isEmpty() or upperBound() &lt;= 1)</body>
            </specification>
          </ownedRule>
          <ownedRule xmi:id="_rmqesBTaEdqZu-3Jy1-uYg" name="subsetting_context_conforms" constrainedElement="_3ADC7B74022D3DE6D57500AC">
            <ownedComment xmi:id="_rmqerBTaEdqZu-3Jy1-uYg" annotatedElement="_rmqesBTaEdqZu-3Jy1-uYg">
              <body>Subsetting may only occur when the context of the subsetting property conforms to the context of the subsetted property.</body>
            </ownedComment>
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_rmqesRTaEdqZu-3Jy1-uYg">
              <language>OCL</language>
              <body>self.subsettedProperty->notEmpty() implies
  (self.subsettingContext()->notEmpty() and self.subsettingContext()->forAll (sc |
    self.subsettedProperty->forAll(sp |
      sp.subsettingContext()->exists(c | sc.conformsTo(c)))))</body>
            </specification>
          </ownedRule>
          <ownedRule xmi:id="_rmqeuRTaEdqZu-3Jy1-uYg" name="redefined_property_inherited" constrainedElement="_3ADC7B74022D3DE6D57500AC">
            <ownedComment xmi:id="_rmqetRTaEdqZu-3Jy1-uYg" annotatedElement="_rmqeuRTaEdqZu-3Jy1-uYg">
              <body>A redefined property must be inherited from a more general classifier containing the redefining property.</body>
            </ownedComment>
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_rmqeuhTaEdqZu-3Jy1-uYg">
              <language>OCL</language>
              <body>if (redefinedProperty->notEmpty()) then
  (redefinitionContext->notEmpty() and
      redefinedProperty->forAll(rp|
        ((redefinitionContext->collect(fc|
          fc.allParents()))->asSet())->collect(c| c.allFeatures())->asSet()->includes(rp))</body>
            </specification>
          </ownedRule>
          <ownedRule xmi:id="_rmqewhTaEdqZu-3Jy1-uYg" name="subsetting_rules" constrainedElement="_3ADC7B74022D3DE6D57500AC">
            <ownedComment xmi:id="_rmqevhTaEdqZu-3Jy1-uYg" annotatedElement="_rmqewhTaEdqZu-3Jy1-uYg">
              <body>A subsetting property may strengthen the type of the subsetted property, and its upper bound may be less.</body>
            </ownedComment>
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_rmqewxTaEdqZu-3Jy1-uYg">
              <language>OCL</language>
              <body>self.subsettedProperty->forAll(sp |
  self.type.conformsTo(sp.type) and
    ((self.upperBound()->notEmpty() and sp.upperBound()->notEmpty()) implies
      self.upperBound()&lt;=sp.upperBound() ))</body>
            </specification>
          </ownedRule>
          <ownedRule xmi:id="_rm0PoxTaEdqZu-3Jy1-uYg" name="navigable_readonly" constrainedElement="_3ADC7B74022D3DE6D57500AC">
            <ownedComment xmi:id="_rmqexxTaEdqZu-3Jy1-uYg" annotatedElement="_rm0PoxTaEdqZu-3Jy1-uYg">
              <body>Only a navigable property can be marked as readOnly.</body>
            </ownedComment>
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_rm0PpBTaEdqZu-3Jy1-uYg">
              <language>OCL</language>
              <body>isReadOnly implies isNavigable()</body>
            </specification>
          </ownedRule>
          <ownedRule xmi:id="_rm0PrBTaEdqZu-3Jy1-uYg" name="derived_union_is_derived" constrainedElement="_3ADC7B74022D3DE6D57500AC">
            <ownedComment xmi:id="_rm0PqBTaEdqZu-3Jy1-uYg" annotatedElement="_rm0PrBTaEdqZu-3Jy1-uYg">
              <body>A derived union is derived.</body>
            </ownedComment>
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_rm0PrRTaEdqZu-3Jy1-uYg">
              <language>OCL</language>
              <body>isDerivedUnion implies isDerived</body>
            </specification>
          </ownedRule>
          <ownedRule xmi:id="_ATEKgGgEEdqfYrlcy8iLFA" name="subsetted_property_names" constrainedElement="_3ADC7B74022D3DE6D57500AC">
            <ownedComment xmi:id="_H7EdsGgEEdqfYrlcy8iLFA" annotatedElement="_ATEKgGgEEdqfYrlcy8iLFA">
              <body>A property may not subset a property with the same name.</body>
            </ownedComment>
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_ATEKgWgEEdqfYrlcy8iLFA">
              <language>OCL</language>
              <body>true</body>
            </specification>
          </ownedRule>
          <generalization xmi:id="_3ADC7B74022D3DE6E646016A" general="_3ADC7B74022D3DE6C7C40188"/>
          <ownedAttribute xmi:id="_3ADC7B74022D3DE6E9C30088" name="isReadOnly" type="_3ADC7B74022D3CA010AC0090">
            <ownedComment xmi:id="_rm0PzxTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3DE6E9C30088">
              <body>If isReadOnly is true, the attribute may not be written to after initialization.</body>
            </ownedComment>
            <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_GfAaFBTbEdqZu-3Jy1-uYg"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_3ADC7B74022D4201104A02AF" name="default" type="_3ADC7B74022D3CA010B103C3">
            <ownedComment xmi:id="_rm9ZlBTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D4201104A02AF">
              <body>Specifies a String that represents a value to be used when no argument is supplied for the Property.</body>
            </ownedComment>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rm9ZmBTaEdqZu-3Jy1-uYg" value="1"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rm9ZlxTaEdqZu-3Jy1-uYg"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_3ADC7B74022D4201106900A1" name="isComposite" type="_3ADC7B74022D3CA010AC0090">
            <ownedComment xmi:id="_rm9ZmhTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D4201106900A1">
              <body>If isComposite is true, the object containing the attribute is a container for the object or value contained in the attribute.</body>
            </ownedComment>
            <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_GfAaFRTbEdqZu-3Jy1-uYg"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_3ADC7B74022D420110720361" name="isDerived" type="_3ADC7B74022D3CA010AC0090">
            <ownedComment xmi:id="_rm9ZnxTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D420110720361">
              <body>If isDerived is true, the value of the attribute is derived from information elsewhere.</body>
            </ownedComment>
            <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_GfJkABTbEdqZu-3Jy1-uYg"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_3ADC7B74022D3DF85B580203" name="isDerivedUnion" type="_3ADC7B74022D3CA010AC0090">
            <ownedComment xmi:id="_rm9ZpBTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3DF85B580203">
              <body>Specifies whether the property is derived as the union of all of the properties that are constrained to subset it.</body>
            </ownedComment>
            <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_GfJkARTbEdqZu-3Jy1-uYg"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_3ADC7B74022D3DE6E2E20299" name="class" type="_3ADC7B74022D3DE6D5AD039B" subsettedProperty="_3ADC7B74022D3DFCB86501A0 _3ADC7B74022D3DFCBE7F025A _3ADC7B74022D3DE6E42E035E" association="_3ADC7B74022D3DE6E2E1037E">
            <ownedComment xmi:id="_vBHVQGd5EdqCCpdUvbQY5w" annotatedElement="_3ADC7B74022D3DE6E2E20299">
              <body>References the Class that owns the Property.</body>
            </ownedComment>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rpyrJhTaEdqZu-3Jy1-uYg" value="1"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rpyrJRTaEdqZu-3Jy1-uYg"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_3ADC7B74022D3DE6E4090120" name="owningAssociation" type="_3ADC7B74022D3DE6E15D033A" subsettedProperty="_3ADC7B74022D3DE6E3EF00AB _3ADC7B74022D3DFCB86501A0 _3ADC7B74022D3DFCBE7F025A" association="_3ADC7B74022D3DE6E40802BA">
            <ownedComment xmi:id="_rp8cMBTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3DE6E4090120">
              <body>References the owning association of this property, if any.</body>
            </ownedComment>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rp8cNBTaEdqZu-3Jy1-uYg" value="1"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rp8cMxTaEdqZu-3Jy1-uYg"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_3ADC7B74022D3DE6E711018A" name="redefinedProperty" type="_3ADC7B74022D3DE6D57500AC" subsettedProperty="_3ADC7B74022D3DFCBE1F00FD" association="_3ADC7B74022D3DE6E70F039A">
            <ownedComment xmi:id="_rqPXEhTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3DE6E711018A">
              <body>References the properties that are redefined by this property.</body>
            </ownedComment>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rqPXFhTaEdqZu-3Jy1-uYg" value="*"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rqPXFRTaEdqZu-3Jy1-uYg"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_3ADC7B74022D3DE6E7430363" name="subsettedProperty" type="_3ADC7B74022D3DE6D57500AC" association="_3ADC7B74022D3DE6E7410360">
            <ownedComment xmi:id="_rqPXGhTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3DE6E7430363">
              <body>References the properties of which this property is constrained to be a subset.</body>
            </ownedComment>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rqPXHhTaEdqZu-3Jy1-uYg" value="*"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rqPXHRTaEdqZu-3Jy1-uYg"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_3ADC7B74022D3DE6E76603BD" name="opposite" type="_3ADC7B74022D3DE6D57500AC" isDerived="true" association="_3ADC7B74022D3DE6E7650159">
            <ownedComment xmi:id="_rqPXIhTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3DE6E76603BD">
              <body>In the case where the property is one navigable end of a binary association with both ends navigable, this gives the other end.</body>
            </ownedComment>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rqPXJhTaEdqZu-3Jy1-uYg" value="1"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rqPXJRTaEdqZu-3Jy1-uYg"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_3ADC7B74022D3DE6E2290166" name="datatype" type="_3ADC7B74022D3DE6D25202A6" subsettedProperty="_3ADC7B74022D3DFCB86501A0 _3ADC7B74022D3DFCBE7F025A _3ADC7B74022D3DE6E42E035E" association="_3ADC7B74022D3DE6E2280287">
            <ownedComment xmi:id="_rqiSExTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3DE6E2290166">
              <body>The DataType that owns this Property.</body>
            </ownedComment>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rqiSFxTaEdqZu-3Jy1-uYg" value="1"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rqiSFhTaEdqZu-3Jy1-uYg"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_3ADC7B74022D3DE6E3EF00AB" name="association" type="_3ADC7B74022D3DE6E15D033A" association="_3ADC7B74022D3DE6E3EE01F4">
            <ownedComment xmi:id="_rrbp6BTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3DE6E3EF00AB">
              <body>References the association of which this property is a member, if any.</body>
            </ownedComment>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rrbp7BTaEdqZu-3Jy1-uYg" value="1"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rrbp6xTaEdqZu-3Jy1-uYg"/>
          </ownedAttribute>
          <ownedOperation xmi:id="_3ADC7B74022D3E14246901E3" name="opposite" isQuery="true" bodyCondition="_rmgtvBTaEdqZu-3Jy1-uYg">
            <ownedComment xmi:id="_rmgtuBTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3E14246901E3">
              <body>If this property is owned by a class, associated with a binary association, and the other end of the association is also owned by a class, then opposite gives the other end.</body>
            </ownedComment>
            <ownedRule xmi:id="_rmgtvBTaEdqZu-3Jy1-uYg" name="spec" constrainedElement="_3ADC7B74022D3E14246901E3 _3ADC7B74022D3DE6E76603BD">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_rmgtvRTaEdqZu-3Jy1-uYg">
                <language>OCL</language>
                <body>result = if owningAssociation->isEmpty() and association.memberEnd->size() = 2
  then
    let otherEnd = (association.memberEnd - self)->any() in
      if otherEnd.owningAssociation->isEmpty() then otherEnd else Set{} endif
    else Set {}
    endif</body>
              </specification>
            </ownedRule>
            <ownedParameter xmi:id="_rmgtuxTaEdqZu-3Jy1-uYg" type="_3ADC7B74022D3DE6D57500AC" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_3ADC7B74022D3E1427A80242" name="isConsistentWith" isQuery="true" precondition="_rm0PthTaEdqZu-3Jy1-uYg" redefinedOperation="_3ADC7B74022D42EE305C00D3" bodyCondition="_rm0PuBTaEdqZu-3Jy1-uYg">
            <ownedComment xmi:id="_rm0PsRTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3E1427A80242">
              <body>The query isConsistentWith() specifies, for any two Properties in a context in which redefinition is possible, whether redefinition would be logically consistent. A redefining property is consistent with a redefined property if the type of the redefining property conforms to the type of the redefined property, the multiplicity of the redefining property (if specified) is contained in the multiplicity of the redefined property, and the redefining property is derived if the redefined property is derived.</body>
            </ownedComment>
            <ownedRule xmi:id="_rm0PthTaEdqZu-3Jy1-uYg" constrainedElement="_3ADC7B74022D3E1427A80242">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_rm0PtxTaEdqZu-3Jy1-uYg">
                <language>OCL</language>
                <body>redefinee.isRedefinitionContextValid(self)</body>
              </specification>
            </ownedRule>
            <ownedRule xmi:id="_rm0PuBTaEdqZu-3Jy1-uYg" name="spec" constrainedElement="_3ADC7B74022D3E1427A80242">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_rm0PuRTaEdqZu-3Jy1-uYg">
                <language>OCL</language>
                <body>result = redefinee.oclIsKindOf(Property) and 
  let prop : Property = redefinee.oclAsType(Property) in 
  (prop.type.conformsTo(self.type) and 
  ((prop.lowerBound()->notEmpty() and self.lowerBound()->notEmpty()) implies prop.lowerBound() >= self.lowerBound()) and 
  ((prop.upperBound()->notEmpty() and self.upperBound()->notEmpty()) implies prop.lowerBound() &lt;= self.lowerBound()) and 
  (self.isDerived implies prop.isDerived) and
  (self.isComposite implies prop.isComposite))</body>
              </specification>
            </ownedRule>
            <ownedParameter xmi:id="_rm0PtBTaEdqZu-3Jy1-uYg" type="_3ADC7B74022D3CA010AC0090" direction="return"/>
            <ownedParameter xmi:id="_3ADC7B74022D3E1427BE0258" name="redefinee" type="_3ADC7B74022D3DE6C81D0244"/>
          </ownedOperation>
          <ownedOperation xmi:id="_3ADC7B74022D3E1428A50264" name="subsettingContext" isQuery="true" bodyCondition="_rm0PwRTaEdqZu-3Jy1-uYg">
            <ownedComment xmi:id="_rm0PvRTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3E1428A50264">
              <body>The query subsettingContext() gives the context for subsetting a property. It consists, in the case of an attribute, of the corresponding classifier, and in the case of an association end, all of the classifiers at the other ends.</body>
            </ownedComment>
            <ownedRule xmi:id="_rm0PwRTaEdqZu-3Jy1-uYg" name="spec" constrainedElement="_3ADC7B74022D3E1428A50264">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_rm0PwhTaEdqZu-3Jy1-uYg">
                <language>OCL</language>
                <body>result = if association->notEmpty()
then association.endType-type 
else if classifier->notEmpty then Set{classifier} else Set{} endif
endif</body>
              </specification>
            </ownedRule>
            <ownedParameter xmi:id="_rm0PwBTaEdqZu-3Jy1-uYg" type="_3ADC7B74022D3DE6C8630317" direction="return">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_GfdGARTbEdqZu-3Jy1-uYg" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_GfdGABTbEdqZu-3Jy1-uYg"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_3ADC7B74022D430B77C7031C" name="isNavigable" isQuery="true" bodyCondition="_rm0PyhTaEdqZu-3Jy1-uYg">
            <ownedComment xmi:id="_rm0PxhTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D430B77C7031C">
              <body>The query isNavigable() indicates whether it is possible to navigate across the property.</body>
            </ownedComment>
            <ownedRule xmi:id="_rm0PyhTaEdqZu-3Jy1-uYg" name="spec" constrainedElement="_3ADC7B74022D430B77C7031C">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_rm0PyxTaEdqZu-3Jy1-uYg">
                <language>OCL</language>
                <body>result = not classifier->isEmpty() or
association.owningAssociation.navigableOwnedEnd->includes(self)</body>
              </specification>
            </ownedRule>
            <ownedParameter xmi:id="_rm0PyRTaEdqZu-3Jy1-uYg" type="_3ADC7B74022D3CA010AC0090" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_1PbZwDc2Edqq1tCaRkgBQQ" name="isAttribute" isQuery="true" bodyCondition="_LLHN8Dc3Edqq1tCaRkgBQQ">
            <ownedComment xmi:id="_BL2vgDc3Edqq1tCaRkgBQQ" annotatedElement="_1PbZwDc2Edqq1tCaRkgBQQ">
              <body>The query isAttribute() is true if the Property is defined as an attribute of some classifier.</body>
            </ownedComment>
            <ownedRule xmi:id="_LLHN8Dc3Edqq1tCaRkgBQQ" name="spec" constrainedElement="_1PbZwDc2Edqq1tCaRkgBQQ">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_LLHN8Tc3Edqq1tCaRkgBQQ">
                <language>OCL</language>
                <body>result = Classifier->allInstances->exists(c | c.attribute->includes(p))</body>
              </specification>
            </ownedRule>
            <ownedParameter xmi:id="_61gRcDc2Edqq1tCaRkgBQQ" type="_3ADC7B74022D3CA010AC0090" direction="return"/>
            <ownedParameter xmi:id="_BnHvMDc3Edqq1tCaRkgBQQ" name="p" type="_3ADC7B74022D3DE6D57500AC" effect="read"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_3ADC7B74022D3DE6D25202A6" name="DataType">
          <ownedComment xmi:id="_rnHKkxTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3DE6D25202A6">
            <body>A data type is a type whose instances are identified only by their value. A data type may contain attributes to support the modeling of structured data types.</body>
          </ownedComment>
          <generalization xmi:id="_3ADC7B74022D3DEE7FF2011D" general="_3ADC7B74022D3DE6C8630317"/>
          <ownedAttribute xmi:id="_3ADC7B74022D3DE6E2290152" name="ownedAttribute" type="_3ADC7B74022D3DE6D57500AC" isOrdered="true" aggregation="composite" subsettedProperty="_3ADC7B74022D3DE6E42E034A _3ADC7B74022D3DFCB8650177" association="_3ADC7B74022D3DE6E2280287">
            <ownedComment xmi:id="_rqiSDRTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3DE6E2290152">
              <body>The Attributes owned by the DataType.</body>
            </ownedComment>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rqiSERTaEdqZu-3Jy1-uYg" value="*"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rqiSEBTaEdqZu-3Jy1-uYg"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_3ADC7B74022D3DE6E23E008A" name="ownedOperation" type="_3ADC7B74022D3DE6D56F031A" isOrdered="true" aggregation="composite" subsettedProperty="_3ADC7B74022D3DFCBE7F0246 _3ADC7B74022D3DFCB8650177" association="_3ADC7B74022D3DE6E23D0179">
            <ownedComment xmi:id="_rqiSGhTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3DE6E23E008A">
              <body>The Operations owned by the DataType.</body>
            </ownedComment>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rqsDAxTaEdqZu-3Jy1-uYg" value="*"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rqsDAhTaEdqZu-3Jy1-uYg"/>
          </ownedAttribute>
          <ownedOperation xmi:id="_3ADC7B74022D3E1423CF02D2" name="inherit" isQuery="true" redefinedOperation="_3ADC7B74022D42EE305C0100" bodyCondition="_rnHKnRTaEdqZu-3Jy1-uYg">
            <ownedComment xmi:id="_rnHKmBTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3E1423CF02D2">
              <body>The inherit operation is overridden to exclude redefined properties.</body>
            </ownedComment>
            <ownedRule xmi:id="_rnHKnRTaEdqZu-3Jy1-uYg" name="spec" constrainedElement="_3ADC7B74022D3E1423CF02D2">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_rnHKnhTaEdqZu-3Jy1-uYg">
                <language>OCL</language>
                <body>result = inhs->excluding(inh | ownedMember->select(oclIsKindOf(RedefinableElement))->select(redefinedElement->includes(inh)))</body>
              </specification>
            </ownedRule>
            <ownedParameter xmi:id="_rnHKmxTaEdqZu-3Jy1-uYg" type="_3ADC7B74022D3DE6BC6B01BD" direction="return">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_GfdGAxTbEdqZu-3Jy1-uYg" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_GfdGAhTbEdqZu-3Jy1-uYg"/>
            </ownedParameter>
            <ownedParameter xmi:id="_3ADC7B74022D3E1423F502F5" name="inhs" type="_3ADC7B74022D3DE6BC6B01BD">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_GfdGBRTbEdqZu-3Jy1-uYg" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_GfdGBBTbEdqZu-3Jy1-uYg"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_3ADC7B74022D3DE6D2750152" name="Enumeration">
          <ownedComment xmi:id="_rnHKohTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3DE6D2750152">
            <body>An enumeration is a data type whose values are enumerated in the model as enumeration literals.</body>
          </ownedComment>
          <generalization xmi:id="_3ADC7B74022D3DE6D2D7038E" general="_3ADC7B74022D3DE6D25202A6"/>
          <ownedAttribute xmi:id="_3ADC7B74022D3DE6D38600DC" name="ownedLiteral" type="_3ADC7B74022D3DE6D2910397" isOrdered="true" aggregation="composite" subsettedProperty="_3ADC7B74022D3DFCB8650177" association="_3ADC7B74022D3DE6D3850275">
            <ownedComment xmi:id="_rqiSABTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3DE6D38600DC">
              <body>The ordered set of literals for this Enumeration.</body>
            </ownedComment>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rqiSBBTaEdqZu-3Jy1-uYg" value="*"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rqiSAxTaEdqZu-3Jy1-uYg"/>
          </ownedAttribute>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_3ADC7B74022D3DE6D2910397" name="EnumerationLiteral">
          <ownedComment xmi:id="_rnHKpxTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3DE6D2910397">
            <body>An enumeration literal is a user-defined data value for an enumeration.</body>
          </ownedComment>
          <generalization xmi:id="_3ADC7B74022D3DF67B060099" general="_3ADC7B74022D3DE6BC6B01BD"/>
          <ownedAttribute xmi:id="_3ADC7B74022D3DE6D38600E6" name="enumeration" type="_3ADC7B74022D3DE6D2750152" subsettedProperty="_3ADC7B74022D3DFCB86501A0" association="_3ADC7B74022D3DE6D3850275">
            <ownedComment xmi:id="_rqiSBhTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3DE6D38600E6">
              <body>The Enumeration that this EnumerationLiteral is a member of.</body>
            </ownedComment>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rqiSChTaEdqZu-3Jy1-uYg" value="1"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rqiSCRTaEdqZu-3Jy1-uYg"/>
          </ownedAttribute>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_3ADC7B74022D3DE6D2570393" name="PrimitiveType">
          <ownedComment xmi:id="_rnHKrBTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3DE6D2570393">
            <body>A primitive type defines a predefined data type, without any relevant substructure (i.e., it has no parts in the context of UML). A primitive datatype may have an algebra and operations defined outside of UML, for example, mathematically.</body>
          </ownedComment>
          <generalization xmi:id="_3ADC7B74022D3DE6D2C30371" general="_3ADC7B74022D3DE6D25202A6"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_3ADC7B74022D3DE766450007" name="Constraint">
          <ownedComment xmi:id="_rnQUhBTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3DE766450007">
            <body>A constraint is a condition or restriction expressed in natural language text or in a machine readable language for the purpose of declaring some of the semantics of an element.</body>
          </ownedComment>
          <ownedRule xmi:id="_rnQUjRTaEdqZu-3Jy1-uYg" name="not_apply_to_self" constrainedElement="_3ADC7B74022D3DE766450007">
            <ownedComment xmi:id="_rnQUiRTaEdqZu-3Jy1-uYg" annotatedElement="_rnQUjRTaEdqZu-3Jy1-uYg">
              <body>A constraint cannot be applied to itself.</body>
            </ownedComment>
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_rnQUjhTaEdqZu-3Jy1-uYg">
              <language>OCL</language>
              <body>not constrainedElement->includes(self)</body>
            </specification>
          </ownedRule>
          <ownedRule xmi:id="_rnQUlRTaEdqZu-3Jy1-uYg" name="value_specification_boolean" constrainedElement="_3ADC7B74022D3DE766450007">
            <ownedComment xmi:id="_rnQUkhTaEdqZu-3Jy1-uYg" annotatedElement="_rnQUlRTaEdqZu-3Jy1-uYg">
              <body>The value specification for a constraint must evaluate to a Boolean value.</body>
            </ownedComment>
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_rnQUlhTaEdqZu-3Jy1-uYg">
              <language>OCL</language>
              <body>self.specification().booleanValue().isOclKindOf(Boolean)</body>
            </specification>
          </ownedRule>
          <generalization xmi:id="_3ADC7B74022D3DE76BB00097" general="_3ADC7B74022D3DE6C1F002C3"/>
          <ownedAttribute xmi:id="_3ADC7B74022D3DFCC85C023D" name="constrainedElement" type="_3ADC7B74022D3DE6BAB70076" isOrdered="true" association="_3ADC7B74022D3DFCC85C000C">
            <ownedComment xmi:id="_51DioBVsEdqDjccWl3Bw0Q" annotatedElement="_3ADC7B74022D3DFCC85C023D">
              <body>The ordered set of Elements referenced by this Constraint.</body>
            </ownedComment>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rsVB2hTaEdqZu-3Jy1-uYg" value="*"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rsVB2RTaEdqZu-3Jy1-uYg"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_3ADC7B74022D3DFCC88D0337" name="specification" type="_3ADC7B74022D3DE6C7F30294" aggregation="composite" subsettedProperty="_3ADC7B74022D3DFCA80700B4" association="_3ADC7B74022D3DFCC88D0157">
            <ownedComment xmi:id="_rseLsxTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3DFCC88D0337">
              <body>A condition that must be true when evaluated in order for the constraint to be satisfied.</body>
            </ownedComment>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rseLtxTaEdqZu-3Jy1-uYg" value="1"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rseLthTaEdqZu-3Jy1-uYg" value="1"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_s_9I8h-zEdqIE6mxof-rZA" name="context" type="_3ADC7B74022D3DE6C03E0388" subsettedProperty="_3ADC7B74022D3DFCB86501A0" association="_s_9I8B-zEdqIE6mxof-rZA">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zja18R-zEdqIE6mxof-rZA" value="1"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_zja18B-zEdqIE6mxof-rZA"/>
          </ownedAttribute>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_3ADC7B74022D3DE6D62D0024" name="OpaqueExpression">
          <ownedComment xmi:id="_rnQUmhTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3DE6D62D0024">
            <body>An opaque expression is an uninterpreted textual statement that denotes a (possibly empty) set of values when evaluated in a context.</body>
          </ownedComment>
          <ownedRule xmi:id="__NpH0DdhEdqq1tCaRkgBQQ" name="language_body_size" constrainedElement="_3ADC7B74022D3DE6D62D0024">
            <ownedComment xmi:id="_ZctcwDdiEdqq1tCaRkgBQQ" annotatedElement="__NpH0DdhEdqq1tCaRkgBQQ">
              <body>If the language attribute is not empty, then the size of the body and language arrays must be the same.</body>
            </ownedComment>
            <specification xmi:type="uml:OpaqueExpression" xmi:id="__NpH0TdhEdqq1tCaRkgBQQ">
              <language>OCL</language>
              <body>language->notEmpty() implies (body->size() = language->size())</body>
            </specification>
          </ownedRule>
          <generalization xmi:id="_3ADC7B74022D3DE6D7A30004" general="_3ADC7B74022D3DE6C7F30294"/>
          <ownedAttribute xmi:id="_3ADC7B74022D41FC52E503B5" name="body" type="_3ADC7B74022D3CA010B103C3" isOrdered="true" aggregation="composite">
            <ownedComment xmi:id="_rs63thTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D41FC52E503B5">
              <body>The text of the expression, possibly in multiple languages.</body>
            </ownedComment>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rs63uhTaEdqZu-3Jy1-uYg" value="*"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rs63uRTaEdqZu-3Jy1-uYg"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_3ADC7B74022D41FC52EF0215" name="language" type="_3ADC7B74022D3CA010B103C3" isOrdered="true" aggregation="composite">
            <ownedComment xmi:id="_rtEooBTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D41FC52EF0215">
              <body>Specifies the languages in which the expression is stated. The interpretation of the expression body depends on the languages. If the languages are unspecified, they might be implicit from the expression body or the context. Languages are matched to body strings by order.</body>
            </ownedComment>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rtEopBTaEdqZu-3Jy1-uYg" value="*"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rtEooxTaEdqZu-3Jy1-uYg"/>
          </ownedAttribute>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_3ADC7B74022D3DE6D56F031A" name="Operation">
          <ownedComment xmi:id="_rnaFgRTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3DE6D56F031A">
            <body>An operation is a behavioral feature of a classifier that specifies the name, type, parameters, and constraints for invoking an associated behavior.</body>
          </ownedComment>
          <ownedRule xmi:id="_rntAexTaEdqZu-3Jy1-uYg" name="only_body_for_query" constrainedElement="_3ADC7B74022D3DE6D56F031A">
            <ownedComment xmi:id="_rntAdxTaEdqZu-3Jy1-uYg" annotatedElement="_rntAexTaEdqZu-3Jy1-uYg">
              <body>A bodyCondition can only be specified for a query operation.</body>
            </ownedComment>
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_rntAfBTaEdqZu-3Jy1-uYg">
              <language>OCL</language>
              <body>bodyCondition->notEmpty() implies isQuery</body>
            </specification>
          </ownedRule>
          <ownedRule xmi:id="_rntAkBTaEdqZu-3Jy1-uYg" name="at_most_one_return" constrainedElement="_3ADC7B74022D3DE6D56F031A">
            <ownedComment xmi:id="_rntAjBTaEdqZu-3Jy1-uYg" annotatedElement="_rntAkBTaEdqZu-3Jy1-uYg">
              <body>An operation can have at most one return parameter; i.e., an owned parameter with the direction set to 'return'</body>
            </ownedComment>
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_rntAkRTaEdqZu-3Jy1-uYg">
              <language>OCL</language>
              <body>self.ownedParameter->select(par | par.direction = #return)->size() &lt;= 1</body>
            </specification>
          </ownedRule>
          <generalization xmi:id="_3ADC7B74022D3DE763490012" general="_3ADC7B74022D3DE7632A0090"/>
          <ownedAttribute xmi:id="_3ADC7B74022D3DF85B94039A" name="isQuery" type="_3ADC7B74022D3CA010AC0090">
            <ownedComment xmi:id="_rntAlRTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3DF85B94039A">
              <body>Specifies whether an execution of the BehavioralFeature leaves the state of the system unchanged (isQuery=true) or whether side effects may occur (isQuery=false).</body>
            </ownedComment>
            <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_GfmP8BTbEdqZu-3Jy1-uYg"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_3ADC7B74022D3E03284C0289" name="isOrdered" type="_3ADC7B74022D3CA010AC0090" isDerived="true">
            <ownedComment xmi:id="_rn2xdBTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3E03284C0289">
              <body>This information is derived from the return result for this Operation.</body>
            </ownedComment>
            <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_SxMa0CkbEdqPP7hCKvQ4ww"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_3ADC7B74022D3E032859015B" name="isUnique" type="_3ADC7B74022D3CA010AC0090" isDerived="true">
            <ownedComment xmi:id="_rn2xehTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3E032859015B">
              <body>This information is derived from the return result for this Operation.</body>
            </ownedComment>
            <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_bulzoCkbEdqPP7hCKvQ4ww" value="true"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_3ADC7B74022D3E0328B001D9" name="lower" type="_3ADC7B74022D3CA010A4007B" isDerived="true">
            <ownedComment xmi:id="_rn2xgBTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3E0328B001D9">
              <body>This information is derived from the return result for this Operation.</body>
            </ownedComment>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rn2xhBTaEdqZu-3Jy1-uYg" value="1"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rn2xgxTaEdqZu-3Jy1-uYg"/>
            <defaultValue xmi:type="uml:LiteralInteger" xmi:id="_IQd8ICkdEdqPP7hCKvQ4ww" value="1"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_3ADC7B74022D3E0328710341" name="upper" type="_3ADC7B74022D3DE6A93C0003" isDerived="true">
            <ownedComment xmi:id="_roAicxTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3E0328710341">
              <body>This information is derived from the return result for this Operation.</body>
            </ownedComment>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_roAidxTaEdqZu-3Jy1-uYg" value="1"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_roAidhTaEdqZu-3Jy1-uYg"/>
            <defaultValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_JYIu0CkdEdqPP7hCKvQ4ww" value="1"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_3ADC7B74022D3DE6E30F0095" name="class" type="_3ADC7B74022D3DE6D5AD039B" subsettedProperty="_3ADC7B74022D3DFCBDBD028D _3ADC7B74022D3DFCB86501A0 _3ADC7B74022D3DFCBE7F025A" association="_3ADC7B74022D3DE6E30E0260">
            <ownedComment xmi:id="_rp8cIRTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3DE6E30F0095">
              <body>The class that owns the operation.</body>
            </ownedComment>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rp8cJRTaEdqZu-3Jy1-uYg" value="1"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rp8cJBTaEdqZu-3Jy1-uYg"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_3ADC7B74022D3DE6E23E0094" name="datatype" type="_3ADC7B74022D3DE6D25202A6" subsettedProperty="_3ADC7B74022D3DFCBDBD028D _3ADC7B74022D3DFCB86501A0 _3ADC7B74022D3DFCBE7F025A" association="_3ADC7B74022D3DE6E23D0179">
            <ownedComment xmi:id="_rqsDBRTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3DE6E23E0094">
              <body>The DataType that owns this Operation.</body>
            </ownedComment>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rqsDCRTaEdqZu-3Jy1-uYg" value="1"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rqsDCBTaEdqZu-3Jy1-uYg"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_3ADC7B74022D3DE7654A0345" name="raisedException" type="_3ADC7B74022D3E555229003B" redefinedProperty="_3ADC7B74022D3DE76511013A" association="_3ADC7B74022D3DE7654A013C">
            <ownedComment xmi:id="_rqsDDBTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3DE7654A0345">
              <body>References the Types representing exceptions that may be raised during an invocation of this operation.</body>
            </ownedComment>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rqsDEBTaEdqZu-3Jy1-uYg" value="*"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rqsDDxTaEdqZu-3Jy1-uYg"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_3ADC7B74022D3DE767BD001B" name="redefinedOperation" type="_3ADC7B74022D3DE6D56F031A" subsettedProperty="_3ADC7B74022D3DFCBE1F00FD" association="_3ADC7B74022D3DE767BB0358">
            <ownedComment xmi:id="_rq10CRTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3DE767BD001B">
              <body>References the Operations that are redefined by this Operation.</body>
            </ownedComment>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rq10DRTaEdqZu-3Jy1-uYg" value="*"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rq10DBTaEdqZu-3Jy1-uYg"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_3ADC7B74022D3DEE7BDA017A" name="type" type="_3ADC7B74022D3E555229003B" isDerived="true" association="_3ADC7B74022D3DEE7BD90219">
            <ownedComment xmi:id="_rrla5hTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3DEE7BDA017A">
              <body>This information is derived from the return result for this Operation.</body>
            </ownedComment>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rrla6hTaEdqZu-3Jy1-uYg" value="1"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rrla6RTaEdqZu-3Jy1-uYg"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_3ADC7B74022D4161AA270132" name="ownedParameter" type="_3ADC7B74022D3DE6D57D00A3" isOrdered="true" aggregation="composite" redefinedProperty="_3ADC7B74022D3DE7637803DB" association="_3ADC7B74022D4161AA250298">
            <ownedComment xmi:id="_rsxtyxTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D4161AA270132">
              <body>Specifies the ordered set of formal parameters of this BehavioralFeature.</body>
            </ownedComment>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rs63oxTaEdqZu-3Jy1-uYg" value="*"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rs63ohTaEdqZu-3Jy1-uYg"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_nWbKER-yEdqIE6mxof-rZA" name="precondition" type="_3ADC7B74022D3DE766450007" aggregation="composite" subsettedProperty="_s_9I8R-zEdqIE6mxof-rZA" association="_nWbKEB-yEdqIE6mxof-rZA">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_nWbKFB-yEdqIE6mxof-rZA" value="*"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_nWbKEx-yEdqIE6mxof-rZA"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_s0ANER-yEdqIE6mxof-rZA" name="postcondition" type="_3ADC7B74022D3DE766450007" aggregation="composite" subsettedProperty="_s_9I8R-zEdqIE6mxof-rZA" association="_s0ANEB-yEdqIE6mxof-rZA">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_s0ANFB-yEdqIE6mxof-rZA" value="*"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_s0ANEx-yEdqIE6mxof-rZA"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_uPMYsR-yEdqIE6mxof-rZA" name="bodyCondition" type="_3ADC7B74022D3DE766450007" aggregation="composite" subsettedProperty="_s_9I8R-zEdqIE6mxof-rZA" association="_uPMYsB-yEdqIE6mxof-rZA">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_uPMYtB-yEdqIE6mxof-rZA" value="1"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_uPMYsx-yEdqIE6mxof-rZA"/>
          </ownedAttribute>
          <ownedOperation xmi:id="_3ADC7B74022D3E142EC50359" name="isOrdered" isQuery="true" bodyCondition="_rnaFihTaEdqZu-3Jy1-uYg">
            <ownedComment xmi:id="_rnaFhhTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3E142EC50359">
              <body>If this operation has a return parameter, isOrdered equals the value of isOrdered for that parameter. Otherwise isOrdered is false.</body>
            </ownedComment>
            <ownedRule xmi:id="_rnaFihTaEdqZu-3Jy1-uYg" name="spec" constrainedElement="_3ADC7B74022D3E142EC50359 _3ADC7B74022D3E03284C0289">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_rnaFixTaEdqZu-3Jy1-uYg">
                <language>OCL</language>
                <body>result = if returnResult->size() = 1 then returnResult->any().isOrdered else false endif</body>
              </specification>
            </ownedRule>
            <ownedParameter xmi:id="_rnaFiRTaEdqZu-3Jy1-uYg" type="_3ADC7B74022D3CA010AC0090" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_3ADC7B74022D3E142F090090" name="isUnique" isQuery="true" bodyCondition="_rnaFkxTaEdqZu-3Jy1-uYg">
            <ownedComment xmi:id="_rnaFjxTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3E142F090090">
              <body>If this operation has a return parameter, isUnique equals the value of isUnique for that parameter. Otherwise isUnique is true.</body>
            </ownedComment>
            <ownedRule xmi:id="_rnaFkxTaEdqZu-3Jy1-uYg" name="spec" constrainedElement="_3ADC7B74022D3E142F090090 _3ADC7B74022D3E032859015B">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_rnaFlBTaEdqZu-3Jy1-uYg">
                <language>OCL</language>
                <body>result = if returnResult->size() = 1 then returnResult->any().isUnique else true endif</body>
              </specification>
            </ownedRule>
            <ownedParameter xmi:id="_rnaFkhTaEdqZu-3Jy1-uYg" type="_3ADC7B74022D3CA010AC0090" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_3ADC7B74022D3E142F3E03CB" name="lower" isQuery="true" bodyCondition="_rnj2hhTaEdqZu-3Jy1-uYg">
            <ownedComment xmi:id="_rnj2gBTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3E142F3E03CB">
              <body>If this operation has a return parameter, lower equals the value of lower for that parameter. Otherwise lower is not defined.</body>
            </ownedComment>
            <ownedRule xmi:id="_rnj2hhTaEdqZu-3Jy1-uYg" name="spec" constrainedElement="_3ADC7B74022D3E142F3E03CB _3ADC7B74022D3E0328B001D9">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_rnj2hxTaEdqZu-3Jy1-uYg">
                <language>OCL</language>
                <body>result = if returnResult->size() = 1 then returnResult->any().lower else Set{} endif</body>
              </specification>
            </ownedRule>
            <ownedParameter xmi:id="_rnj2gxTaEdqZu-3Jy1-uYg" type="_3ADC7B74022D3CA010A4007B" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_3ADC7B74022D3E142F7500B3" name="upper" isQuery="true" bodyCondition="_rnj2kRTaEdqZu-3Jy1-uYg">
            <ownedComment xmi:id="_rnj2ixTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3E142F7500B3">
              <body>If this operation has a return parameter, upper equals the value of upper for that parameter. Otherwise upper is not defined.</body>
            </ownedComment>
            <ownedRule xmi:id="_rnj2kRTaEdqZu-3Jy1-uYg" name="spec" constrainedElement="_3ADC7B74022D3E142F7500B3 _3ADC7B74022D3E0328710341">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_rnj2khTaEdqZu-3Jy1-uYg">
                <language>OCL</language>
                <body>result = if returnResult->size() = 1 then returnResult->any().upper else Set{} endif</body>
              </specification>
            </ownedRule>
            <ownedParameter xmi:id="_rnj2jhTaEdqZu-3Jy1-uYg" type="_3ADC7B74022D3DE6A93C0003" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_3ADC7B74022D3E142FBB01EA" name="type" isQuery="true" bodyCondition="_rntAchTaEdqZu-3Jy1-uYg">
            <ownedComment xmi:id="_rnj2lhTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3E142FBB01EA">
              <body>If this operation has a return parameter, type equals the value of type for that parameter. Otherwise type is not defined.</body>
            </ownedComment>
            <ownedRule xmi:id="_rntAchTaEdqZu-3Jy1-uYg" name="spec" constrainedElement="_3ADC7B74022D3E142FBB01EA _3ADC7B74022D3DEE7BDA017A">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_rntAcxTaEdqZu-3Jy1-uYg">
                <language>OCL</language>
                <body>result = if returnResult->size() = 1 then returnResult->any().type else Set{} endif</body>
              </specification>
            </ownedRule>
            <ownedParameter xmi:id="_rnj2mRTaEdqZu-3Jy1-uYg" type="_3ADC7B74022D3E555229003B" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_3ADC7B74022D3E143033011B" name="isConsistentWith" isQuery="true" precondition="_rntAhRTaEdqZu-3Jy1-uYg" redefinedOperation="_3ADC7B74022D42EE305C00D3" bodyCondition="_rntAhxTaEdqZu-3Jy1-uYg">
            <ownedComment xmi:id="_rntAgBTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3E143033011B">
              <body>The query isConsistentWith() specifies, for any two Operations in a context in which redefinition is possible, whether redefinition would be consistent in the sense of maintaining type covariance. Other senses of consistency may be required, for example to determine consistency in the sense of contravariance. Users may define alternative queries under names different from 'isConsistentWith()', as for example, users may define a query named 'isContravariantWith()'.</body>
            </ownedComment>
            <ownedRule xmi:id="_rntAhRTaEdqZu-3Jy1-uYg" constrainedElement="_3ADC7B74022D3E143033011B">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_rntAhhTaEdqZu-3Jy1-uYg">
                <language>OCL</language>
                <body>redefinee.isRedefinitionContextValid(self)</body>
              </specification>
            </ownedRule>
            <ownedRule xmi:id="_rntAhxTaEdqZu-3Jy1-uYg" name="spec" constrainedElement="_3ADC7B74022D3E143033011B">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_rntAiBTaEdqZu-3Jy1-uYg">
                <language>OCL</language>
                <body>result = (redefinee.oclIsKindOf(Operation) and
    let op: Operation = redefinee.oclAsType(Operation) in
        self.formalParameter.size() = op.formalParameter.size() and
        self.returnResult.size() = op.returnResult.size() and
        forAll(i | op.formalParameter[i].type.conformsTo(self.formalParameter[i].type)) and
        forAll(i | op.returnResult[i].type.conformsTo(self.returnResult[i].type))
)</body>
              </specification>
            </ownedRule>
            <ownedParameter xmi:id="_rntAgxTaEdqZu-3Jy1-uYg" type="_3ADC7B74022D3CA010AC0090" direction="return"/>
            <ownedParameter xmi:id="_3ADC7B74022D3E14304B03AA" name="redefinee" type="_3ADC7B74022D3DE6C81D0244"/>
          </ownedOperation>
          <ownedOperation xmi:id="_ipBfsB8WEdqZ_KzuBfefCA" name="returnResult" isQuery="true" bodyCondition="__KtXgB8WEdqZ_KzuBfefCA">
            <ownedRule xmi:id="__KtXgB8WEdqZ_KzuBfefCA" name="spec" constrainedElement="_ipBfsB8WEdqZ_KzuBfefCA">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="__KtXgR8WEdqZ_KzuBfefCA">
                <language>OCL</language>
                <body>result = ownedParameter->select (par | par.direction = #return)</body>
              </specification>
            </ownedRule>
            <ownedParameter xmi:id="_q_YGoB8WEdqZ_KzuBfefCA" type="_3ADC7B74022D3DE6D57D00A3" direction="return">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wVqO0B8WEdqZ_KzuBfefCA" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vYQycB8WEdqZ_KzuBfefCA"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_3ADC7B74022D3DE6D57D00A3" name="Parameter">
          <ownedComment xmi:id="_roAiexTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3DE6D57D00A3">
            <body>A parameter is a specification of an argument used to pass information into or out of an invocation of a behavioral feature.</body>
          </ownedComment>
          <generalization xmi:id="_3ADC7B74022D3DEE1EF703C3" general="_3ADC7B74022D3DE6C3F20254"/>
          <generalization xmi:id="_3ADC7B74022D3E56142D01A7" general="_3ADC7B74022D3DE6C66D02F8"/>
          <ownedAttribute xmi:id="_3ADC7B74022D3DE7647D021E" name="default" type="_3ADC7B74022D3CA010B103C3">
            <ownedComment xmi:id="_roAigRTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3DE7647D021E">
              <body>Specifies a String that represents a value to be used when no argument is supplied for the Parameter.</body>
            </ownedComment>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_roAihRTaEdqZu-3Jy1-uYg" value="1"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_roAihBTaEdqZu-3Jy1-uYg"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_3ADC7B74022D4161A8A60091" name="direction" type="_3ADC7B74022D4161A8F100CC">
            <ownedComment xmi:id="_roAihxTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D4161A8A60091">
              <body>Indicates whether a parameter is being sent into or out of a behavioral element.</body>
            </ownedComment>
            <defaultValue xmi:type="uml:InstanceValue" xmi:id="_roAiihTaEdqZu-3Jy1-uYg" instance="_3ADC7B74022D4161A93C01BC"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_3ADC7B74022D4161AA27013C" name="operation" type="_3ADC7B74022D3DE6D56F031A" subsettedProperty="_3ADC7B74022D3DFCB86501A0" association="_3ADC7B74022D4161AA250298">
            <ownedComment xmi:id="_rs63pRTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D4161AA27013C">
              <body>References the Operation owning this parameter.</body>
            </ownedComment>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rs63qRTaEdqZu-3Jy1-uYg" value="1"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rs63qBTaEdqZu-3Jy1-uYg"/>
          </ownedAttribute>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_3ADC7B74022D3DE7632A0090" name="BehavioralFeature" isAbstract="true">
          <ownedComment xmi:id="_roTdYRTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3DE7632A0090">
            <body>A behavioral feature is a feature of a classifier that specifies an aspect of the behavior of its instances.</body>
          </ownedComment>
          <generalization xmi:id="_3ADC7B74022D3DEE20740031" general="_3ADC7B74022D3DE6C7BD0034"/>
          <generalization xmi:id="_3ADC7B74022D3DEE21650100" general="_3ADC7B74022D3DE6C03E0388"/>
          <ownedAttribute xmi:id="_3ADC7B74022D3DE7637803DB" name="ownedParameter" type="_3ADC7B74022D3DE6D57D00A3" isOrdered="true" aggregation="composite" subsettedProperty="_3ADC7B74022D3DFCB8650177" association="_3ADC7B74022D3DE76378015A">
            <ownedComment xmi:id="_rq10ERTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3DE7637803DB">
              <body>Specifies the ordered set of formal parameters of this BehavioralFeature.</body>
            </ownedComment>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rq10FRTaEdqZu-3Jy1-uYg" value="*"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rq10FBTaEdqZu-3Jy1-uYg"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_3ADC7B74022D3DE76511013A" name="raisedException" type="_3ADC7B74022D3E555229003B" association="_3ADC7B74022D3DE7651002AB">
            <ownedComment xmi:id="_rq10GxTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3DE76511013A">
              <body>References the Types representing exceptions that may be raised during an invocation of this feature.</body>
            </ownedComment>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rq-98RTaEdqZu-3Jy1-uYg" value="*"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rq-98BTaEdqZu-3Jy1-uYg"/>
          </ownedAttribute>
          <ownedOperation xmi:id="_3ADC7B74022D3E142E0F01A9" name="isDistinguishableFrom" isQuery="true" redefinedOperation="_3ADC7B74022D42EE305C0081" bodyCondition="_roTdbRTaEdqZu-3Jy1-uYg">
            <ownedComment xmi:id="_roTdZxTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3E142E0F01A9">
              <body>The query isDistinguishableFrom() determines whether two BehavioralFeatures may coexist in the same Namespace. It specifies that they have to have different signatures.</body>
            </ownedComment>
            <ownedRule xmi:id="_roTdbRTaEdqZu-3Jy1-uYg" name="spec" constrainedElement="_3ADC7B74022D3E142E0F01A9">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_roTdbhTaEdqZu-3Jy1-uYg">
                <language>OCL</language>
                <body>result = if n.oclIsKindOf(BehavioralFeature)
then
  if ns.getNamesOfMember(self)->intersection(ns.getNamesOfMember(n))->notEmpty()
  then Set{}->include(self)->include(n)->isUnique( bf | bf.parameter->collect(type))
  else true
  endif
else true
endif</body>
              </specification>
            </ownedRule>
            <ownedParameter xmi:id="_roTdahTaEdqZu-3Jy1-uYg" type="_3ADC7B74022D3CA010AC0090" direction="return"/>
            <ownedParameter xmi:id="_3ADC7B74022D3E142E3102A2" name="n" type="_3ADC7B74022D3DE6BC6B01BD"/>
            <ownedParameter xmi:id="_3ADC7B74022D3E142E43008B" name="ns" type="_3ADC7B74022D3DE6C03E0388"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_3ADC7B74022D3DE6D5E7016E" name="ElementImport">
          <ownedComment xmi:id="_roTdchTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3DE6D5E7016E">
            <body>An element import identifies an element in another package, and allows the element to be referenced using its name without a qualifier.</body>
          </ownedComment>
          <ownedRule xmi:id="_rodOYxTaEdqZu-3Jy1-uYg" name="visibility_public_or_private" constrainedElement="_3ADC7B74022D3DE6D5E7016E">
            <ownedComment xmi:id="_roTddxTaEdqZu-3Jy1-uYg" annotatedElement="_rodOYxTaEdqZu-3Jy1-uYg">
              <body>The visibility of an ElementImport is either public or private.</body>
            </ownedComment>
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_rodOZBTaEdqZu-3Jy1-uYg">
              <language>OCL</language>
              <body>self.visibility = #public or self.visibility = #private</body>
            </specification>
          </ownedRule>
          <ownedRule xmi:id="_rodObBTaEdqZu-3Jy1-uYg" name="imported_element_is_public" constrainedElement="_3ADC7B74022D3DE6D5E7016E">
            <ownedComment xmi:id="_rodOaBTaEdqZu-3Jy1-uYg" annotatedElement="_rodObBTaEdqZu-3Jy1-uYg">
              <body>An importedElement has either public visibility or no visibility at all.</body>
            </ownedComment>
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_rodObRTaEdqZu-3Jy1-uYg">
              <language>OCL</language>
              <body>self.importedElement.visibility.notEmpty() implies self.importedElement.visibility = #public</body>
            </specification>
          </ownedRule>
          <generalization xmi:id="_3ADC7B74022D3DE6DFF400E2" general="_3ADC7B74022D3DE6C82E03E4"/>
          <ownedAttribute xmi:id="_3ADC7B74022D3DEE87110345" name="visibility" type="_3ADC7B74022D41C2D6020188">
            <ownedComment xmi:id="_rodOehTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3DEE87110345">
              <body>Specifies the visibility of the imported PackageableElement within the importing Package. The default visibility is the same as that of the imported element. If the imported element does not have a visibility, it is possible to add visibility to the element import.</body>
            </ownedComment>
            <defaultValue xmi:type="uml:InstanceValue" xmi:id="_1VPa8GgXEdqfYrlcy8iLFA" type="_3ADC7B74022D41C2D6020188" instance="_3ADC7B74022D41C2D6140206"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_3ADC7B74022D3DEE875F0333" name="alias" type="_3ADC7B74022D3CA010B103C3">
            <ownedComment xmi:id="_rodOfhTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3DEE875F0333">
              <body>Specifies the name that should be added to the namespace of the importing package in lieu of the name of the imported packagable element. The aliased name must not clash with any other member name in the importing package. By default, no alias is used.</body>
            </ownedComment>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rodOghTaEdqZu-3Jy1-uYg" value="1"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rodOgRTaEdqZu-3Jy1-uYg"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_3ADC7B74022D3DE6DF6803A7" name="importedElement" type="_3ADC7B74022D3DE6C1F002C3" subsettedProperty="_3ADC7B74022D3DFCACAF0090" association="_3ADC7B74022D3DE6DF68013A">
            <ownedComment xmi:id="_rq--BxTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3DE6DF6803A7">
              <body>Specifies the PackageableElement whose name is to be added to a Namespace.</body>
            </ownedComment>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rrIu8xTaEdqZu-3Jy1-uYg" value="1"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rrIu8hTaEdqZu-3Jy1-uYg" value="1"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_3ADC7B74022D3DE6E0040317" name="importingNamespace" type="_3ADC7B74022D3DE6C03E0388" subsettedProperty="_3ADC7B74022D3DFCAC7900D9 _3ADC7B74022D3DFCA80700BE" association="_3ADC7B74022D3DE6E0040076">
            <ownedComment xmi:id="_rrIu_RTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3DE6E0040317">
              <body>Specifies the Namespace that imports a PackageableElement from another Package.</body>
            </ownedComment>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rrIvARTaEdqZu-3Jy1-uYg" value="1"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rrIvABTaEdqZu-3Jy1-uYg" value="1"/>
          </ownedAttribute>
          <ownedOperation xmi:id="_3ADC7B74022D3E1429E403A3" name="getName" isQuery="true" bodyCondition="_rodOdRTaEdqZu-3Jy1-uYg">
            <ownedComment xmi:id="_rodOcRTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3E1429E403A3">
              <body>The query getName() returns the name under which the imported PackageableElement will be known in the importing namespace.</body>
            </ownedComment>
            <ownedRule xmi:id="_rodOdRTaEdqZu-3Jy1-uYg" name="spec" constrainedElement="_3ADC7B74022D3E1429E403A3">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_rodOdhTaEdqZu-3Jy1-uYg">
                <language>OCL</language>
                <body>result = if self.alias->notEmpty() then 
  self.alias
else
  self.importedElement.name
endif</body>
              </specification>
            </ownedRule>
            <ownedParameter xmi:id="_rodOdBTaEdqZu-3Jy1-uYg" type="_3ADC7B74022D3CA010B103C3" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_3ADC7B74022D3DE6D5DA0183" name="Package">
          <ownedComment xmi:id="_rodOhBTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3DE6D5DA0183">
            <body>A package is used to group elements, and provides a namespace for the grouped elements.</body>
          </ownedComment>
          <ownedRule xmi:id="_romYWRTaEdqZu-3Jy1-uYg" name="elements_public_or_private" constrainedElement="_3ADC7B74022D3DE6D5DA0183">
            <ownedComment xmi:id="_romYVRTaEdqZu-3Jy1-uYg" annotatedElement="_romYWRTaEdqZu-3Jy1-uYg">
              <body>If an element that is owned by a package has visibility, it is public or private.</body>
            </ownedComment>
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_romYWhTaEdqZu-3Jy1-uYg">
              <language>OCL</language>
              <body>self.ownedElements->forAll(e | e.visibility->notEmpty() implies e.visbility = #public or e.visibility = #private)</body>
            </specification>
          </ownedRule>
          <generalization xmi:id="_3ADC7B74022D3DE6DDF7023E" general="_3ADC7B74022D3DE6C1F002C3"/>
          <generalization xmi:id="_3ADC7B74022D3DE6DFA30185" general="_3ADC7B74022D3DE6C03E0388"/>
          <ownedAttribute xmi:id="_3ADC7B74022D3DE6E0F500FF" name="packagedElement" type="_3ADC7B74022D3DE6C1F002C3" aggregation="composite" subsettedProperty="_3ADC7B74022D3DFCB8650177" association="_3ADC7B74022D3DE6E0F402CA">
            <ownedComment xmi:id="_rrR45hTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3DE6E0F500FF">
              <body>Specifies the packageable elements that are owned by this Package.</body>
            </ownedComment>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rrR46hTaEdqZu-3Jy1-uYg" value="*"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rrR46RTaEdqZu-3Jy1-uYg"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_3ADC7B74022D3DEE344701CC" name="ownedType" type="_3ADC7B74022D3E555229003B" isDerived="true" aggregation="composite" subsettedProperty="_3ADC7B74022D3DE6E0F500FF" association="_3ADC7B74022D3DEE344602C4">
            <ownedComment xmi:id="_rrR48BTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3DEE344701CC">
              <body>References the packaged elements that are Types.</body>
            </ownedComment>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rrR49BTaEdqZu-3Jy1-uYg" value="*"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rrR48xTaEdqZu-3Jy1-uYg"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_3ADC7B74022D3DEE6FD3029F" name="nestedPackage" type="_3ADC7B74022D3DE6D5DA0183" isDerived="true" aggregation="composite" subsettedProperty="_3ADC7B74022D3DE6E0F500FF" association="_3ADC7B74022D3DEE6FD102CF">
            <ownedComment xmi:id="_rrbp7xTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3DEE6FD3029F">
              <body>References the packaged elements that are Packages.</body>
            </ownedComment>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rrbp8xTaEdqZu-3Jy1-uYg" value="*"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rrbp8hTaEdqZu-3Jy1-uYg"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_3ADC7B74022D3DEE6FD302F9" name="nestingPackage" type="_3ADC7B74022D3DE6D5DA0183" subsettedProperty="_3ADC7B74022D3DFCB86501A0" association="_3ADC7B74022D3DEE6FD102CF">
            <ownedComment xmi:id="_rrbp9xTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3DEE6FD302F9">
              <body>References the Package that owns this Package.</body>
            </ownedComment>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rrla4xTaEdqZu-3Jy1-uYg" value="1"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rrla4hTaEdqZu-3Jy1-uYg"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_3ADC7B74022D3DF68066000E" name="packageMerge" type="_3ADC7B74022D3DEE8DFE0290" aggregation="composite" subsettedProperty="_3ADC7B74022D3DFCA80700B4" association="_3ADC7B74022D3DF68066000C">
            <ownedComment xmi:id="_rrla9hTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3DF68066000E">
              <body>References the PackageMerges that are owned by this Package.</body>
            </ownedComment>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rrla-hTaEdqZu-3Jy1-uYg" value="*"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rrla-RTaEdqZu-3Jy1-uYg"/>
          </ownedAttribute>
          <ownedOperation xmi:id="_3ADC7B74022D3E14315003AF" name="mustBeOwned" isQuery="true" redefinedOperation="_3ADC7B74022D42EE305C0073" bodyCondition="_romYYhTaEdqZu-3Jy1-uYg">
            <ownedComment xmi:id="_romYXhTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3E14315003AF">
              <body>The query mustBeOwned() indicates whether elements of this type must have an owner.</body>
            </ownedComment>
            <ownedRule xmi:id="_romYYhTaEdqZu-3Jy1-uYg" name="spec" constrainedElement="_3ADC7B74022D3E14315003AF">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_romYYxTaEdqZu-3Jy1-uYg">
                <language>OCL</language>
                <body>result = false</body>
              </specification>
            </ownedRule>
            <ownedParameter xmi:id="_romYYRTaEdqZu-3Jy1-uYg" type="_3ADC7B74022D3CA010AC0090" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_3ADC7B74022D3E143175007D" name="visibleMembers" isQuery="true" bodyCondition="_romYaxTaEdqZu-3Jy1-uYg">
            <ownedComment xmi:id="_romYZxTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3E143175007D">
              <body>The query visibleMembers() defines which members of a Package can be accessed outside it.</body>
            </ownedComment>
            <ownedRule xmi:id="_romYaxTaEdqZu-3Jy1-uYg" name="spec" constrainedElement="_3ADC7B74022D3E143175007D">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_romYbBTaEdqZu-3Jy1-uYg">
                <language>OCL</language>
                <body>result = member->select( m | self.makesVisible(m))</body>
              </specification>
            </ownedRule>
            <ownedParameter xmi:id="_romYahTaEdqZu-3Jy1-uYg" type="_3ADC7B74022D3DE6C1F002C3" direction="return">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_GgMs4RTbEdqZu-3Jy1-uYg" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_GgMs4BTbEdqZu-3Jy1-uYg"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_3ADC7B74022D3E1431A90385" name="makesVisible" isQuery="true" precondition="_rowJVBTaEdqZu-3Jy1-uYg" bodyCondition="_rowJVhTaEdqZu-3Jy1-uYg">
            <ownedComment xmi:id="_romYcBTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3E1431A90385">
              <body>The query makesVisible() defines whether a Package makes an element visible outside itself. Elements with no visibility and elements with public visibility are made visible.</body>
            </ownedComment>
            <ownedRule xmi:id="_rowJVBTaEdqZu-3Jy1-uYg" constrainedElement="_3ADC7B74022D3E1431A90385">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_rowJVRTaEdqZu-3Jy1-uYg">
                <language>OCL</language>
                <body>self.member->includes(el)</body>
              </specification>
            </ownedRule>
            <ownedRule xmi:id="_rowJVhTaEdqZu-3Jy1-uYg" name="spec" constrainedElement="_3ADC7B74022D3E1431A90385">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_rowJVxTaEdqZu-3Jy1-uYg">
                <language>OCL</language>
                <body>result = (ownedMember->includes(el)) or
   (elementImport->
      select(ei|ei.visibility = #public)->
         collect(ei|ei.importedElement)->includes(el)) or
   (packageImport->
      select(pi|pi.visibility = #public)->
        collect(pi|
           pi.importedPackage.member->includes(el))->notEmpty())</body>
              </specification>
            </ownedRule>
            <ownedParameter xmi:id="_rowJUhTaEdqZu-3Jy1-uYg" type="_3ADC7B74022D3CA010AC0090" direction="return"/>
            <ownedParameter xmi:id="_3ADC7B74022D3E1431D80292" name="el" type="_3ADC7B74022D3DE6BC6B01BD"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_3ADC7B74022D3DE6D5E002D7" name="PackageImport">
          <ownedComment xmi:id="_rowJWxTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3DE6D5E002D7">
            <body>A package import is a relationship that allows the use of unqualified names to refer to package members from other namespaces.</body>
          </ownedComment>
          <ownedRule xmi:id="_rowJZBTaEdqZu-3Jy1-uYg" name="public_or_private" constrainedElement="_3ADC7B74022D3DE6D5E002D7">
            <ownedComment xmi:id="_rowJYBTaEdqZu-3Jy1-uYg" annotatedElement="_rowJZBTaEdqZu-3Jy1-uYg">
              <body>The visibility of a PackageImport is either public or private.</body>
            </ownedComment>
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_rowJZRTaEdqZu-3Jy1-uYg">
              <language>OCL</language>
              <body>self.visibility = #public or self.visibility = #private</body>
            </specification>
          </ownedRule>
          <generalization xmi:id="_3ADC7B74022D3DE6DFFC022E" general="_3ADC7B74022D3DE6C82E03E4"/>
          <ownedAttribute xmi:id="_3ADC7B74022D3DEE878403C3" name="visibility" type="_3ADC7B74022D41C2D6020188">
            <ownedComment xmi:id="_rowJaRTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3DEE878403C3">
              <body>Specifies the visibility of the imported PackageableElements within the importing Namespace, i.e., whether imported elements will in turn be visible to other packages that use that importingPackage as an importedPackage. If the PackageImport is public, the imported elements will be visible outside the package, while if it is private they will not.</body>
            </ownedComment>
            <defaultValue xmi:type="uml:InstanceValue" xmi:id="_CTYsYGgYEdqfYrlcy8iLFA" type="_3ADC7B74022D41C2D6020188" instance="_3ADC7B74022D41C2D6140206"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_3ADC7B74022D3DE6DEFF023E" name="importedPackage" type="_3ADC7B74022D3DE6D5DA0183" subsettedProperty="_3ADC7B74022D3DFCACAF0090" association="_3ADC7B74022D3DE6DEFE0106">
            <ownedComment xmi:id="_rq-9_xTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3DE6DEFF023E">
              <body>Specifies the Package whose members are imported into a Namespace.</body>
            </ownedComment>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rq--AxTaEdqZu-3Jy1-uYg" value="1"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rq--AhTaEdqZu-3Jy1-uYg" value="1"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_3ADC7B74022D3DE6E00902D7" name="importingNamespace" type="_3ADC7B74022D3DE6C03E0388" subsettedProperty="_3ADC7B74022D3DFCAC7900D9 _3ADC7B74022D3DFCA80700BE" association="_3ADC7B74022D3DE6E00900B0">
            <ownedComment xmi:id="_rrIvChTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3DE6E00902D7">
              <body>Specifies the Namespace that imports the members from a Package.</body>
            </ownedComment>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rrR44xTaEdqZu-3Jy1-uYg" value="1"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rrR44hTaEdqZu-3Jy1-uYg" value="1"/>
          </ownedAttribute>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_3ADC7B74022D3DEE8DFE0290" name="PackageMerge">
          <ownedComment xmi:id="_rowJbRTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3DEE8DFE0290">
            <body>A package merge defines how the contents of one package are extended by the contents of another package.</body>
          </ownedComment>
          <generalization xmi:id="_3ADC7B74022D3DEE8EAA032E" general="_3ADC7B74022D3DE6C82E03E4"/>
          <ownedAttribute xmi:id="_3ADC7B74022D3DF68066000D" name="receivingPackage" type="_3ADC7B74022D3DE6D5DA0183" subsettedProperty="_3ADC7B74022D3DFCAC7900D9 _3ADC7B74022D3DFCA80700BE" association="_3ADC7B74022D3DF68066000C">
            <ownedComment xmi:id="_rrla8BTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3DF68066000D">
              <body>References the Package that is being extended with the contents of the merged package of the PackageMerge.</body>
            </ownedComment>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rrla9BTaEdqZu-3Jy1-uYg" value="1"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rrla8xTaEdqZu-3Jy1-uYg" value="1"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_3ADC7B74022D3DF6806A03A2" name="mergedPackage" type="_3ADC7B74022D3DE6D5DA0183" subsettedProperty="_3ADC7B74022D3DFCACAF0090" association="_3ADC7B74022D3DF6806A03A1">
            <ownedComment xmi:id="_rruk0hTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3DF6806A03A2">
              <body>References the Package that is to be merged with the receiving package of the PackageMerge.</body>
            </ownedComment>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rruk1hTaEdqZu-3Jy1-uYg" value="1"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rruk1RTaEdqZu-3Jy1-uYg" value="1"/>
          </ownedAttribute>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_3ADC7B74022D3E555229003B" name="Type" isAbstract="true">
          <ownedComment xmi:id="_ro5TQRTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3E555229003B">
            <body>A type is a named element that is used as the type for a typed element. A type can be contained in a package.</body>
          </ownedComment>
          <generalization xmi:id="_3ADC7B74022D3E5553B3007E" general="_3ADC7B74022D3DE6BC6B01BD"/>
          <generalization xmi:id="_3ADC7B74022D3E5558D50178" general="_3ADC7B74022D3DE6C1F002C3"/>
          <ownedAttribute xmi:id="_3ADC7B74022D3DEE344701FE" name="package" type="_3ADC7B74022D3DE6D5DA0183" subsettedProperty="_3ADC7B74022D3DFCB86501A0" association="_3ADC7B74022D3DEE344602C4">
            <ownedComment xmi:id="_rrR4-BTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3DEE344701FE">
              <body>Specifies the owning package of this classifier, if any.</body>
            </ownedComment>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rrR4_BTaEdqZu-3Jy1-uYg" value="1"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rrR4-xTaEdqZu-3Jy1-uYg"/>
          </ownedAttribute>
          <ownedOperation xmi:id="_3ADC7B74022D42EE305C010B" name="conformsTo" isQuery="true" bodyCondition="_ro5TTBTaEdqZu-3Jy1-uYg">
            <ownedComment xmi:id="_ro5TRxTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D42EE305C010B">
              <body>The query conformsTo() gives true for a type that conforms to another. By default, two types do not conform to each other. This query is intended to be redefined for specific conformance situations.</body>
            </ownedComment>
            <ownedRule xmi:id="_ro5TTBTaEdqZu-3Jy1-uYg" name="spec" constrainedElement="_3ADC7B74022D42EE305C010B">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_ro5TTRTaEdqZu-3Jy1-uYg">
                <language>OCL</language>
                <body>result = false</body>
              </specification>
            </ownedRule>
            <ownedParameter xmi:id="_ro5TShTaEdqZu-3Jy1-uYg" type="_3ADC7B74022D3CA010AC0090" direction="return"/>
            <ownedParameter xmi:id="_3ADC7B74022D42EE66DC039F" name="other" type="_3ADC7B74022D3E555229003B"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_3ADC7B74022D3DE6BC6B01BD" name="NamedElement" isAbstract="true">
          <ownedComment xmi:id="_ro5TURTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3DE6BC6B01BD">
            <body>A named element is an element in a model that may have a name.</body>
          </ownedComment>
          <ownedRule xmi:id="_ro5TWhTaEdqZu-3Jy1-uYg" name="has_no_qualified_name" constrainedElement="_3ADC7B74022D3DE6BC6B01BD">
            <ownedComment xmi:id="_ro5TVhTaEdqZu-3Jy1-uYg" annotatedElement="_ro5TWhTaEdqZu-3Jy1-uYg">
              <body>If there is no name, or one of the containing namespaces has no name, there is no qualified name.</body>
            </ownedComment>
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_ro5TWxTaEdqZu-3Jy1-uYg">
              <language>OCL</language>
              <body>(self.name->isEmpty() or self.allNamespaces()->select(ns | ns.name->isEmpty())->notEmpty())&#xD;
  implies self.qualifiedName->isEmpty()</body>
            </specification>
          </ownedRule>
          <ownedRule xmi:id="_rpDEQxTaEdqZu-3Jy1-uYg" name="has_qualified_name" constrainedElement="_3ADC7B74022D3DE6BC6B01BD">
            <ownedComment xmi:id="_ro5TXxTaEdqZu-3Jy1-uYg" annotatedElement="_rpDEQxTaEdqZu-3Jy1-uYg">
              <body>When there is a name, and all of the containing namespaces have a name, the qualified name is constructed from the names of the containing namespaces.</body>
            </ownedComment>
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_rpDERBTaEdqZu-3Jy1-uYg">
              <language>OCL</language>
              <body>(self.name->notEmpty() and self.allNamespaces()->select(ns | ns.name->isEmpty())->isEmpty()) implies
  self.qualifiedName = self.allNamespaces()->iterate( ns : Namespace; result: String = self.name | ns.name->union(self.separator())->union(result))</body>
            </specification>
          </ownedRule>
          <ownedRule xmi:id="_rpM1RxTaEdqZu-3Jy1-uYg" name="visibility_needs_ownership" constrainedElement="_3ADC7B74022D3DE6BC6B01BD">
            <ownedComment xmi:id="_rpM1QxTaEdqZu-3Jy1-uYg" annotatedElement="_rpM1RxTaEdqZu-3Jy1-uYg">
              <body>If a NamedElement is not owned by a Namespace, it does not have a visibility.</body>
            </ownedComment>
            <specification xmi:type="uml:OpaqueExpression" xmi:id="_rpM1SBTaEdqZu-3Jy1-uYg">
              <language>OCL</language>
              <body>namespace->isEmpty() implies visibility->isEmpty()</body>
            </specification>
          </ownedRule>
          <generalization xmi:id="_3ADC7B74022D3DE6BC7D03AE" general="_3ADC7B74022D3DE6BAB70076"/>
          <ownedAttribute xmi:id="_3ADC7B74022D3DE6BF540255" name="name" type="_3ADC7B74022D3CA010B103C3">
            <ownedComment xmi:id="_rpM1TBTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3DE6BF540255">
              <body>The name of the NamedElement.</body>
            </ownedComment>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rpM1UBTaEdqZu-3Jy1-uYg" value="1"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rpM1TxTaEdqZu-3Jy1-uYg"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_3ADC7B74022D41C2D63E00EE" name="visibility" type="_3ADC7B74022D41C2D6020188">
            <ownedComment xmi:id="_rpM1UhTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D41C2D63E00EE">
              <body>Determines where the NamedElement appears within different Namespaces within the overall model, and its accessibility.</body>
            </ownedComment>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rpM1VhTaEdqZu-3Jy1-uYg" value="1"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rpM1VRTaEdqZu-3Jy1-uYg"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_3ADC7B74022D3DFCB86501A0" name="namespace" type="_3ADC7B74022D3DE6C03E0388" isReadOnly="true" isDerived="true" isDerivedUnion="true" subsettedProperty="_3ADC7B74022D3DFCA80700BE" association="_3ADC7B74022D3DFCB86303CD">
            <ownedComment xmi:id="_rsn8uhTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3DFCB86501A0">
              <body>Specifies the namespace that owns the NamedElement.</body>
            </ownedComment>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rsn8vhTaEdqZu-3Jy1-uYg" value="1"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rsn8vRTaEdqZu-3Jy1-uYg"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_7-d1kIa_EdqhgMOAOWpjfQ" name="qualifiedName" type="_3ADC7B74022D3CA010B103C3" isReadOnly="true" isDerived="true">
            <ownedComment xmi:id="_7-d1k4a_EdqhgMOAOWpjfQ" annotatedElement="_7-d1kIa_EdqhgMOAOWpjfQ">
              <body>A name which allows the NamedElement to be identified within a hierarchy of nested Namespaces. It is constructed from the names of the containing namespaces starting at the root of the hierarchy and ending with the name of the NamedElement itself.</body>
            </ownedComment>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_7-d1loa_EdqhgMOAOWpjfQ" value="1"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_7-d1l4a_EdqhgMOAOWpjfQ"/>
          </ownedAttribute>
          <ownedOperation xmi:id="_3ADC7B74022D42EE305C007F" name="allNamespaces" isQuery="true" bodyCondition="_rpDETBTaEdqZu-3Jy1-uYg">
            <ownedComment xmi:id="_rpDESBTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D42EE305C007F">
              <body>The query allNamespaces() gives the sequence of namespaces in which the NamedElement is nested, working outwards.</body>
            </ownedComment>
            <ownedRule xmi:id="_rpDETBTaEdqZu-3Jy1-uYg" name="spec" constrainedElement="_3ADC7B74022D42EE305C007F">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_rpDETRTaEdqZu-3Jy1-uYg">
                <language>OCL</language>
                <body>result = if self.namespace->isEmpty()
then Sequence{}
else self.namespace.allNamespaces()->prepend(self.namespace)
endif</body>
              </specification>
            </ownedRule>
            <ownedParameter xmi:id="_rpDESxTaEdqZu-3Jy1-uYg" type="_3ADC7B74022D3DE6C03E0388" isOrdered="true" direction="return">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_GgV20RTbEdqZu-3Jy1-uYg" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_GgV20BTbEdqZu-3Jy1-uYg"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_3ADC7B74022D42EE305C0081" name="isDistinguishableFrom" isQuery="true" bodyCondition="_rpDEVxTaEdqZu-3Jy1-uYg">
            <ownedComment xmi:id="_rpDEURTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D42EE305C0081">
              <body>The query isDistinguishableFrom() determines whether two NamedElements may logically co-exist within a Namespace. By default, two named elements are distinguishable if (a) they have unrelated types or (b) they have related types but different names.</body>
            </ownedComment>
            <ownedRule xmi:id="_rpDEVxTaEdqZu-3Jy1-uYg" name="spec" constrainedElement="_3ADC7B74022D42EE305C0081">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_rpDEWBTaEdqZu-3Jy1-uYg">
                <language>OCL</language>
                <body>result = if self.oclIsKindOf(n.oclType) or n.oclIsKindOf(self.oclType)
then ns.getNamesOfMember(self)->intersection(ns.getNamesOfMember(n))->isEmpty()
else true
endif</body>
              </specification>
            </ownedRule>
            <ownedParameter xmi:id="_rpDEVBTaEdqZu-3Jy1-uYg" type="_3ADC7B74022D3CA010AC0090" direction="return"/>
            <ownedParameter xmi:id="_3ADC7B74022D42EE5CF7032F" name="n" type="_3ADC7B74022D3DE6BC6B01BD"/>
            <ownedParameter xmi:id="_3ADC7B74022D42EE5CF70330" name="ns" type="_3ADC7B74022D3DE6C03E0388"/>
          </ownedOperation>
          <ownedOperation xmi:id="_3ADC7B74022D42EE305C00A4" name="separator" isQuery="true" bodyCondition="_rpDEYBTaEdqZu-3Jy1-uYg">
            <ownedComment xmi:id="_rpDEXBTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D42EE305C00A4">
              <body>The query separator() gives the string that is used to separate names when constructing a qualified name.</body>
            </ownedComment>
            <ownedRule xmi:id="_rpDEYBTaEdqZu-3Jy1-uYg" name="spec" constrainedElement="_3ADC7B74022D42EE305C00A4">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_rpDEYRTaEdqZu-3Jy1-uYg">
                <language>OCL</language>
                <body>result = '::'</body>
              </specification>
            </ownedRule>
            <ownedParameter xmi:id="_rpDEXxTaEdqZu-3Jy1-uYg" type="_3ADC7B74022D3CA010B103C3" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_3ADC7B74022D42EE305C00A6" name="qualifiedName" isQuery="true" bodyCondition="_rpDEaRTaEdqZu-3Jy1-uYg">
            <ownedComment xmi:id="_rpDEZRTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D42EE305C00A6">
              <body>When there is a name, and all of the containing namespaces have a name, the qualified name is constructed from the names of the containing namespaces.</body>
            </ownedComment>
            <ownedRule xmi:id="_rpDEaRTaEdqZu-3Jy1-uYg" name="spec" constrainedElement="_3ADC7B74022D42EE305C00A6">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_rpDEahTaEdqZu-3Jy1-uYg">
                <language>OCL</language>
                <body>result = if self.name->notEmpty() and self.allNamespaces()->select(ns | ns.name->isEmpty())->isEmpty()
then 
    self.allNamespaces()->iterate( ns : Namespace; result: String = self.name | ns.name->union(self.separator())->union(result))
else
    Set{}
endif</body>
              </specification>
            </ownedRule>
            <ownedParameter xmi:id="_rpDEaBTaEdqZu-3Jy1-uYg" type="_3ADC7B74022D3CA010B103C3" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_3ADC7B74022D3E555F19002A" name="Expression">
          <ownedComment xmi:id="_rpM1WBTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3E555F19002A">
            <body>An expression is a structured tree of symbols that denotes a (possibly empty) set of values when evaluated in a context.</body>
          </ownedComment>
          <generalization xmi:id="_3ADC7B74022D3E555F33038E" general="_3ADC7B74022D3DE6C7F30294"/>
          <ownedAttribute xmi:id="_3ADC7B74022D3E55630701F3" name="operand" type="_3ADC7B74022D3DE6C7F30294" isOrdered="true" aggregation="composite" subsettedProperty="_3ADC7B74022D3DFCA80700B4" association="_3ADC7B74022D3E5563050088">
            <ownedComment xmi:id="_rsxtuRTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3E55630701F3">
              <body>Specifies a sequence of operands.</body>
            </ownedComment>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rsxtvRTaEdqZu-3Jy1-uYg" value="*"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rsxtvBTaEdqZu-3Jy1-uYg"/>
          </ownedAttribute>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_3ADC7B74022D41781AA6038F" name="Comment">
          <ownedComment xmi:id="_rpfwMxTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D41781AA6038F">
            <body>A comment is a textual annotation that can be attached to a set of elements.</body>
          </ownedComment>
          <generalization xmi:id="_3ADC7B74022D3DFCA9FD02FB" general="_3ADC7B74022D3DE6BAB70076"/>
          <ownedAttribute xmi:id="_3ADC7B74022D41BDD0260325" name="body" type="_3ADC7B74022D3CA010B103C3">
            <ownedComment xmi:id="_rpfwOBTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D41BDD0260325">
              <body>Specifies a string that is the comment.</body>
            </ownedComment>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_8CfA8WgVEdqfYrlcy8iLFA" value="1"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_8CfA8GgVEdqfYrlcy8iLFA"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_3ADC7B74022D3DFCAADC01BB" name="annotatedElement" type="_3ADC7B74022D3DE6BAB70076" association="_3ADC7B74022D3DFCAADB020A">
            <ownedComment xmi:id="_rr4V0hTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D3DFCAADC01BB">
              <body>References the Element(s) being commented.</body>
            </ownedComment>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rr4V1hTaEdqZu-3Jy1-uYg" value="*"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rr4V1RTaEdqZu-3Jy1-uYg"/>
          </ownedAttribute>
        </packagedElement>
        <packagedElement xmi:type="uml:Enumeration" xmi:id="_3ADC7B74022D4161A8F100CC" name="ParameterDirectionKind" visibility="private">
          <ownedComment xmi:id="_rpM1XRTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D4161A8F100CC">
            <body>Parameter direction kind is an enumeration type that defines literals used to specify direction of parameters.</body>
          </ownedComment>
          <ownedLiteral xmi:id="_3ADC7B74022D4161A93C01BC" name="in">
            <ownedComment xmi:id="_rpM1YRTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D4161A93C01BC">
              <body>Indicates that parameter values are passed into the behavioral element by the caller.</body>
            </ownedComment>
          </ownedLiteral>
          <ownedLiteral xmi:id="_3ADC7B74022D4161A94902E7" name="inout">
            <ownedComment xmi:id="_rpV_MxTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D4161A94902E7">
              <body>Indicates that parameter values are passed into a behavioral element by the caller and then back out to the caller from the behavioral element.</body>
            </ownedComment>
          </ownedLiteral>
          <ownedLiteral xmi:id="_3ADC7B74022D4161A95103E3" name="out">
            <ownedComment xmi:id="_rpV_NxTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D4161A95103E3">
              <body>Indicates that parameter values are passed from a behavioral element out to the caller.</body>
            </ownedComment>
          </ownedLiteral>
          <ownedLiteral xmi:id="_3ADC7B74022D4161A9580339" name="return">
            <ownedComment xmi:id="_rpV_OxTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D4161A9580339">
              <body>Indicates that parameter values are passed as return values from a behavioral element back to the caller.</body>
            </ownedComment>
          </ownedLiteral>
        </packagedElement>
        <packagedElement xmi:type="uml:Enumeration" xmi:id="_3ADC7B74022D41C2D6020188" name="VisibilityKind" visibility="private">
          <ownedComment xmi:id="_rpfwPBTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D41C2D6020188">
            <body>VisibilityKind is an enumeration type that defines literals to determine the visibility of elements in a model.</body>
          </ownedComment>
          <ownedOperation xmi:id="_3ADC7B74022D42EE305C00E3" name="bestVisibility" isQuery="true" bodyCondition="_rpfwRRTaEdqZu-3Jy1-uYg">
            <ownedComment xmi:id="_rpfwQBTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D42EE305C00E3">
              <body>The query bestVisibility() examines a set of VisibilityKinds, and returns public as the preferred visibility.</body>
            </ownedComment>
            <ownedRule xmi:id="_rpfwRRTaEdqZu-3Jy1-uYg" name="spec" constrainedElement="_3ADC7B74022D42EE305C00E3">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_rpfwRhTaEdqZu-3Jy1-uYg">
                <language>OCL</language>
                <body>result = if vis->includes(#public) then #public else #private endif</body>
              </specification>
            </ownedRule>
            <ownedParameter xmi:id="_rpfwQxTaEdqZu-3Jy1-uYg" type="_3ADC7B74022D41C2D6020188" direction="return"/>
            <ownedParameter xmi:id="_3ADC7B74022D42EE668803C7" name="vis" type="_3ADC7B74022D41C2D6020188">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Ggfn0RTbEdqZu-3Jy1-uYg" value="*"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Ggfn0BTbEdqZu-3Jy1-uYg"/>
            </ownedParameter>
          </ownedOperation>
          <ownedLiteral xmi:id="_3ADC7B74022D41C2D6140206" name="public">
            <ownedComment xmi:id="_rpfwShTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D41C2D6140206">
              <body>A public element is visible to all elements that can access the contents of the namespace that owns it.</body>
            </ownedComment>
          </ownedLiteral>
          <ownedLiteral xmi:id="_3ADC7B74022D41C2D61D0245" name="private">
            <ownedComment xmi:id="_rpo6IxTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D41C2D61D0245">
              <body>A private element is only visible inside the namespace that owns it.</body>
            </ownedComment>
          </ownedLiteral>
          <ownedLiteral xmi:id="_3ADC7B74022D430C9A570218" name="protected">
            <ownedComment xmi:id="_rpo6JxTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D430C9A570218">
              <body>A protected element is visible to elements that have a generalization relationship to the namespace that owns it.</body>
            </ownedComment>
          </ownedLiteral>
          <ownedLiteral xmi:id="_3ADC7B74022D430C9A60004E" name="package">
            <ownedComment xmi:id="_rpo6KxTaEdqZu-3Jy1-uYg" annotatedElement="_3ADC7B74022D430C9A60004E">
              <body>A package element is owned by a namespace that is not a package, and is visible to elements that are in the same package as its owning namespace. Only named elements that are not owned by packages can be marked as having package visibility.  Any element marked as having package visibility is visible to all elements within the nearest enclosing package (given that other owning elements have proper visibility).  Outside the nearest enclosing package, an element marked as having package visibility is not visible.</body>
            </ownedComment>
          </ownedLiteral>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_3ADC7B74022D3DE6C94B00D6" name="A_type_typedElement" memberEnd="_3ADC7B74022D3DE6C94D0011 _3ADC7B74022D3DE6C94D001B">
          <ownedEnd xmi:id="_3ADC7B74022D3DE6C94D001B" type="_3ADC7B74022D3DE6C3F20254" association="_3ADC7B74022D3DE6C94B00D6">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_E-X8QVopEduDzLNvRu8ZxQ" value="*"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_E-X8QFopEduDzLNvRu8ZxQ"/>
          </ownedEnd>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_3ADC7B74022D3DE6E2E1037E" name="A_ownedAttribute_class" memberEnd="_3ADC7B74022D3DE6E2E2028F _3ADC7B74022D3DE6E2E20299"/>
        <packagedElement xmi:type="uml:Association" xmi:id="_3ADC7B74022D3DE6E30E0260" name="A_ownedOperation_class" memberEnd="_3ADC7B74022D3DE6E30F008B _3ADC7B74022D3DE6E30F0095"/>
        <packagedElement xmi:type="uml:Association" xmi:id="_3ADC7B74022D3DE6E40802BA" name="A_ownedEnd_owningAssociation" memberEnd="_3ADC7B74022D3DE6E409010C _3ADC7B74022D3DE6E4090120"/>
        <packagedElement xmi:type="uml:Association" xmi:id="_3ADC7B74022D3DE6E42D0385" name="A_attribute_classifier" memberEnd="_3ADC7B74022D3DE6E42E034A _3ADC7B74022D3DE6E42E035E">
          <ownedEnd xmi:id="_3ADC7B74022D3DE6E42E035E" name="classifier" type="_3ADC7B74022D3DE6C8630317" subsettedProperty="_3ADC7B74022D3DFCBDBD028D" association="_3ADC7B74022D3DE6E42D0385">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rqFmGBTaEdqZu-3Jy1-uYg" value="1"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rqFmFxTaEdqZu-3Jy1-uYg"/>
          </ownedEnd>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_3ADC7B74022D3DE6E70F039A" name="A_redefinedProperty_property" memberEnd="_3ADC7B74022D3DE6E711018A _3ADC7B74022D3DE6E711019E">
          <ownedEnd xmi:id="_3ADC7B74022D3DE6E711019E" type="_3ADC7B74022D3DE6D57500AC" association="_3ADC7B74022D3DE6E70F039A">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WaSO8VooEduDzLNvRu8ZxQ" value="*"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_WaSO8FooEduDzLNvRu8ZxQ"/>
          </ownedEnd>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_3ADC7B74022D3DE6E7410360" name="A_subsettedProperty_property" memberEnd="_3ADC7B74022D3DE6E7430363 _3ADC7B74022D3DE6E7430381">
          <ownedEnd xmi:id="_3ADC7B74022D3DE6E7430381" type="_3ADC7B74022D3DE6D57500AC" association="_3ADC7B74022D3DE6E7410360">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_arRjAVooEduDzLNvRu8ZxQ" value="*"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_arRjAFooEduDzLNvRu8ZxQ"/>
          </ownedEnd>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_3ADC7B74022D3DE6E7650159" name="A_opposite_property" memberEnd="_3ADC7B74022D3DE6E76603BD _3ADC7B74022D3DE6E76603DB">
          <ownedEnd xmi:id="_3ADC7B74022D3DE6E76603DB" type="_3ADC7B74022D3DE6D57500AC" association="_3ADC7B74022D3DE6E7650159">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_eIaYQVooEduDzLNvRu8ZxQ" value="1"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_eIaYQFooEduDzLNvRu8ZxQ"/>
          </ownedEnd>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_3ADC7B74022D3DE6E8DE0061" name="A_superClass_class" memberEnd="_3ADC7B74022D3DE6E8DF0225 _3ADC7B74022D3DE6E8DF022F">
          <ownedEnd xmi:id="_3ADC7B74022D3DE6E8DF022F" type="_3ADC7B74022D3DE6D5AD039B" association="_3ADC7B74022D3DE6E8DE0061">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sklG4VooEduDzLNvRu8ZxQ" value="*"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_sklG4FooEduDzLNvRu8ZxQ"/>
          </ownedEnd>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_3ADC7B74022D3DE75D86027E" name="A_endType_association" memberEnd="_3ADC7B74022D3DE75D87003B _3ADC7B74022D3DE75D87004F">
          <ownedEnd xmi:id="_3ADC7B74022D3DE75D87004F" type="_3ADC7B74022D3DE6E15D033A" association="_3ADC7B74022D3DE75D86027E">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_PGi7kVooEduDzLNvRu8ZxQ" value="*"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_PGi7kFooEduDzLNvRu8ZxQ"/>
          </ownedEnd>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_3ADC7B74022D3DE6D3850275" name="A_ownedLiteral_enumeration" memberEnd="_3ADC7B74022D3DE6D38600DC _3ADC7B74022D3DE6D38600E6"/>
        <packagedElement xmi:type="uml:Association" xmi:id="_3ADC7B74022D3DE6E2280287" name="A_ownedAttribute_datatype" memberEnd="_3ADC7B74022D3DE6E2290152 _3ADC7B74022D3DE6E2290166"/>
        <packagedElement xmi:type="uml:Association" xmi:id="_3ADC7B74022D3DE6E23D0179" name="A_ownedOperation_datatype" memberEnd="_3ADC7B74022D3DE6E23E008A _3ADC7B74022D3DE6E23E0094"/>
        <packagedElement xmi:type="uml:Association" xmi:id="_3ADC7B74022D3DE7654A013C" name="A_raisedException_operation" memberEnd="_3ADC7B74022D3DE7654A0345 _3ADC7B74022D3DE7654A0381">
          <ownedEnd xmi:id="_3ADC7B74022D3DE7654A0381" type="_3ADC7B74022D3DE6D56F031A" association="_3ADC7B74022D3DE7654A013C">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_l8HTMVoqEduDzLNvRu8ZxQ" value="*"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_l8HTMFoqEduDzLNvRu8ZxQ"/>
          </ownedEnd>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_3ADC7B74022D3DE767BB0358" name="A_redefinedOperation_operation" memberEnd="_3ADC7B74022D3DE767BD001B _3ADC7B74022D3DE767BD0043">
          <ownedEnd xmi:id="_3ADC7B74022D3DE767BD0043" type="_3ADC7B74022D3DE6D56F031A" association="_3ADC7B74022D3DE767BB0358">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_h-fnEVoqEduDzLNvRu8ZxQ" value="*"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_h-fnEFoqEduDzLNvRu8ZxQ"/>
          </ownedEnd>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_3ADC7B74022D3DE76378015A" name="A_ownedParameter_ownerFormalParam" memberEnd="_3ADC7B74022D3DE7637803DB _3ADC7B74022D3DE7637901B6">
          <ownedEnd xmi:id="_3ADC7B74022D3DE7637901B6" name="ownerFormalParam" type="_3ADC7B74022D3DE7632A0090" subsettedProperty="_3ADC7B74022D3DFCB86501A0" association="_3ADC7B74022D3DE76378015A">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rq10GBTaEdqZu-3Jy1-uYg" value="1"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rq10FxTaEdqZu-3Jy1-uYg"/>
          </ownedEnd>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_3ADC7B74022D3DE7651002AB" name="A_raisedException_behavioralFeature" memberEnd="_3ADC7B74022D3DE76511013A _3ADC7B74022D3DE76511016C">
          <ownedEnd xmi:id="_3ADC7B74022D3DE76511016C" type="_3ADC7B74022D3DE7632A0090" association="_3ADC7B74022D3DE7651002AB">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0_lu4VopEduDzLNvRu8ZxQ" value="*"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0_lu4FopEduDzLNvRu8ZxQ"/>
          </ownedEnd>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_3ADC7B74022D3DEE234A0342" name="A_importedMember_namespace" memberEnd="_3ADC7B74022D3DEE234B0163 _3ADC7B74022D3DEE234B0181">
          <ownedEnd xmi:id="_3ADC7B74022D3DEE234B0181" type="_3ADC7B74022D3DE6C03E0388" association="_3ADC7B74022D3DEE234A0342">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pG4bgVopEduDzLNvRu8ZxQ" value="*"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_pG4bgFopEduDzLNvRu8ZxQ"/>
          </ownedEnd>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_3ADC7B74022D3DE6DEFE0106" name="A_importedPackage_packageImport" memberEnd="_3ADC7B74022D3DE6DEFF023E _3ADC7B74022D3DE6DEFF0252">
          <ownedEnd xmi:id="_3ADC7B74022D3DE6DEFF0252" type="_3ADC7B74022D3DE6D5E002D7" association="_3ADC7B74022D3DE6DEFE0106">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k0_vkVopEduDzLNvRu8ZxQ" value="*"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k0_vkFopEduDzLNvRu8ZxQ"/>
          </ownedEnd>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_3ADC7B74022D3DE6DF68013A" name="A_importedElement_elementImport" memberEnd="_3ADC7B74022D3DE6DF6803A7 _3ADC7B74022D3DE6DF6803B1">
          <ownedEnd xmi:id="_3ADC7B74022D3DE6DF6803B1" type="_3ADC7B74022D3DE6D5E7016E" association="_3ADC7B74022D3DE6DF68013A">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_i6z60VopEduDzLNvRu8ZxQ" value="*"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_i6z60FopEduDzLNvRu8ZxQ"/>
          </ownedEnd>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_3ADC7B74022D3DE6E0040076" name="A_elementImport_importingNamespace" memberEnd="_3ADC7B74022D3DE6E0040315 _3ADC7B74022D3DE6E0040317"/>
        <packagedElement xmi:type="uml:Association" xmi:id="_3ADC7B74022D3DE6E00900B0" name="A_packageImport_importingNamespace" memberEnd="_3ADC7B74022D3DE6E00902C3 _3ADC7B74022D3DE6E00902D7"/>
        <packagedElement xmi:type="uml:Association" xmi:id="_3ADC7B74022D3DE6E0F402CA" name="A_packagedElement_owningPackage" memberEnd="_3ADC7B74022D3DE6E0F500FF _3ADC7B74022D3DE6E0F50113">
          <ownedEnd xmi:id="_3ADC7B74022D3DE6E0F50113" name="owningPackage" type="_3ADC7B74022D3DE6D5DA0183" subsettedProperty="_3ADC7B74022D3DFCB86501A0" association="_3ADC7B74022D3DE6E0F402CA">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rrR47RTaEdqZu-3Jy1-uYg" value="1"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rrR47BTaEdqZu-3Jy1-uYg"/>
          </ownedEnd>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_3ADC7B74022D3DEE344602C4" name="A_ownedType_package" memberEnd="_3ADC7B74022D3DEE344701CC _3ADC7B74022D3DEE344701FE"/>
        <packagedElement xmi:type="uml:Association" xmi:id="_3ADC7B74022D3DE6E3EE01F4" name="A_memberEnd_association" memberEnd="_3ADC7B74022D3DE6E3EF0097 _3ADC7B74022D3DE6E3EF00AB"/>
        <packagedElement xmi:type="uml:Association" xmi:id="_3ADC7B74022D3DEE6FD102CF" name="A_nestedPackage_nestingPackage" memberEnd="_3ADC7B74022D3DEE6FD3029F _3ADC7B74022D3DEE6FD302F9"/>
        <packagedElement xmi:type="uml:Association" xmi:id="_3ADC7B74022D3DEE7BD90219" name="A_type_operation" memberEnd="_3ADC7B74022D3DEE7BDA017A _3ADC7B74022D3DEE7BDA01A2">
          <ownedEnd xmi:id="_3ADC7B74022D3DEE7BDA01A2" type="_3ADC7B74022D3DE6D56F031A" association="_3ADC7B74022D3DEE7BD90219">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oI7JAVoqEduDzLNvRu8ZxQ" value="*"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oI7JAFoqEduDzLNvRu8ZxQ"/>
          </ownedEnd>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_3ADC7B74022D3DF68066000C" name="A_receivingPackage_packageMerge" memberEnd="_3ADC7B74022D3DF68066000D _3ADC7B74022D3DF68066000E"/>
        <packagedElement xmi:type="uml:Association" xmi:id="_3ADC7B74022D3DF6806A03A1" name="A_mergedPackage_packageMerge" memberEnd="_3ADC7B74022D3DF6806A03A2 _3ADC7B74022D3DF6806A03A3">
          <ownedEnd xmi:id="_3ADC7B74022D3DF6806A03A3" type="_3ADC7B74022D3DEE8DFE0290" association="_3ADC7B74022D3DF6806A03A1">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_aFq0MVorEduDzLNvRu8ZxQ" value="*"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_aFq0MForEduDzLNvRu8ZxQ"/>
          </ownedEnd>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_3ADC7B74022D3DFCA805021A" name="A_ownedElement_owner" memberEnd="_3ADC7B74022D3DFCA80700B4 _3ADC7B74022D3DFCA80700BE"/>
        <packagedElement xmi:type="uml:Association" xmi:id="_3ADC7B74022D3DFCAADB020A" name="A_annotatedElement_comment" memberEnd="_3ADC7B74022D3DFCAADC01BB _3ADC7B74022D3DFCAADC01D9">
          <ownedEnd xmi:id="_3ADC7B74022D3DFCAADC01D9" type="_3ADC7B74022D41781AA6038F" association="_3ADC7B74022D3DFCAADB020A">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_5bF7wVonEduDzLNvRu8ZxQ" value="*"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_5bF7wFonEduDzLNvRu8ZxQ"/>
          </ownedEnd>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_3ADC7B74022D3DFCAC2E0366" name="A_relatedElement_relationship" memberEnd="_3ADC7B74022D3DFCAC2F019B _3ADC7B74022D3DFCAC2F01AF">
          <ownedEnd xmi:id="_3ADC7B74022D3DFCAC2F01AF" type="_3ADC7B74022D3DE6C8270177" association="_3ADC7B74022D3DFCAC2E0366">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_xkxfwVonEduDzLNvRu8ZxQ" value="*"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_xkxfwFonEduDzLNvRu8ZxQ"/>
          </ownedEnd>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_3ADC7B74022D3DFCAC780308" name="A_source_directedRelationship" memberEnd="_3ADC7B74022D3DFCAC7900D9 _3ADC7B74022D3DFCAC790101">
          <ownedEnd xmi:id="_3ADC7B74022D3DFCAC790101" type="_3ADC7B74022D3DE6C82E03E4" association="_3ADC7B74022D3DFCAC780308">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zRHFwVonEduDzLNvRu8ZxQ" value="*"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_zRHFwFonEduDzLNvRu8ZxQ"/>
          </ownedEnd>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_3ADC7B74022D3DFCACAE01F7" name="A_target_directedRelationship" memberEnd="_3ADC7B74022D3DFCACAF0090 _3ADC7B74022D3DFCACAF00AE">
          <ownedEnd xmi:id="_3ADC7B74022D3DFCACAF00AE" type="_3ADC7B74022D3DE6C82E03E4" association="_3ADC7B74022D3DFCACAE01F7">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_z7SEIVonEduDzLNvRu8ZxQ" value="*"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_z7SEIFonEduDzLNvRu8ZxQ"/>
          </ownedEnd>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_3ADC7B74022D3DFCBDBD0034" name="A_redefinitionContext_redefinableElement" memberEnd="_3ADC7B74022D3DFCBDBD028D _3ADC7B74022D3DFCBDBD02BF">
          <ownedEnd xmi:id="_3ADC7B74022D3DFCBDBD02BF" type="_3ADC7B74022D3DE6C81D0244" association="_3ADC7B74022D3DFCBDBD0034">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_6jQBMVooEduDzLNvRu8ZxQ" value="*"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_6jQBMFooEduDzLNvRu8ZxQ"/>
          </ownedEnd>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_3ADC7B74022D3DFCBE1D0317" name="A_redefinedElement_redefinableElement" memberEnd="_3ADC7B74022D3DFCBE1F00FD _3ADC7B74022D3DFCBE1F0111">
          <ownedEnd xmi:id="_3ADC7B74022D3DFCBE1F0111" type="_3ADC7B74022D3DE6C81D0244" association="_3ADC7B74022D3DFCBE1D0317">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__ZMccVooEduDzLNvRu8ZxQ" value="*"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="__ZMccFooEduDzLNvRu8ZxQ"/>
          </ownedEnd>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_3ADC7B74022D3DFCBE7F0137" name="A_feature_featuringClassifier" memberEnd="_3ADC7B74022D3DFCBE7F0246 _3ADC7B74022D3DFCBE7F025A"/>
        <packagedElement xmi:type="uml:Association" xmi:id="_3ADC7B74022D3DFCC85C000C" name="A_constrainedElement_constraint" memberEnd="_3ADC7B74022D3DFCC85C023D _3ADC7B74022D3DFCC85C026F">
          <ownedEnd xmi:id="_3ADC7B74022D3DFCC85C026F" type="_3ADC7B74022D3DE766450007" association="_3ADC7B74022D3DFCC85C000C">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_VH6ysVopEduDzLNvRu8ZxQ" value="*"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_VH6ysFopEduDzLNvRu8ZxQ"/>
          </ownedEnd>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_3ADC7B74022D3DFCC88D0157" name="A_specification_owningConstraint" memberEnd="_3ADC7B74022D3DFCC88D0337 _3ADC7B74022D3DFCC88D0341">
          <ownedEnd xmi:id="_3ADC7B74022D3DFCC88D0341" name="owningConstraint" type="_3ADC7B74022D3DE766450007" subsettedProperty="_3ADC7B74022D3DFCA80700BE" association="_3ADC7B74022D3DFCC88D0157">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rseLuhTaEdqZu-3Jy1-uYg" value="1"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rseLuRTaEdqZu-3Jy1-uYg"/>
          </ownedEnd>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_3ADC7B74022D3E0270BC02FC" name="A_general_classifier" memberEnd="_3ADC7B74022D3E0270BE0395 _3ADC7B74022D3E0270BE03C7">
          <ownedEnd xmi:id="_3ADC7B74022D3E0270BE03C7" type="_3ADC7B74022D3DE6C8630317" association="_3ADC7B74022D3E0270BC02FC">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_8cieEVooEduDzLNvRu8ZxQ" value="*"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_8cieEFooEduDzLNvRu8ZxQ"/>
          </ownedEnd>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_3ADC7B74022D3DFCB86303CD" name="A_ownedMember_namespace" memberEnd="_3ADC7B74022D3DFCB8650177 _3ADC7B74022D3DFCB86501A0"/>
        <packagedElement xmi:type="uml:Association" xmi:id="_3ADC7B74022D3DFCB82E022D" name="A_member_namespace" memberEnd="_3ADC7B74022D3DFCB82F00DA _3ADC7B74022D3DFCB82F00F8">
          <ownedEnd xmi:id="_3ADC7B74022D3DFCB82F00F8" type="_3ADC7B74022D3DE6C03E0388" association="_3ADC7B74022D3DFCB82E022D">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_gR1GYVopEduDzLNvRu8ZxQ" value="*"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_gR1GYFopEduDzLNvRu8ZxQ"/>
          </ownedEnd>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_3ADC7B74022D3E5563050088" name="A_operand_expression" memberEnd="_3ADC7B74022D3E55630701F3 _3ADC7B74022D3E5563070207">
          <ownedEnd xmi:id="_3ADC7B74022D3E5563070207" name="expression" type="_3ADC7B74022D3E555F19002A" subsettedProperty="_3ADC7B74022D3DFCA80700BE" association="_3ADC7B74022D3E5563050088">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rsxtwBTaEdqZu-3Jy1-uYg" value="1"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rsxtvxTaEdqZu-3Jy1-uYg"/>
          </ownedEnd>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_3ADC7B74022D40F14BFF0313" name="A_navigableOwnedEnd_association" memberEnd="_3ADC7B74022D40F14C010058 _3ADC7B74022D40F14C010062">
          <ownedEnd xmi:id="_3ADC7B74022D40F14C010062" type="_3ADC7B74022D3DE6E15D033A" association="_3ADC7B74022D40F14BFF0313">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jLw9YVooEduDzLNvRu8ZxQ" value="1"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_jLw9YFooEduDzLNvRu8ZxQ"/>
          </ownedEnd>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_3ADC7B74022D4161AA250298" name="A_ownedParameter_operation" memberEnd="_3ADC7B74022D4161AA270132 _3ADC7B74022D4161AA27013C"/>
        <packagedElement xmi:type="uml:Association" xmi:id="_3ADC7B74022D41781AB701BD" name="A_ownedComment_owningElement" memberEnd="_3ADC7B74022D41781AB80146 _3ADC7B74022D41781AB80148">
          <ownedEnd xmi:id="_3ADC7B74022D41781AB80148" name="owningElement" type="_3ADC7B74022D3DE6BAB70076" subsettedProperty="_3ADC7B74022D3DFCA80700BE" association="_3ADC7B74022D41781AB701BD">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rs63sxTaEdqZu-3Jy1-uYg" value="1"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rs63shTaEdqZu-3Jy1-uYg"/>
          </ownedEnd>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_3ADC7B74022D4304A1300282" name="A_inheritedMember_classifier" memberEnd="_3ADC7B74022D4304A13201D9 _3ADC7B74022D4304A13201ED">
          <ownedEnd xmi:id="_3ADC7B74022D4304A13201ED" type="_3ADC7B74022D3DE6C8630317" association="_3ADC7B74022D4304A1300282">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_CWbpoVopEduDzLNvRu8ZxQ" value="*"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_CWbpoFopEduDzLNvRu8ZxQ"/>
          </ownedEnd>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_nWbKEB-yEdqIE6mxof-rZA" name="A_precondition_preContext" memberEnd="_nWbKER-yEdqIE6mxof-rZA _nWbKEh-yEdqIE6mxof-rZA">
          <ownedEnd xmi:id="_nWbKEh-yEdqIE6mxof-rZA" name="preContext" type="_3ADC7B74022D3DE6D56F031A" subsettedProperty="_s_9I8h-zEdqIE6mxof-rZA" association="_nWbKEB-yEdqIE6mxof-rZA">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__kScQR-yEdqIE6mxof-rZA" value="1"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="__kScQB-yEdqIE6mxof-rZA"/>
          </ownedEnd>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_s0ANEB-yEdqIE6mxof-rZA" name="A_postcondition_postContext" memberEnd="_s0ANER-yEdqIE6mxof-rZA _s0ANEh-yEdqIE6mxof-rZA">
          <ownedEnd xmi:id="_s0ANEh-yEdqIE6mxof-rZA" name="postContext" type="_3ADC7B74022D3DE6D56F031A" subsettedProperty="_s_9I8h-zEdqIE6mxof-rZA" association="_s0ANEB-yEdqIE6mxof-rZA">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_6bRUAR-yEdqIE6mxof-rZA" value="1"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_6bRUAB-yEdqIE6mxof-rZA"/>
          </ownedEnd>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_uPMYsB-yEdqIE6mxof-rZA" name="A_bodyCondition_bodyContext" memberEnd="_uPMYsR-yEdqIE6mxof-rZA _uPMYsh-yEdqIE6mxof-rZA">
          <ownedEnd xmi:id="_uPMYsh-yEdqIE6mxof-rZA" name="bodyContext" type="_3ADC7B74022D3DE6D56F031A" subsettedProperty="_s_9I8h-zEdqIE6mxof-rZA" association="_uPMYsB-yEdqIE6mxof-rZA">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_w8DAgR-yEdqIE6mxof-rZA" value="1"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_w8DAgB-yEdqIE6mxof-rZA"/>
          </ownedEnd>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_s_9I8B-zEdqIE6mxof-rZA" name="A_ownedRule_context" memberEnd="_s_9I8R-zEdqIE6mxof-rZA _s_9I8h-zEdqIE6mxof-rZA"/>
      </packagedElement>
    </packagedElement>
  </uml:Model>
  <Ecore:EReference xmi:id="_DeIvwMYdEduPJbEsMYXjUQ" isTransient="true"/>
  <Ecore:EReference xmi:id="_DeIvwcYdEduPJbEsMYXjUQ" isTransient="true"/>
  <Ecore:EAttribute xmi:id="_DeIvwsYdEduPJbEsMYXjUQ" isUnsettable="true"/>
  <Ecore:EAttribute xmi:id="_DeIvw8YdEduPJbEsMYXjUQ" isTransient="true"/>
  <Ecore:EReference xmi:id="_DeIvxMYdEduPJbEsMYXjUQ" isTransient="true"/>
  <Ecore:EOperation xmi:id="_DeSgwMYdEduPJbEsMYXjUQ" operationName="getQualifiedName" visibility="None"/>
  <Ecore:EReference xmi:id="_DeSgwcYdEduPJbEsMYXjUQ" isTransient="true"/>
  <Ecore:EReference xmi:id="_DeSgwsYdEduPJbEsMYXjUQ" isTransient="true"/>
  <Ecore:EReference xmi:id="_DeSgw8YdEduPJbEsMYXjUQ" isTransient="true"/>
  <Ecore:EReference xmi:id="_DeSgxMYdEduPJbEsMYXjUQ" isTransient="true"/>
  <Ecore:EAttribute xmi:id="_DeSgxcYdEduPJbEsMYXjUQ" isUnsettable="true" xmlFeatureKind="Element"/>
  <Ecore:EAttribute xmi:id="_DeSgxsYdEduPJbEsMYXjUQ" isUnsettable="true"/>
  <Ecore:EAttribute xmi:id="_DeSgx8YdEduPJbEsMYXjUQ" isUnsettable="true"/>
  <Ecore:EAttribute xmi:id="_DeSgyMYdEduPJbEsMYXjUQ" isTransient="true"/>
  <Ecore:EAttribute xmi:id="_DecRwMYdEduPJbEsMYXjUQ" isTransient="true"/>
  <Ecore:EOperation xmi:id="_DecRwcYdEduPJbEsMYXjUQ" operationName="getLower" visibility="None"/>
  <Ecore:EOperation xmi:id="_DecRwsYdEduPJbEsMYXjUQ" operationName="getUpper" visibility="None"/>
  <Ecore:EReference xmi:id="_DecRw8YdEduPJbEsMYXjUQ" isTransient="true"/>
  <Ecore:EReference xmi:id="_DecRxMYdEduPJbEsMYXjUQ" isTransient="true"/>
  <Ecore:EReference xmi:id="_DecRxcYdEduPJbEsMYXjUQ" isTransient="true"/>
  <Ecore:EReference xmi:id="_DecRxsYdEduPJbEsMYXjUQ" isTransient="true"/>
  <Ecore:EOperation xmi:id="_DecRx8YdEduPJbEsMYXjUQ" operationName="getGenerals"/>
  <Ecore:EAttribute xmi:id="_DecRyMYdEduPJbEsMYXjUQ" isUnsettable="true" xmlFeatureKind="Element"/>
  <Ecore:EReference xmi:id="_DecRycYdEduPJbEsMYXjUQ" isTransient="true"/>
  <Ecore:EReference xmi:id="_DelbsMYdEduPJbEsMYXjUQ" isTransient="true"/>
  <Ecore:EReference xmi:id="_DelbscYdEduPJbEsMYXjUQ" isTransient="true"/>
  <Ecore:EReference xmi:id="_DelbssYdEduPJbEsMYXjUQ" isTransient="true"/>
  <Ecore:EReference xmi:id="_Delbs8YdEduPJbEsMYXjUQ" isTransient="true"/>
  <Ecore:EReference xmi:id="_DelbtMYdEduPJbEsMYXjUQ" isTransient="true"/>
  <Ecore:EAttribute xmi:id="_DelbtcYdEduPJbEsMYXjUQ" isUnsettable="true"/>
  <Ecore:EReference xmi:id="_DelbtsYdEduPJbEsMYXjUQ" isTransient="true"/>
  <Ecore:EOperation xmi:id="_Delbt8YdEduPJbEsMYXjUQ" operationName="getInheritedMembers"/>
  <Ecore:EAttribute xmi:id="_DelbuMYdEduPJbEsMYXjUQ" isUnsettable="true" base_Property="_3ADC7B74022D3CB5A28802FF"/>
  <Ecore:EDataType xmi:id="_DevMsMYdEduPJbEsMYXjUQ" instanceClassName="int" base_PrimitiveType="_3ADC7B74022D3CA010A4007B"/>
  <Ecore:EDataType xmi:id="_De49sMYdEduPJbEsMYXjUQ" instanceClassName="boolean" base_PrimitiveType="_3ADC7B74022D3CA010AC0090"/>
  <Ecore:EDataType xmi:id="_De49scYdEduPJbEsMYXjUQ" instanceClassName="java.lang.String" base_PrimitiveType="_3ADC7B74022D3CA010B103C3"/>
  <Ecore:EDataType xmi:id="_De49ssYdEduPJbEsMYXjUQ" instanceClassName="int" base_PrimitiveType="_3ADC7B74022D3DE6A93C0003"/>
  <Ecore:EAttribute xmi:id="_De49s8YdEduPJbEsMYXjUQ" isUnsettable="true"/>
  <Ecore:EAttribute xmi:id="_De49tMYdEduPJbEsMYXjUQ" isUnsettable="true"/>
  <Ecore:EAttribute xmi:id="_DfCHoMYdEduPJbEsMYXjUQ" isUnsettable="true" xmlFeatureKind="Element"/>
  <Ecore:EReference xmi:id="_DfCHocYdEduPJbEsMYXjUQ" isTransient="true" base_Property="_3ADC7B74022D3DE6E42E034A"/>
  <Ecore:EReference xmi:id="_DfCHosYdEduPJbEsMYXjUQ" isTransient="true" base_Property="_3ADC7B74022D3DFCBE7F0246"/>
  <Ecore:EReference xmi:id="_DfCHo8YdEduPJbEsMYXjUQ" isTransient="true" base_Property="_3ADC7B74022D4304A13201D9"/>
  <Ecore:EOperation xmi:id="_DfCHpMYdEduPJbEsMYXjUQ" base_Operation="_3ADC7B74022D42EE305C00D9" operationName="getGenerals"/>
  <Ecore:EOperation xmi:id="_DfCHpcYdEduPJbEsMYXjUQ" base_Operation="_3ADC7B74022D42EE305C00F1" operationName="getInheritedMembers"/>
  <Ecore:EReference xmi:id="_DfCHpsYdEduPJbEsMYXjUQ" isTransient="true" base_Property="_3ADC7B74022D3DFCAC7900D9"/>
  <Ecore:EReference xmi:id="_DfCHp8YdEduPJbEsMYXjUQ" isTransient="true" base_Property="_3ADC7B74022D3DFCACAF0090"/>
  <Ecore:EReference xmi:id="_DfCHqMYdEduPJbEsMYXjUQ" isTransient="true" base_Property="_3ADC7B74022D3DFCA80700B4"/>
  <Ecore:EReference xmi:id="_DfCHqcYdEduPJbEsMYXjUQ" isTransient="true" base_Property="_3ADC7B74022D3DFCA80700BE"/>
  <Ecore:EReference xmi:id="_DfCHqsYdEduPJbEsMYXjUQ" isTransient="true" base_Property="_3ADC7B74022D3DFCBE7F025A"/>
  <Ecore:EReference xmi:id="_DfL4oMYdEduPJbEsMYXjUQ" isTransient="true" base_Property="_3ADC7B74022D3DEE234B0163"/>
  <Ecore:EReference xmi:id="_DfL4ocYdEduPJbEsMYXjUQ" isTransient="true" base_Property="_3ADC7B74022D3DFCB8650177"/>
  <Ecore:EReference xmi:id="_DfL4osYdEduPJbEsMYXjUQ" isTransient="true" base_Property="_3ADC7B74022D3DFCB82F00DA"/>
  <Ecore:EOperation xmi:id="_DfL4o8YdEduPJbEsMYXjUQ" base_Operation="_3ADC7B74022D3E142ABF004B" operationName="getImportedMembers"/>
  <Ecore:EReference xmi:id="_DfL4pMYdEduPJbEsMYXjUQ" isTransient="true" base_Property="_3ADC7B74022D3DFCBDBD028D"/>
  <Ecore:EReference xmi:id="_DfL4pcYdEduPJbEsMYXjUQ" isTransient="true" base_Property="_3ADC7B74022D3DFCBE1F00FD"/>
  <Ecore:EReference xmi:id="_DfL4psYdEduPJbEsMYXjUQ" isTransient="true" base_Property="_3ADC7B74022D3DFCAC2F019B"/>
  <Ecore:EReference xmi:id="_DfL4p8YdEduPJbEsMYXjUQ" isTransient="true" base_Property="_3ADC7B74022D3DE75D87003B"/>
  <Ecore:EAttribute xmi:id="_DfL4qMYdEduPJbEsMYXjUQ" isUnsettable="true" base_Property="_3ADC7B74022D4201104A02AF"/>
  <Ecore:EReference xmi:id="_DfL4qcYdEduPJbEsMYXjUQ" isTransient="true" base_Property="_3ADC7B74022D3DE6E76603BD"/>
  <Ecore:EOperation xmi:id="_DfVpoMYdEduPJbEsMYXjUQ" base_Operation="_3ADC7B74022D3E14246901E3" operationName="getOpposite" visibility="None"/>
  <Ecore:EAttribute xmi:id="_DfVpocYdEduPJbEsMYXjUQ" isUnsettable="true" xmlFeatureKind="Element" base_Property="_3ADC7B74022D41FC52E503B5"/>
  <Ecore:EAttribute xmi:id="_DfVposYdEduPJbEsMYXjUQ" isUnsettable="true" base_Property="_3ADC7B74022D41FC52EF0215"/>
  <Ecore:EAttribute xmi:id="_DfVpo8YdEduPJbEsMYXjUQ" isTransient="true" base_Property="_3ADC7B74022D3E03284C0289"/>
  <Ecore:EAttribute xmi:id="_DfVppMYdEduPJbEsMYXjUQ" isTransient="true" base_Property="_3ADC7B74022D3E032859015B"/>
  <Ecore:EAttribute xmi:id="_DfVppcYdEduPJbEsMYXjUQ" isTransient="true" base_Property="_3ADC7B74022D3E0328B001D9"/>
  <Ecore:EAttribute xmi:id="_DfVppsYdEduPJbEsMYXjUQ" isTransient="true" base_Property="_3ADC7B74022D3E0328710341"/>
  <Ecore:EReference xmi:id="_DfVpp8YdEduPJbEsMYXjUQ" isTransient="true" base_Property="_3ADC7B74022D3DEE7BDA017A"/>
  <Ecore:EOperation xmi:id="_DfVpqMYdEduPJbEsMYXjUQ" base_Operation="_3ADC7B74022D3E142F3E03CB" operationName="lowerBound"/>
  <Ecore:EOperation xmi:id="_DfVpqcYdEduPJbEsMYXjUQ" base_Operation="_3ADC7B74022D3E142F7500B3" operationName="upperBound"/>
  <Ecore:EOperation xmi:id="_DfVpqsYdEduPJbEsMYXjUQ" base_Operation="_3ADC7B74022D3E142FBB01EA" operationName="getType" visibility="None"/>
  <Ecore:EAttribute xmi:id="_DfVpq8YdEduPJbEsMYXjUQ" isUnsettable="true" base_Property="_3ADC7B74022D3DE7647D021E"/>
  <Ecore:EAttribute xmi:id="_DfVprMYdEduPJbEsMYXjUQ" isUnsettable="true" base_Property="_3ADC7B74022D3DEE875F0333"/>
  <Ecore:EReference xmi:id="_DfVprcYdEduPJbEsMYXjUQ" isTransient="true" base_Property="_3ADC7B74022D3DEE344701CC"/>
  <Ecore:EReference xmi:id="_DfVprsYdEduPJbEsMYXjUQ" isTransient="true" base_Property="_3ADC7B74022D3DEE6FD3029F"/>
  <Ecore:EReference xmi:id="_DfVpr8YdEduPJbEsMYXjUQ" isTransient="true" base_Property="_3ADC7B74022D3DEE6FD302F9"/>
  <Ecore:EReference xmi:id="_DfVpsMYdEduPJbEsMYXjUQ" isTransient="true" base_Property="_3ADC7B74022D3DEE344701FE"/>
  <Ecore:EAttribute xmi:id="_DfVpscYdEduPJbEsMYXjUQ" isUnsettable="true" base_Property="_3ADC7B74022D3DE6BF540255"/>
  <Ecore:EAttribute xmi:id="_DfVpssYdEduPJbEsMYXjUQ" isUnsettable="true" base_Property="_3ADC7B74022D41C2D63E00EE"/>
  <Ecore:EReference xmi:id="_DfVps8YdEduPJbEsMYXjUQ" isTransient="true" base_Property="_3ADC7B74022D3DFCB86501A0"/>
  <Ecore:EAttribute xmi:id="_DfVptMYdEduPJbEsMYXjUQ" isTransient="true" base_Property="_7-d1kIa_EdqhgMOAOWpjfQ"/>
  <Ecore:EOperation xmi:id="_DfVptcYdEduPJbEsMYXjUQ" base_Operation="_3ADC7B74022D42EE305C00A6" operationName="getQualifiedName" visibility="None"/>
  <Ecore:EAttribute xmi:id="_DfVptsYdEduPJbEsMYXjUQ" isUnsettable="true" xmlFeatureKind="Element" base_Property="_3ADC7B74022D41BDD0260325"/>
  <Ecore:EReference xmi:id="_DfezkMYdEduPJbEsMYXjUQ" isTransient="true"/>
  <Ecore:EReference xmi:id="_DfezkcYdEduPJbEsMYXjUQ" isTransient="true"/>
  <Ecore:EAttribute xmi:id="_DfezksYdEduPJbEsMYXjUQ" isTransient="true"/>
  <Ecore:EReference xmi:id="_Dfezk8YdEduPJbEsMYXjUQ" isTransient="true"/>
  <Ecore:EOperation xmi:id="_DfezlMYdEduPJbEsMYXjUQ" operationName="getMetaclass" visibility="None"/>
  <Ecore:EAttribute xmi:id="_DfezlcYdEduPJbEsMYXjUQ" isUnsettable="true"/>
  <Ecore:EAttribute xmi:id="_DfezlsYdEduPJbEsMYXjUQ" isUnsettable="true"/>
  <Ecore:EAttribute xmi:id="_Dfezl8YdEduPJbEsMYXjUQ" isUnsettable="true"/>
</xmi:XMI>
